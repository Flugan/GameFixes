;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; ATTRIBUTE                0   xy          0     NONE   float   xy  
; SV_VertexID              0   x           1   VERTID    uint   x   
; SV_InstanceID            0   x           2   INSTID    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                10   xyzw        0     NONE   float   xyzw
; TEXCOORD                11   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xyzw        2     NONE   float   xyzw
; TEXCOORD                 1   xyzw        3     NONE   float   xyzw
; TEXCOORD                 7   xyzw        4     NONE   float   xyzw
; TEXCOORD                 9   xyz         5     NONE   float   xyz 
; SV_Position              0   xyzw        6      POS   float   xyzw
;
; shader hash: 77f69e9f3f5bafd2660b05381c31e73c
;
; Pipeline Runtime Information: 
;
; Vertex Shader
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; ATTRIBUTE                0                              
; SV_VertexID              0                              
; SV_InstanceID            0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                10                 linear       
; TEXCOORD                11                 linear       
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 7                 linear       
; TEXCOORD                 9                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_TranslucentBasePass
; {
;
;   struct hostlayout.UniformBufferConstants_TranslucentBasePass
;   {
;
;       uint TranslucentBasePass_Shared_Forward_NumLocalLights;; Offset:    0
;       uint TranslucentBasePass_Shared_Forward_NumReflectionCaptures;; Offset:    4
;       uint TranslucentBasePass_Shared_Forward_HasDirectionalLight;; Offset:    8
;       uint TranslucentBasePass_Shared_Forward_NumGridCells;; Offset:   12
;       int3 TranslucentBasePass_Shared_Forward_CulledGridSize;; Offset:   16
;       uint TranslucentBasePass_Shared_Forward_MaxCulledLightsPerCell;; Offset:   28
;       uint TranslucentBasePass_Shared_Forward_LightGridPixelSizeShift;; Offset:   32
;       uint PrePadding_TranslucentBasePass_Shared_Forward_36;; Offset:   36
;       uint PrePadding_TranslucentBasePass_Shared_Forward_40;; Offset:   40
;       uint PrePadding_TranslucentBasePass_Shared_Forward_44;; Offset:   44
;       float3 TranslucentBasePass_Shared_Forward_LightGridZParams;; Offset:   48
;       float PrePadding_TranslucentBasePass_Shared_Forward_60;; Offset:   60
;       float3 TranslucentBasePass_Shared_Forward_DirectionalLightDirection;; Offset:   64
;       float TranslucentBasePass_Shared_Forward_DirectionalLightSourceRadius;; Offset:   76
;       float3 TranslucentBasePass_Shared_Forward_DirectionalLightColor;; Offset:   80
;       float TranslucentBasePass_Shared_Forward_DirectionalLightVolumetricScatteringIntensity;; Offset:   92
;       uint TranslucentBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask;; Offset:   96
;       uint PrePadding_TranslucentBasePass_Shared_Forward_100;; Offset:  100
;       float2 TranslucentBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD;; Offset:  104
;       uint TranslucentBasePass_Shared_Forward_NumDirectionalLightCascades;; Offset:  112
;       int TranslucentBasePass_Shared_Forward_DirectionalLightVSM;; Offset:  116
;       int PrePadding_TranslucentBasePass_Shared_Forward_120;; Offset:  120
;       int PrePadding_TranslucentBasePass_Shared_Forward_124;; Offset:  124
;       float4 TranslucentBasePass_Shared_Forward_CascadeEndDepths;; Offset:  128
;       row_major float4x4 TranslucentBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix[4];; Offset:  144
;       float4 TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapMinMax[4];; Offset:  400
;       float4 TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize;; Offset:  464
;       float TranslucentBasePass_Shared_Forward_DirectionalLightDepthBias;; Offset:  480
;       uint TranslucentBasePass_Shared_Forward_DirectionalLightUseStaticShadowing;; Offset:  484
;       uint TranslucentBasePass_Shared_Forward_SimpleLightsEndIndex;; Offset:  488
;       uint TranslucentBasePass_Shared_Forward_ClusteredDeferredSupportedEndIndex;; Offset:  492
;       uint TranslucentBasePass_Shared_Forward_LumenSupportedStartIndex;; Offset:  496
;       uint PrePadding_TranslucentBasePass_Shared_Forward_500;; Offset:  500
;       uint PrePadding_TranslucentBasePass_Shared_Forward_504;; Offset:  504
;       uint PrePadding_TranslucentBasePass_Shared_Forward_508;; Offset:  508
;       float4 TranslucentBasePass_Shared_Forward_DirectionalLightStaticShadowBufferSize;; Offset:  512
;       row_major float4x4 TranslucentBasePass_Shared_Forward_DirectionalLightTranslatedWorldToStaticShadow;; Offset:  528
;       uint TranslucentBasePass_Shared_Forward_DirectLightingShowFlag;; Offset:  592
;       float PrePadding_TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_596;; Offset:  596
;       float PrePadding_TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_600;; Offset:  600
;       float PrePadding_TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_604;; Offset:  604
;       float TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_ScreenRayLength;; Offset:  608
;       int TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTRayCount;; Offset:  612
;       int TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTSamplesPerRay;; Offset:  616
;       float TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTRayLengthScale;; Offset:  620
;       float TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTCotMaxRayAngleFromLight;; Offset:  624
;       float TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTTexelDitherScale;; Offset:  628
;       float TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTExtrapolateSlope;; Offset:  632
;       float TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTMaxSlopeBias;; Offset:  636
;       uint TranslucentBasePass_Shared_Forward_DirectionalLightSMRTSettings_SMRTAdaptiveRayCount;; Offset:  640
;       uint PrePadding_TranslucentBasePass_Shared_Forward_644;; Offset:  644
;       uint PrePadding_TranslucentBasePass_Shared_Forward_648;; Offset:  648
;       uint PrePadding_TranslucentBasePass_Shared_Forward_652;; Offset:  652
;       uint BindlessResource_TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapAtlas;; Offset:  656
;       uint PrePadding_TranslucentBasePass_Shared_Forward_660;; Offset:  660
;       uint BindlessSampler_TranslucentBasePass_Shared_Forward_ShadowmapSampler;; Offset:  664
;       uint PrePadding_TranslucentBasePass_Shared_Forward_668;; Offset:  668
;       uint BindlessResource_TranslucentBasePass_Shared_Forward_DirectionalLightStaticShadowmap;; Offset:  672
;       uint PrePadding_TranslucentBasePass_Shared_Forward_676;; Offset:  676
;       uint BindlessSampler_TranslucentBasePass_Shared_Forward_StaticShadowmapSampler;; Offset:  680
;       uint PrePadding_TranslucentBasePass_Shared_Forward_684;; Offset:  684
;       uint BindlessResource_TranslucentBasePass_Shared_Forward_ForwardLocalLightBuffer;; Offset:  688
;       uint PrePadding_TranslucentBasePass_Shared_Forward_692;; Offset:  692
;       uint BindlessResource_TranslucentBasePass_Shared_Forward_NumCulledLightsGrid;; Offset:  696
;       uint PrePadding_TranslucentBasePass_Shared_Forward_700;; Offset:  700
;       uint BindlessResource_TranslucentBasePass_Shared_Forward_CulledLightDataGrid;; Offset:  704
;       float PrePadding_TranslucentBasePass_Shared_ForwardISR_708;; Offset:  708
;       float PrePadding_TranslucentBasePass_Shared_ForwardISR_712;; Offset:  712
;       float PrePadding_TranslucentBasePass_Shared_ForwardISR_716;; Offset:  716
;       uint TranslucentBasePass_Shared_ForwardISR_NumLocalLights;; Offset:  720
;       uint TranslucentBasePass_Shared_ForwardISR_NumReflectionCaptures;; Offset:  724
;       uint TranslucentBasePass_Shared_ForwardISR_HasDirectionalLight;; Offset:  728
;       uint TranslucentBasePass_Shared_ForwardISR_NumGridCells;; Offset:  732
;       int3 TranslucentBasePass_Shared_ForwardISR_CulledGridSize;; Offset:  736
;       uint TranslucentBasePass_Shared_ForwardISR_MaxCulledLightsPerCell;; Offset:  748
;       uint TranslucentBasePass_Shared_ForwardISR_LightGridPixelSizeShift;; Offset:  752
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_756;; Offset:  756
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_760;; Offset:  760
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_764;; Offset:  764
;       float3 TranslucentBasePass_Shared_ForwardISR_LightGridZParams;; Offset:  768
;       float PrePadding_TranslucentBasePass_Shared_ForwardISR_780;; Offset:  780
;       float3 TranslucentBasePass_Shared_ForwardISR_DirectionalLightDirection;; Offset:  784
;       float TranslucentBasePass_Shared_ForwardISR_DirectionalLightSourceRadius;; Offset:  796
;       float3 TranslucentBasePass_Shared_ForwardISR_DirectionalLightColor;; Offset:  800
;       float TranslucentBasePass_Shared_ForwardISR_DirectionalLightVolumetricScatteringIntensity;; Offset:  812
;       uint TranslucentBasePass_Shared_ForwardISR_DirectionalLightShadowMapChannelMask;; Offset:  816
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_820;; Offset:  820
;       float2 TranslucentBasePass_Shared_ForwardISR_DirectionalLightDistanceFadeMAD;; Offset:  824
;       uint TranslucentBasePass_Shared_ForwardISR_NumDirectionalLightCascades;; Offset:  832
;       int TranslucentBasePass_Shared_ForwardISR_DirectionalLightVSM;; Offset:  836
;       int PrePadding_TranslucentBasePass_Shared_ForwardISR_840;; Offset:  840
;       int PrePadding_TranslucentBasePass_Shared_ForwardISR_844;; Offset:  844
;       float4 TranslucentBasePass_Shared_ForwardISR_CascadeEndDepths;; Offset:  848
;       row_major float4x4 TranslucentBasePass_Shared_ForwardISR_DirectionalLightTranslatedWorldToShadowMatrix[4];; Offset:  864
;       float4 TranslucentBasePass_Shared_ForwardISR_DirectionalLightShadowmapMinMax[4];; Offset: 1120
;       float4 TranslucentBasePass_Shared_ForwardISR_DirectionalLightShadowmapAtlasBufferSize;; Offset: 1184
;       float TranslucentBasePass_Shared_ForwardISR_DirectionalLightDepthBias;; Offset: 1200
;       uint TranslucentBasePass_Shared_ForwardISR_DirectionalLightUseStaticShadowing;; Offset: 1204
;       uint TranslucentBasePass_Shared_ForwardISR_SimpleLightsEndIndex;; Offset: 1208
;       uint TranslucentBasePass_Shared_ForwardISR_ClusteredDeferredSupportedEndIndex;; Offset: 1212
;       uint TranslucentBasePass_Shared_ForwardISR_LumenSupportedStartIndex;; Offset: 1216
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1220;; Offset: 1220
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1224;; Offset: 1224
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1228;; Offset: 1228
;       float4 TranslucentBasePass_Shared_ForwardISR_DirectionalLightStaticShadowBufferSize;; Offset: 1232
;       row_major float4x4 TranslucentBasePass_Shared_ForwardISR_DirectionalLightTranslatedWorldToStaticShadow;; Offset: 1248
;       uint TranslucentBasePass_Shared_ForwardISR_DirectLightingShowFlag;; Offset: 1312
;       float PrePadding_TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_1316;; Offset: 1316
;       float PrePadding_TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_1320;; Offset: 1320
;       float PrePadding_TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_1324;; Offset: 1324
;       float TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_ScreenRayLength;; Offset: 1328
;       int TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTRayCount;; Offset: 1332
;       int TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTSamplesPerRay;; Offset: 1336
;       float TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTRayLengthScale;; Offset: 1340
;       float TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTCotMaxRayAngleFromLight;; Offset: 1344
;       float TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTTexelDitherScale;; Offset: 1348
;       float TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTExtrapolateSlope;; Offset: 1352
;       float TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTMaxSlopeBias;; Offset: 1356
;       uint TranslucentBasePass_Shared_ForwardISR_DirectionalLightSMRTSettings_SMRTAdaptiveRayCount;; Offset: 1360
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1364;; Offset: 1364
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1368;; Offset: 1368
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1372;; Offset: 1372
;       uint BindlessResource_TranslucentBasePass_Shared_ForwardISR_DirectionalLightShadowmapAtlas;; Offset: 1376
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1380;; Offset: 1380
;       uint BindlessSampler_TranslucentBasePass_Shared_ForwardISR_ShadowmapSampler;; Offset: 1384
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1388;; Offset: 1388
;       uint BindlessResource_TranslucentBasePass_Shared_ForwardISR_DirectionalLightStaticShadowmap;; Offset: 1392
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1396;; Offset: 1396
;       uint BindlessSampler_TranslucentBasePass_Shared_ForwardISR_StaticShadowmapSampler;; Offset: 1400
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1404;; Offset: 1404
;       uint BindlessResource_TranslucentBasePass_Shared_ForwardISR_ForwardLocalLightBuffer;; Offset: 1408
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1412;; Offset: 1412
;       uint BindlessResource_TranslucentBasePass_Shared_ForwardISR_NumCulledLightsGrid;; Offset: 1416
;       uint PrePadding_TranslucentBasePass_Shared_ForwardISR_1420;; Offset: 1420
;       uint BindlessResource_TranslucentBasePass_Shared_ForwardISR_CulledLightDataGrid;; Offset: 1424
;       float PrePadding_TranslucentBasePass_Shared_Reflection_1428;; Offset: 1428
;       float PrePadding_TranslucentBasePass_Shared_Reflection_1432;; Offset: 1432
;       float PrePadding_TranslucentBasePass_Shared_Reflection_1436;; Offset: 1436
;       float4 TranslucentBasePass_Shared_Reflection_SkyLightParameters;; Offset: 1440
;       uint BindlessResource_TranslucentBasePass_Shared_Reflection_SkyLightCubemap;; Offset: 1456
;       uint PrePadding_TranslucentBasePass_Shared_Reflection_1460;; Offset: 1460
;       uint BindlessSampler_TranslucentBasePass_Shared_Reflection_SkyLightCubemapSampler;; Offset: 1464
;       uint PrePadding_TranslucentBasePass_Shared_Reflection_1468;; Offset: 1468
;       uint BindlessResource_TranslucentBasePass_Shared_Reflection_SkyLightBlendDestinationCubemap;; Offset: 1472
;       uint PrePadding_TranslucentBasePass_Shared_Reflection_1476;; Offset: 1476
;       uint BindlessSampler_TranslucentBasePass_Shared_Reflection_SkyLightBlendDestinationCubemapSampler;; Offset: 1480
;       uint PrePadding_TranslucentBasePass_Shared_Reflection_1484;; Offset: 1484
;       uint BindlessResource_TranslucentBasePass_Shared_Reflection_ReflectionCubemap;; Offset: 1488
;       uint PrePadding_TranslucentBasePass_Shared_Reflection_1492;; Offset: 1492
;       uint BindlessSampler_TranslucentBasePass_Shared_Reflection_ReflectionCubemapSampler;; Offset: 1496
;       uint PrePadding_TranslucentBasePass_Shared_Reflection_1500;; Offset: 1500
;       uint BindlessResource_TranslucentBasePass_Shared_Reflection_PreIntegratedGF;; Offset: 1504
;       uint PrePadding_TranslucentBasePass_Shared_Reflection_1508;; Offset: 1508
;       uint BindlessSampler_TranslucentBasePass_Shared_Reflection_PreIntegratedGFSampler;; Offset: 1512
;       float PrePadding_TranslucentBasePass_Shared_PlanarReflection_1516;; Offset: 1516
;       float4 TranslucentBasePass_Shared_PlanarReflection_ReflectionPlane;; Offset: 1520
;       float4 TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionOrigin;; Offset: 1536
;       float4 TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionXAxis;; Offset: 1552
;       float4 TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionYAxis;; Offset: 1568
;       row_major float3x4 TranslucentBasePass_Shared_PlanarReflection_InverseTransposeMirrorMatrix;; Offset: 1584
;       float3 TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionParameters;; Offset: 1632
;       float PrePadding_TranslucentBasePass_Shared_PlanarReflection_1644;; Offset: 1644
;       float2 TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionParameters2;; Offset: 1648
;       float PrePadding_TranslucentBasePass_Shared_PlanarReflection_1656;; Offset: 1656
;       float PrePadding_TranslucentBasePass_Shared_PlanarReflection_1660;; Offset: 1660
;       row_major float4x4 TranslucentBasePass_Shared_PlanarReflection_ProjectionWithExtraFOV[2];; Offset: 1664
;       float4 TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionScreenScaleBias[2];; Offset: 1792
;       float2 TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionScreenBound;; Offset: 1824
;       uint TranslucentBasePass_Shared_PlanarReflection_bIsStereo;; Offset: 1832
;       uint PrePadding_TranslucentBasePass_Shared_PlanarReflection_1836;; Offset: 1836
;       uint BindlessResource_TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionTexture;; Offset: 1840
;       uint PrePadding_TranslucentBasePass_Shared_PlanarReflection_1844;; Offset: 1844
;       uint BindlessSampler_TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionSampler;; Offset: 1848
;       float PrePadding_TranslucentBasePass_Shared_Fog_1852;; Offset: 1852
;       float4 TranslucentBasePass_Shared_Fog_ExponentialFogParameters;; Offset: 1856
;       float4 TranslucentBasePass_Shared_Fog_ExponentialFogParameters2;; Offset: 1872
;       float4 TranslucentBasePass_Shared_Fog_ExponentialFogColorParameter;; Offset: 1888
;       float4 TranslucentBasePass_Shared_Fog_ExponentialFogParameters3;; Offset: 1904
;       float4 TranslucentBasePass_Shared_Fog_SkyAtmosphereAmbientContributionColorScale;; Offset: 1920
;       float4 TranslucentBasePass_Shared_Fog_InscatteringLightDirection;; Offset: 1936
;       float4 TranslucentBasePass_Shared_Fog_DirectionalInscatteringColor;; Offset: 1952
;       float2 TranslucentBasePass_Shared_Fog_SinCosInscatteringColorCubemapRotation;; Offset: 1968
;       float PrePadding_TranslucentBasePass_Shared_Fog_1976;; Offset: 1976
;       float PrePadding_TranslucentBasePass_Shared_Fog_1980;; Offset: 1980
;       float3 TranslucentBasePass_Shared_Fog_FogInscatteringTextureParameters;; Offset: 1984
;       float TranslucentBasePass_Shared_Fog_ApplyVolumetricFog;; Offset: 1996
;       float TranslucentBasePass_Shared_Fog_VolumetricFogStartDistance;; Offset: 2000
;       float TranslucentBasePass_Shared_Fog_VolumetricFogNearFadeInDistanceInv;; Offset: 2004
;       uint BindlessResource_TranslucentBasePass_Shared_Fog_FogInscatteringColorCubemap;; Offset: 2008
;       uint PrePadding_TranslucentBasePass_Shared_Fog_2012;; Offset: 2012
;       uint BindlessSampler_TranslucentBasePass_Shared_Fog_FogInscatteringColorSampler;; Offset: 2016
;       uint PrePadding_TranslucentBasePass_Shared_Fog_2020;; Offset: 2020
;       uint BindlessResource_TranslucentBasePass_Shared_Fog_IntegratedLightScattering;; Offset: 2024
;       uint PrePadding_TranslucentBasePass_Shared_Fog_2028;; Offset: 2028
;       uint BindlessSampler_TranslucentBasePass_Shared_Fog_IntegratedLightScatteringSampler;; Offset: 2032
;       float PrePadding_TranslucentBasePass_Shared_FogISR_2036;; Offset: 2036
;       float PrePadding_TranslucentBasePass_Shared_FogISR_2040;; Offset: 2040
;       float PrePadding_TranslucentBasePass_Shared_FogISR_2044;; Offset: 2044
;       float4 TranslucentBasePass_Shared_FogISR_ExponentialFogParameters;; Offset: 2048
;       float4 TranslucentBasePass_Shared_FogISR_ExponentialFogParameters2;; Offset: 2064
;       float4 TranslucentBasePass_Shared_FogISR_ExponentialFogColorParameter;; Offset: 2080
;       float4 TranslucentBasePass_Shared_FogISR_ExponentialFogParameters3;; Offset: 2096
;       float4 TranslucentBasePass_Shared_FogISR_SkyAtmosphereAmbientContributionColorScale;; Offset: 2112
;       float4 TranslucentBasePass_Shared_FogISR_InscatteringLightDirection;; Offset: 2128
;       float4 TranslucentBasePass_Shared_FogISR_DirectionalInscatteringColor;; Offset: 2144
;       float2 TranslucentBasePass_Shared_FogISR_SinCosInscatteringColorCubemapRotation;; Offset: 2160
;       float PrePadding_TranslucentBasePass_Shared_FogISR_2168;; Offset: 2168
;       float PrePadding_TranslucentBasePass_Shared_FogISR_2172;; Offset: 2172
;       float3 TranslucentBasePass_Shared_FogISR_FogInscatteringTextureParameters;; Offset: 2176
;       float TranslucentBasePass_Shared_FogISR_ApplyVolumetricFog;; Offset: 2188
;       float TranslucentBasePass_Shared_FogISR_VolumetricFogStartDistance;; Offset: 2192
;       float TranslucentBasePass_Shared_FogISR_VolumetricFogNearFadeInDistanceInv;; Offset: 2196
;       uint BindlessResource_TranslucentBasePass_Shared_FogISR_FogInscatteringColorCubemap;; Offset: 2200
;       uint PrePadding_TranslucentBasePass_Shared_FogISR_2204;; Offset: 2204
;       uint BindlessSampler_TranslucentBasePass_Shared_FogISR_FogInscatteringColorSampler;; Offset: 2208
;       uint PrePadding_TranslucentBasePass_Shared_FogISR_2212;; Offset: 2212
;       uint BindlessResource_TranslucentBasePass_Shared_FogISR_IntegratedLightScattering;; Offset: 2216
;       uint PrePadding_TranslucentBasePass_Shared_FogISR_2220;; Offset: 2220
;       uint BindlessSampler_TranslucentBasePass_Shared_FogISR_IntegratedLightScatteringSampler;; Offset: 2224
;       float PrePadding_TranslucentBasePass_Shared_2228;; Offset: 2228
;       float PrePadding_TranslucentBasePass_Shared_2232;; Offset: 2232
;       float PrePadding_TranslucentBasePass_Shared_2236;; Offset: 2236
;       uint TranslucentBasePass_Shared_UseBasePassSkylight;; Offset: 2240
;       float PrePadding_TranslucentBasePass_SceneTextures_2244;; Offset: 2244
;       float PrePadding_TranslucentBasePass_SceneTextures_2248;; Offset: 2248
;       float PrePadding_TranslucentBasePass_SceneTextures_2252;; Offset: 2252
;       uint BindlessResource_TranslucentBasePass_SceneTextures_SceneColorTexture;; Offset: 2256
;       uint PrePadding_TranslucentBasePass_SceneTextures_2260;; Offset: 2260
;       uint BindlessResource_TranslucentBasePass_SceneTextures_SceneDepthTexture;; Offset: 2264
;       uint PrePadding_TranslucentBasePass_SceneTextures_2268;; Offset: 2268
;       uint BindlessResource_TranslucentBasePass_SceneTextures_GBufferATexture;; Offset: 2272
;       uint PrePadding_TranslucentBasePass_SceneTextures_2276;; Offset: 2276
;       uint BindlessResource_TranslucentBasePass_SceneTextures_GBufferBTexture;; Offset: 2280
;       uint PrePadding_TranslucentBasePass_SceneTextures_2284;; Offset: 2284
;       uint BindlessResource_TranslucentBasePass_SceneTextures_GBufferCTexture;; Offset: 2288
;       uint PrePadding_TranslucentBasePass_SceneTextures_2292;; Offset: 2292
;       uint BindlessResource_TranslucentBasePass_SceneTextures_GBufferDTexture;; Offset: 2296
;       uint PrePadding_TranslucentBasePass_SceneTextures_2300;; Offset: 2300
;       uint BindlessResource_TranslucentBasePass_SceneTextures_GBufferETexture;; Offset: 2304
;       uint PrePadding_TranslucentBasePass_SceneTextures_2308;; Offset: 2308
;       uint BindlessResource_TranslucentBasePass_SceneTextures_GBufferFTexture;; Offset: 2312
;       uint PrePadding_TranslucentBasePass_SceneTextures_2316;; Offset: 2316
;       uint BindlessResource_TranslucentBasePass_SceneTextures_GBufferVelocityTexture;; Offset: 2320
;       uint PrePadding_TranslucentBasePass_SceneTextures_2324;; Offset: 2324
;       uint BindlessResource_TranslucentBasePass_SceneTextures_ScreenSpaceAOTexture;; Offset: 2328
;       uint PrePadding_TranslucentBasePass_SceneTextures_2332;; Offset: 2332
;       uint BindlessResource_TranslucentBasePass_SceneTextures_CustomDepthTexture;; Offset: 2336
;       uint PrePadding_TranslucentBasePass_SceneTextures_2340;; Offset: 2340
;       uint BindlessResource_TranslucentBasePass_SceneTextures_CustomStencilTexture;; Offset: 2344
;       uint PrePadding_TranslucentBasePass_SceneTextures_2348;; Offset: 2348
;       uint BindlessSampler_TranslucentBasePass_SceneTextures_PointClampSampler;; Offset: 2352
;       float PrePadding_TranslucentBasePass_Strata_2356;; Offset: 2356
;       float PrePadding_TranslucentBasePass_Strata_2360;; Offset: 2360
;       float PrePadding_TranslucentBasePass_Strata_2364;; Offset: 2364
;       uint TranslucentBasePass_Strata_MaxBytesPerPixel;; Offset: 2368
;       uint TranslucentBasePass_Strata_bRoughDiffuse;; Offset: 2372
;       uint TranslucentBasePass_Strata_PeelLayersAboveDepth;; Offset: 2376
;       uint TranslucentBasePass_Strata_bRoughnessTracking;; Offset: 2380
;       int TranslucentBasePass_Strata_FirstSliceStoringStrataSSSData;; Offset: 2384
;       int PrePadding_TranslucentBasePass_Strata_2388;; Offset: 2388
;       uint BindlessResource_TranslucentBasePass_Strata_MaterialTextureArray;; Offset: 2392
;       uint PrePadding_TranslucentBasePass_Strata_2396;; Offset: 2396
;       uint BindlessResource_TranslucentBasePass_Strata_TopLayerTexture;; Offset: 2400
;       float PrePadding_TranslucentBasePass_ForwardDirLightCloudShadow_2404;; Offset: 2404
;       float PrePadding_TranslucentBasePass_ForwardDirLightCloudShadow_2408;; Offset: 2408
;       float PrePadding_TranslucentBasePass_ForwardDirLightCloudShadow_2412;; Offset: 2412
;       row_major float4x4 TranslucentBasePass_ForwardDirLightCloudShadow_CloudShadowmapTranslatedWorldToLightClipMatrix;; Offset: 2416
;       float TranslucentBasePass_ForwardDirLightCloudShadow_CloudShadowmapFarDepthKm;; Offset: 2480
;       float PrePadding_TranslucentBasePass_ForwardDirLightCloudShadow_2484;; Offset: 2484
;       uint BindlessResource_TranslucentBasePass_ForwardDirLightCloudShadow_CloudShadowmapTexture;; Offset: 2488
;       uint PrePadding_TranslucentBasePass_ForwardDirLightCloudShadow_2492;; Offset: 2492
;       uint BindlessSampler_TranslucentBasePass_ForwardDirLightCloudShadow_CloudShadowmapSampler;; Offset: 2496
;       uint PrePadding_TranslucentBasePass_ForwardDirLightCloudShadow_2500;; Offset: 2500
;       float TranslucentBasePass_ForwardDirLightCloudShadow_CloudShadowmapStrength;; Offset: 2504
;       float PrePadding_TranslucentBasePass_OIT_2508;; Offset: 2508
;       uint TranslucentBasePass_OIT_bOITEnable;      ; Offset: 2512
;       uint TranslucentBasePass_OIT_OITMethod;       ; Offset: 2516
;       uint TranslucentBasePass_OIT_MaxSideSamplePerPixel;; Offset: 2520
;       uint TranslucentBasePass_OIT_MaxSamplePerPixel;; Offset: 2524
;       uint TranslucentBasePass_OIT_TransmittanceThreshold;; Offset: 2528
;       uint PrePadding_TranslucentBasePass_OIT_2532; ; Offset: 2532
;       uint BindlessResource_TranslucentBasePass_OIT_OutOITSampleCount;; Offset: 2536
;       uint PrePadding_TranslucentBasePass_OIT_2540; ; Offset: 2540
;       uint BindlessResource_TranslucentBasePass_OIT_OutOITSampleColor;; Offset: 2544
;       uint PrePadding_TranslucentBasePass_OIT_2548; ; Offset: 2548
;       uint BindlessResource_TranslucentBasePass_OIT_OutOITSampleTrans;; Offset: 2552
;       uint PrePadding_TranslucentBasePass_OIT_2556; ; Offset: 2556
;       uint BindlessResource_TranslucentBasePass_OIT_OutOITSampleDepth;; Offset: 2560
;       float PrePadding_TranslucentBasePass_2564;    ; Offset: 2564
;       float PrePadding_TranslucentBasePass_2568;    ; Offset: 2568
;       float PrePadding_TranslucentBasePass_2572;    ; Offset: 2572
;       float4 TranslucentBasePass_HZBUvFactorAndInvFactor;; Offset: 2576
;       float4 TranslucentBasePass_PrevScreenPositionScaleBias;; Offset: 2592
;       float2 TranslucentBasePass_PrevSceneColorBilinearUVMin;; Offset: 2608
;       float2 TranslucentBasePass_PrevSceneColorBilinearUVMax;; Offset: 2616
;       float TranslucentBasePass_PrevSceneColorPreExposureInv;; Offset: 2624
;       int TranslucentBasePass_SSRQuality;           ; Offset: 2628
;       uint BindlessResource_TranslucentBasePass_HZBTexture;; Offset: 2632
;       uint PrePadding_TranslucentBasePass_2636;     ; Offset: 2636
;       uint BindlessSampler_TranslucentBasePass_HZBSampler;; Offset: 2640
;       uint PrePadding_TranslucentBasePass_2644;     ; Offset: 2644
;       uint BindlessResource_TranslucentBasePass_PrevSceneColor;; Offset: 2648
;       uint PrePadding_TranslucentBasePass_2652;     ; Offset: 2652
;       uint BindlessSampler_TranslucentBasePass_PrevSceneColorSampler;; Offset: 2656
;       uint PrePadding_TranslucentBasePass_2660;     ; Offset: 2660
;       uint BindlessResource_TranslucentBasePass_VolumetricCloudColor;; Offset: 2664
;       uint PrePadding_TranslucentBasePass_2668;     ; Offset: 2668
;       uint BindlessSampler_TranslucentBasePass_VolumetricCloudColorSampler;; Offset: 2672
;       uint PrePadding_TranslucentBasePass_2676;     ; Offset: 2676
;       uint BindlessResource_TranslucentBasePass_VolumetricCloudDepth;; Offset: 2680
;       uint PrePadding_TranslucentBasePass_2684;     ; Offset: 2684
;       uint BindlessSampler_TranslucentBasePass_VolumetricCloudDepthSampler;; Offset: 2688
;       uint PrePadding_TranslucentBasePass_2692;     ; Offset: 2692
;       float TranslucentBasePass_ApplyVolumetricCloudOnTransparent;; Offset: 2696
;       float TranslucentBasePass_SoftBlendingDistanceKm;; Offset: 2700
;       uint BindlessResource_TranslucentBasePass_TranslucencyLightingVolumeAmbientInner;; Offset: 2704
;       uint PrePadding_TranslucentBasePass_2708;     ; Offset: 2708
;       uint BindlessResource_TranslucentBasePass_TranslucencyLightingVolumeAmbientOuter;; Offset: 2712
;       uint PrePadding_TranslucentBasePass_2716;     ; Offset: 2716
;       uint BindlessResource_TranslucentBasePass_TranslucencyLightingVolumeDirectionalInner;; Offset: 2720
;       uint PrePadding_TranslucentBasePass_2724;     ; Offset: 2724
;       uint BindlessResource_TranslucentBasePass_TranslucencyLightingVolumeDirectionalOuter;; Offset: 2728
;       float PrePadding_TranslucentBasePass_2732;    ; Offset: 2732
;       float TranslucentBasePass_ReprojectionRadiusScale;; Offset: 2736
;       float TranslucentBasePass_ClipmapWorldExtent; ; Offset: 2740
;       float TranslucentBasePass_ClipmapDistributionBase;; Offset: 2744
;       float TranslucentBasePass_InvClipmapFadeSize; ; Offset: 2748
;       int2 TranslucentBasePass_ProbeAtlasResolutionInProbes;; Offset: 2752
;       uint TranslucentBasePass_RadianceProbeClipmapResolution;; Offset: 2760
;       uint TranslucentBasePass_NumRadianceProbeClipmaps;; Offset: 2764
;       uint TranslucentBasePass_RadianceProbeResolution;; Offset: 2768
;       uint TranslucentBasePass_FinalProbeResolution;; Offset: 2772
;       uint TranslucentBasePass_FinalRadianceAtlasMaxMip;; Offset: 2776
;       uint TranslucentBasePass_CalculateIrradiance; ; Offset: 2780
;       uint TranslucentBasePass_IrradianceProbeResolution;; Offset: 2784
;       uint TranslucentBasePass_OcclusionProbeResolution;; Offset: 2788
;       uint TranslucentBasePass_NumProbesToTraceBudget;; Offset: 2792
;       uint TranslucentBasePass_RadianceCacheStats;  ; Offset: 2796
;       uint BindlessResource_TranslucentBasePass_RadianceProbeIndirectionTexture;; Offset: 2800
;       uint PrePadding_TranslucentBasePass_2804;     ; Offset: 2804
;       uint BindlessResource_TranslucentBasePass_RadianceCacheFinalRadianceAtlas;; Offset: 2808
;       uint PrePadding_TranslucentBasePass_2812;     ; Offset: 2812
;       uint BindlessResource_TranslucentBasePass_RadianceCacheFinalIrradianceAtlas;; Offset: 2816
;       uint PrePadding_TranslucentBasePass_2820;     ; Offset: 2820
;       uint BindlessResource_TranslucentBasePass_RadianceCacheProbeOcclusionAtlas;; Offset: 2824
;       uint PrePadding_TranslucentBasePass_2828;     ; Offset: 2828
;       uint BindlessResource_TranslucentBasePass_RadianceCacheDepthAtlas;; Offset: 2832
;       uint PrePadding_TranslucentBasePass_2836;     ; Offset: 2836
;       uint BindlessResource_TranslucentBasePass_ProbeWorldOffset;; Offset: 2840
;       uint PrePadding_TranslucentBasePass_2844;     ; Offset: 2844
;       float4 TranslucentBasePass_RadianceProbeSettings[6];; Offset: 2848
;       float4 TranslucentBasePass_PaddedWorldPositionToRadianceProbeCoordBias[6];; Offset: 2944
;       float4 TranslucentBasePass_PaddedRadianceProbeCoordToWorldPositionBias[6];; Offset: 3040
;       float2 TranslucentBasePass_InvProbeFinalRadianceAtlasResolution;; Offset: 3136
;       float2 TranslucentBasePass_InvProbeFinalIrradianceAtlasResolution;; Offset: 3144
;       float2 TranslucentBasePass_InvProbeDepthAtlasResolution;; Offset: 3152
;       uint TranslucentBasePass_OverrideCacheOcclusionLighting;; Offset: 3160
;       uint TranslucentBasePass_ShowBlackRadianceCacheLighting;; Offset: 3164
;       uint TranslucentBasePass_ProbeAtlasResolutionModuloMask;; Offset: 3168
;       uint TranslucentBasePass_ProbeAtlasResolutionDivideShift;; Offset: 3172
;       float PrePadding_TranslucentBasePass_3176;    ; Offset: 3176
;       float PrePadding_TranslucentBasePass_3180;    ; Offset: 3180
;       uint BindlessResource_TranslucentBasePass_Radiance;; Offset: 3184
;       uint PrePadding_TranslucentBasePass_3188;     ; Offset: 3188
;       uint BindlessResource_TranslucentBasePass_Normal;; Offset: 3192
;       uint PrePadding_TranslucentBasePass_3196;     ; Offset: 3196
;       uint BindlessResource_TranslucentBasePass_SceneDepth;; Offset: 3200
;       uint PrePadding_TranslucentBasePass_3204;     ; Offset: 3204
;       uint TranslucentBasePass_Enabled;             ; Offset: 3208
;       float TranslucentBasePass_RelativeDepthThreshold;; Offset: 3212
;       float TranslucentBasePass_SpecularScale;      ; Offset: 3216
;       float TranslucentBasePass_Contrast;           ; Offset: 3220
;       float PrePadding_TranslucentBasePass_3224;    ; Offset: 3224
;       float PrePadding_TranslucentBasePass_3228;    ; Offset: 3228
;       uint BindlessResource_TranslucentBasePass_TranslucencyGIVolume0;; Offset: 3232
;       uint PrePadding_TranslucentBasePass_3236;     ; Offset: 3236
;       uint BindlessResource_TranslucentBasePass_TranslucencyGIVolume1;; Offset: 3240
;       uint PrePadding_TranslucentBasePass_3244;     ; Offset: 3244
;       uint BindlessResource_TranslucentBasePass_TranslucencyGIVolumeHistory0;; Offset: 3248
;       uint PrePadding_TranslucentBasePass_3252;     ; Offset: 3252
;       uint BindlessResource_TranslucentBasePass_TranslucencyGIVolumeHistory1;; Offset: 3256
;       uint PrePadding_TranslucentBasePass_3260;     ; Offset: 3260
;       uint BindlessSampler_TranslucentBasePass_TranslucencyGIVolumeSampler;; Offset: 3264
;       uint PrePadding_TranslucentBasePass_3268;     ; Offset: 3268
;       uint PrePadding_TranslucentBasePass_3272;     ; Offset: 3272
;       uint PrePadding_TranslucentBasePass_3276;     ; Offset: 3276
;       float3 TranslucentBasePass_TranslucencyGIGridZParams;; Offset: 3280
;       uint TranslucentBasePass_TranslucencyGIGridPixelSizeShift;; Offset: 3292
;       int3 TranslucentBasePass_TranslucencyGIGridSize;; Offset: 3296
;       float PrePadding_TranslucentBasePass_3308;    ; Offset: 3308
;       uint BindlessResource_TranslucentBasePass_PreIntegratedGFTexture;; Offset: 3312
;       uint PrePadding_TranslucentBasePass_3316;     ; Offset: 3316
;       uint BindlessSampler_TranslucentBasePass_PreIntegratedGFSampler;; Offset: 3320
;       uint PrePadding_TranslucentBasePass_3324;     ; Offset: 3324
;       uint BindlessResource_TranslucentBasePass_EyeAdaptationBuffer;; Offset: 3328
;       uint PrePadding_TranslucentBasePass_3332;     ; Offset: 3332
;       uint BindlessResource_TranslucentBasePass_SceneColorCopyTexture;; Offset: 3336
;       uint PrePadding_TranslucentBasePass_3340;     ; Offset: 3340
;       uint BindlessSampler_TranslucentBasePass_SceneColorCopySampler;; Offset: 3344
;       float PrePadding_TranslucentBasePass_BlueNoise_3348;; Offset: 3348
;       float PrePadding_TranslucentBasePass_BlueNoise_3352;; Offset: 3352
;       float PrePadding_TranslucentBasePass_BlueNoise_3356;; Offset: 3356
;       int3 TranslucentBasePass_BlueNoise_Dimensions;; Offset: 3360
;       int PrePadding_TranslucentBasePass_BlueNoise_3372;; Offset: 3372
;       int3 TranslucentBasePass_BlueNoise_ModuloMasks;; Offset: 3376
;       int PrePadding_TranslucentBasePass_BlueNoise_3388;; Offset: 3388
;       uint BindlessResource_TranslucentBasePass_BlueNoise_ScalarTexture;; Offset: 3392
;       uint PrePadding_TranslucentBasePass_BlueNoise_3396;; Offset: 3396
;       uint BindlessResource_TranslucentBasePass_BlueNoise_Vec2Texture;; Offset: 3400
;   
;   } UniformBufferConstants_TranslucentBasePass;     ; Offset:    0 Size:  3404
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       float4 View_PolarisCharacterLightMainColorScale;; Offset: 4560
;       float4 View_PolarisCharacterLightEnvColorScale;; Offset: 4576
;       uint View_PolarisContactShadowMask;           ; Offset: 4592
;       float View_PolarisTAAVelocityWeight;          ; Offset: 4596
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint View_bShadingEnergyConservation;         ; Offset: 5144
;       uint View_bShadingEnergyPreservation;         ; Offset: 5148
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_WaterData;         ; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5248
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5264
;       float PrePadding_View_5268;                   ; Offset: 5268
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5272
;       uint PrePadding_View_5276;                    ; Offset: 5276
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint PrePadding_View_5288;                    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5296
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5360
;       uint PrePadding_View_5364;                    ; Offset: 5364
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5368
;       uint PrePadding_View_5372;                    ; Offset: 5372
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5376
;       uint PrePadding_View_5380;                    ; Offset: 5380
;       uint PrePadding_View_5384;                    ; Offset: 5384
;       uint PrePadding_View_5388;                    ; Offset: 5388
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5392
;       float PrePadding_View_5404;                   ; Offset: 5404
;       float3 View_TLASViewTilePosition;             ; Offset: 5408
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5420
;
; }
;
; cbuffer UniformBufferConstants_Primitive
; {
;
;   struct hostlayout.UniformBufferConstants_Primitive
;   {
;
;       uint Primitive_Flags;                         ; Offset:    0
;       uint Primitive_InstanceSceneDataOffset;       ; Offset:    4
;       uint Primitive_NumInstanceSceneDataEntries;   ; Offset:    8
;       int Primitive_SingleCaptureIndex;             ; Offset:   12
;       float3 Primitive_TilePosition;                ; Offset:   16
;       uint Primitive_PrimitiveComponentId;          ; Offset:   28
;       row_major float4x4 Primitive_LocalToRelativeWorld;; Offset:   32
;       row_major float4x4 Primitive_RelativeWorldToLocal;; Offset:   96
;       row_major float4x4 Primitive_PreviousLocalToRelativeWorld;; Offset:  160
;       row_major float4x4 Primitive_PreviousRelativeWorldToLocal;; Offset:  224
;       row_major float4x4 Primitive_WorldToPreviousWorld;; Offset:  288
;       float3 Primitive_InvNonUniformScale;          ; Offset:  352
;       float Primitive_ObjectBoundsX;                ; Offset:  364
;       float4 Primitive_ObjectRelativeWorldPositionAndRadius;; Offset:  368
;       float3 Primitive_ActorRelativeWorldPosition;  ; Offset:  384
;       uint Primitive_LightmapUVIndex;               ; Offset:  396
;       float3 Primitive_ObjectOrientation;           ; Offset:  400
;       uint Primitive_LightmapDataIndex;             ; Offset:  412
;       float4 Primitive_NonUniformScale;             ; Offset:  416
;       float3 Primitive_PreSkinnedLocalBoundsMin;    ; Offset:  432
;       uint Primitive_NaniteResourceID;              ; Offset:  444
;       float3 Primitive_PreSkinnedLocalBoundsMax;    ; Offset:  448
;       uint Primitive_NaniteHierarchyOffset;         ; Offset:  460
;       float3 Primitive_LocalObjectBoundsMin;        ; Offset:  464
;       float Primitive_ObjectBoundsY;                ; Offset:  476
;       float3 Primitive_LocalObjectBoundsMax;        ; Offset:  480
;       float Primitive_ObjectBoundsZ;                ; Offset:  492
;       float3 Primitive_InstanceLocalBoundsCenter;   ; Offset:  496
;       uint Primitive_InstancePayloadDataOffset;     ; Offset:  508
;       float3 Primitive_InstanceLocalBoundsExtent;   ; Offset:  512
;       uint Primitive_InstancePayloadDataStride;     ; Offset:  524
;       float3 Primitive_WireframeColor;              ; Offset:  528
;       uint Primitive_PackedNaniteFlags;             ; Offset:  540
;       float3 Primitive_LevelColor;                  ; Offset:  544
;       int Primitive_PersistentPrimitiveIndex;       ; Offset:  556
;       float2 Primitive_InstanceDrawDistanceMinMaxSquared;; Offset:  560
;       float Primitive_InstanceWPODisableDistanceSquared;; Offset:  568
;       uint Primitive_NaniteRayTracingDataOffset;    ; Offset:  572
;       float Primitive_MaxWPODisplacement;           ; Offset:  576
;       uint Primitive_CustomStencilValueAndMask;     ; Offset:  580
;       uint PrePadding_Primitive_584;                ; Offset:  584
;       uint PrePadding_Primitive_588;                ; Offset:  588
;       float4 Primitive_CustomPrimitiveData[9];      ; Offset:  592
;   
;   } UniformBufferConstants_Primitive;               ; Offset:    0 Size:   736
;
; }
;
; cbuffer UniformBufferConstants_NiagaraSpriteVFLooseParameters
; {
;
;   struct UniformBufferConstants_NiagaraSpriteVFLooseParameters
;   {
;
;       uint NiagaraSpriteVFLooseParameters_NumCutoutVerticesPerFrame;; Offset:    0
;       uint NiagaraSpriteVFLooseParameters_NiagaraFloatDataStride;; Offset:    4
;       uint NiagaraSpriteVFLooseParameters_ParticleAlignmentMode;; Offset:    8
;       uint NiagaraSpriteVFLooseParameters_ParticleFacingMode;; Offset:   12
;       uint NiagaraSpriteVFLooseParameters_SortedIndicesOffset;; Offset:   16
;       uint NiagaraSpriteVFLooseParameters_IndirectArgsOffset;; Offset:   20
;       uint BindlessResource_NiagaraSpriteVFLooseParameters_CutoutGeometry;; Offset:   24
;       uint PrePadding_NiagaraSpriteVFLooseParameters_28;; Offset:   28
;       uint BindlessResource_NiagaraSpriteVFLooseParameters_NiagaraParticleDataFloat;; Offset:   32
;       uint PrePadding_NiagaraSpriteVFLooseParameters_36;; Offset:   36
;       uint BindlessResource_NiagaraSpriteVFLooseParameters_NiagaraParticleDataHalf;; Offset:   40
;       uint PrePadding_NiagaraSpriteVFLooseParameters_44;; Offset:   44
;       uint BindlessResource_NiagaraSpriteVFLooseParameters_SortedIndices;; Offset:   48
;       uint PrePadding_NiagaraSpriteVFLooseParameters_52;; Offset:   52
;       uint BindlessResource_NiagaraSpriteVFLooseParameters_IndirectArgsBuffer;; Offset:   56
;   
;   } UniformBufferConstants_NiagaraSpriteVFLooseParameters;; Offset:    0 Size:    60
;
; }
;
; cbuffer UniformBufferConstants_NiagaraSpriteVF
; {
;
;   struct UniformBufferConstants_NiagaraSpriteVF
;   {
;
;       uint NiagaraSpriteVF_bLocalSpace;             ; Offset:    0
;       uint PrePadding_NiagaraSpriteVF_4;            ; Offset:    4
;       uint PrePadding_NiagaraSpriteVF_8;            ; Offset:    8
;       uint PrePadding_NiagaraSpriteVF_12;           ; Offset:   12
;       float4 NiagaraSpriteVF_TangentSelector;       ; Offset:   16
;       float4 NiagaraSpriteVF_NormalsSphereCenter;   ; Offset:   32
;       float4 NiagaraSpriteVF_NormalsCylinderUnitDirection;; Offset:   48
;       float4 NiagaraSpriteVF_SubImageSize;          ; Offset:   64
;       float3 NiagaraSpriteVF_CameraFacingBlend;     ; Offset:   80
;       float NiagaraSpriteVF_RemoveHMDRoll;          ; Offset:   92
;       float4 NiagaraSpriteVF_MacroUVParameters;     ; Offset:   96
;       float NiagaraSpriteVF_RotationScale;          ; Offset:  112
;       float NiagaraSpriteVF_RotationBias;           ; Offset:  116
;       float NiagaraSpriteVF_NormalsType;            ; Offset:  120
;       float NiagaraSpriteVF_DeltaSeconds;           ; Offset:  124
;       float2 NiagaraSpriteVF_DefaultPivotOffset;    ; Offset:  128
;       float2 NiagaraSpriteVF_DefaultPrevPivotOffset;; Offset:  136
;       int NiagaraSpriteVF_PositionDataOffset;       ; Offset:  144
;       int NiagaraSpriteVF_PrevPositionDataOffset;   ; Offset:  148
;       int NiagaraSpriteVF_VelocityDataOffset;       ; Offset:  152
;       int NiagaraSpriteVF_PrevVelocityDataOffset;   ; Offset:  156
;       int NiagaraSpriteVF_RotationDataOffset;       ; Offset:  160
;       int NiagaraSpriteVF_PrevRotationDataOffset;   ; Offset:  164
;       int NiagaraSpriteVF_SizeDataOffset;           ; Offset:  168
;       int NiagaraSpriteVF_PrevSizeDataOffset;       ; Offset:  172
;       int NiagaraSpriteVF_SubimageDataOffset;       ; Offset:  176
;       int NiagaraSpriteVF_ColorDataOffset;          ; Offset:  180
;       uint NiagaraSpriteVF_MaterialParamValidMask;  ; Offset:  184
;       int NiagaraSpriteVF_MaterialParamDataOffset;  ; Offset:  188
;       int NiagaraSpriteVF_MaterialParam1DataOffset; ; Offset:  192
;       int NiagaraSpriteVF_MaterialParam2DataOffset; ; Offset:  196
;       int NiagaraSpriteVF_MaterialParam3DataOffset; ; Offset:  200
;       int NiagaraSpriteVF_FacingDataOffset;         ; Offset:  204
;       int NiagaraSpriteVF_PrevFacingDataOffset;     ; Offset:  208
;       int NiagaraSpriteVF_AlignmentDataOffset;      ; Offset:  212
;       int NiagaraSpriteVF_PrevAlignmentDataOffset;  ; Offset:  216
;       int NiagaraSpriteVF_SubImageBlendMode;        ; Offset:  220
;       int NiagaraSpriteVF_CameraOffsetDataOffset;   ; Offset:  224
;       int NiagaraSpriteVF_PrevCameraOffsetDataOffset;; Offset:  228
;       int NiagaraSpriteVF_UVScaleDataOffset;        ; Offset:  232
;       int NiagaraSpriteVF_PivotOffsetDataOffset;    ; Offset:  236
;       int NiagaraSpriteVF_PrevPivotOffsetDataOffset;; Offset:  240
;       int NiagaraSpriteVF_NormalizedAgeDataOffset;  ; Offset:  244
;       int NiagaraSpriteVF_MaterialRandomDataOffset; ; Offset:  248
;       int PrePadding_NiagaraSpriteVF_252;           ; Offset:  252
;       float4 NiagaraSpriteVF_DefaultPos;            ; Offset:  256
;       float4 NiagaraSpriteVF_DefaultPrevPos;        ; Offset:  272
;       float2 NiagaraSpriteVF_DefaultSize;           ; Offset:  288
;       float2 NiagaraSpriteVF_DefaultPrevSize;       ; Offset:  296
;       float2 NiagaraSpriteVF_DefaultUVScale;        ; Offset:  304
;       float PrePadding_NiagaraSpriteVF_312;         ; Offset:  312
;       float PrePadding_NiagaraSpriteVF_316;         ; Offset:  316
;       float3 NiagaraSpriteVF_DefaultVelocity;       ; Offset:  320
;       float PrePadding_NiagaraSpriteVF_332;         ; Offset:  332
;       float3 NiagaraSpriteVF_DefaultPrevVelocity;   ; Offset:  336
;       float PrePadding_NiagaraSpriteVF_348;         ; Offset:  348
;       float3 NiagaraSpriteVF_SystemLWCTile;         ; Offset:  352
;       float NiagaraSpriteVF_DefaultRotation;        ; Offset:  364
;       float NiagaraSpriteVF_DefaultPrevRotation;    ; Offset:  368
;       float PrePadding_NiagaraSpriteVF_372;         ; Offset:  372
;       float PrePadding_NiagaraSpriteVF_376;         ; Offset:  376
;       float PrePadding_NiagaraSpriteVF_380;         ; Offset:  380
;       float4 NiagaraSpriteVF_DefaultColor;          ; Offset:  384
;       float NiagaraSpriteVF_DefaultMatRandom;       ; Offset:  400
;       float NiagaraSpriteVF_DefaultCamOffset;       ; Offset:  404
;       float NiagaraSpriteVF_DefaultPrevCamOffset;   ; Offset:  408
;       float NiagaraSpriteVF_DefaultNormAge;         ; Offset:  412
;       float NiagaraSpriteVF_DefaultSubImage;        ; Offset:  416
;       float PrePadding_NiagaraSpriteVF_420;         ; Offset:  420
;       float PrePadding_NiagaraSpriteVF_424;         ; Offset:  424
;       float PrePadding_NiagaraSpriteVF_428;         ; Offset:  428
;       float4 NiagaraSpriteVF_DefaultFacing;         ; Offset:  432
;       float4 NiagaraSpriteVF_DefaultPrevFacing;     ; Offset:  448
;       float4 NiagaraSpriteVF_DefaultAlignment;      ; Offset:  464
;       float4 NiagaraSpriteVF_DefaultPrevAlignment;  ; Offset:  480
;       float4 NiagaraSpriteVF_DefaultDynamicMaterialParameter0;; Offset:  496
;       float4 NiagaraSpriteVF_DefaultDynamicMaterialParameter1;; Offset:  512
;       float4 NiagaraSpriteVF_DefaultDynamicMaterialParameter2;; Offset:  528
;       float4 NiagaraSpriteVF_DefaultDynamicMaterialParameter3;; Offset:  544
;       int NiagaraSpriteVF_PixelCoverageEnabled;     ; Offset:  560
;       int PrePadding_NiagaraSpriteVF_564;           ; Offset:  564
;       int PrePadding_NiagaraSpriteVF_568;           ; Offset:  568
;       int PrePadding_NiagaraSpriteVF_572;           ; Offset:  572
;       float4 NiagaraSpriteVF_PixelCoverageColorBlend;; Offset:  576
;       int NiagaraSpriteVF_AccurateMotionVectors;    ; Offset:  592
;   
;   } UniformBufferConstants_NiagaraSpriteVF;         ; Offset:    0 Size:   596
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_TranslucentBasePass   cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_Primitive   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_NiagaraSpriteVFLooseParameters   cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_NiagaraSpriteVF   cbuffer      NA          NA     CB4            cb4     1
; TranslucentBasePass_Shared_Fog_FogInscatteringColorSampler   sampler      NA          NA      S0             s0     1
; View_DistantSkyLightLutTextureSampler   sampler      NA          NA      S1             s1     1
; View_CameraAerialPerspectiveVolumeSampler   sampler      NA          NA      S2             s2     1
; TranslucentBasePass_Shared_Fog_FogInscatteringColorCubemap   texture     f32        cube      T0             t0     1
; View_DistantSkyLightLutTexture    texture     f32          2d      T1             t1     1
; View_CameraAerialPerspectiveVolume   texture     f32          3d      T2             t2     1
; NiagaraSpriteVFLooseParameters_CutoutGeometry   texture     f32         buf      T3             t3     1
; NiagaraSpriteVFLooseParameters_NiagaraParticleDataFloat   texture     f32         buf      T4             t4     1
; NiagaraSpriteVFLooseParameters_NiagaraParticleDataHalf   texture     f32         buf      T5             t5     1
; NiagaraSpriteVFLooseParameters_SortedIndices   texture     u32         buf      T6             t6     1
;
;
; ViewId state:
;
; Number of inputs: 9, outputs: 28
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 8 }
;   output 1 depends on inputs: { 8 }
;   output 2 depends on inputs: { 8 }
;   output 3 depends on inputs: { 8 }
;   output 4 depends on inputs: { 8 }
;   output 5 depends on inputs: { 8 }
;   output 6 depends on inputs: { 8 }
;   output 7 depends on inputs: { 8 }
;   output 8 depends on inputs: { 8 }
;   output 9 depends on inputs: { 8 }
;   output 10 depends on inputs: { 8 }
;   output 11 depends on inputs: { 8 }
;   output 12 depends on inputs: { 0, 4, 8 }
;   output 13 depends on inputs: { 1, 4, 8 }
;   output 16 depends on inputs: { 0, 1, 4, 8 }
;   output 17 depends on inputs: { 0, 1, 4, 8 }
;   output 18 depends on inputs: { 0, 1, 4, 8 }
;   output 19 depends on inputs: { 0, 1, 4, 8 }
;   output 20 depends on inputs: { 0, 1, 4, 8 }
;   output 21 depends on inputs: { 0, 1, 4, 8 }
;   output 22 depends on inputs: { 0, 1, 4, 8 }
;   output 24 depends on inputs: { 0, 1, 4, 8 }
;   output 25 depends on inputs: { 0, 1, 4, 8 }
;   output 26 depends on inputs: { 0, 1, 4, 8 }
;   output 27 depends on inputs: { 0, 1, 4, 8 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.TextureCube<vector<float, 4> >" = type { <4 x float> }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Texture3D<vector<float, 4> >" = type { <4 x float>, %"class.Texture3D<vector<float, 4> >::mips_type" }
%"class.Texture3D<vector<float, 4> >::mips_type" = type { i32 }
%"class.Buffer<vector<float, 2> >" = type { <2 x float> }
%"class.Buffer<float>" = type { float }
%"class.Buffer<unsigned int>" = type { i32 }
%hostlayout.UniformBufferConstants_TranslucentBasePass = type { i32, i32, i32, i32, <3 x i32>, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float>, float, <3 x float>, float, i32, i32, <2 x float>, i32, i32, i32, i32, <4 x float>, [4 x [4 x <4 x float>]], [4 x <4 x float>], <4 x float>, float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, [4 x <4 x float>], i32, float, float, float, float, i32, i32, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, i32, <3 x i32>, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float>, float, <3 x float>, float, i32, i32, <2 x float>, i32, i32, i32, i32, <4 x float>, [4 x [4 x <4 x float>]], [4 x <4 x float>], <4 x float>, float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, [4 x <4 x float>], i32, float, float, float, float, i32, i32, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, [3 x <4 x float>], <3 x float>, float, <2 x float>, float, float, [2 x [4 x <4 x float>]], [2 x <4 x float>], <2 x float>, i32, i32, i32, i32, i32, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, <3 x float>, float, float, float, i32, i32, i32, i32, i32, i32, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, <3 x float>, float, float, float, i32, i32, i32, i32, i32, i32, i32, float, float, float, i32, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, [4 x <4 x float>], float, float, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, <4 x float>, <4 x float>, <2 x float>, <2 x float>, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, float, <2 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], <2 x float>, <2 x float>, <2 x float>, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, i32, <3 x i32>, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, <3 x i32>, i32, <3 x i32>, i32, i32, i32, i32 }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, <4 x float>, <4 x float>, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%hostlayout.UniformBufferConstants_Primitive = type { i32, i32, i32, i32, <3 x float>, i32, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <4 x float>, <3 x float>, i32, <3 x float>, i32, <4 x float>, <3 x float>, i32, <3 x float>, i32, <3 x float>, float, <3 x float>, float, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, <3 x float>, i32, <2 x float>, float, i32, float, i32, i32, i32, [9 x <4 x float>] }
%UniformBufferConstants_NiagaraSpriteVFLooseParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_NiagaraSpriteVF = type { i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <3 x float>, float, <4 x float>, float, float, float, float, <2 x float>, <2 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <2 x float>, <2 x float>, <2 x float>, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, i32, i32, i32, i32, <4 x float>, i32 }
%struct.SamplerState = type { i32 }

define void @Main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 3 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 2 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 2 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %16 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 13, i32 596 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %17 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 13, i32 60 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %18 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 13, i32 736 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %19 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 13, i32 5420 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %20 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %15, %dx.types.ResourceProperties { i32 13, i32 3404 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %21 = call i32 @dx.op.loadInput.i32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %22 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %23 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef), !dx.precise !43  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %24 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef), !dx.precise !43  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %25 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 116)  ; CBufferLoadLegacy(handle,regIndex)
  %26 = extractvalue %dx.types.CBufRet.f32 %25, 0
  %27 = extractvalue %dx.types.CBufRet.f32 %25, 1
  %28 = extractvalue %dx.types.CBufRet.f32 %25, 2
  %29 = extractvalue %dx.types.CBufRet.f32 %25, 3
  %30 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 117)  ; CBufferLoadLegacy(handle,regIndex)
  %31 = extractvalue %dx.types.CBufRet.f32 %30, 0
  %32 = extractvalue %dx.types.CBufRet.f32 %30, 1
  %33 = extractvalue %dx.types.CBufRet.f32 %30, 2
  %34 = extractvalue %dx.types.CBufRet.f32 %30, 3
  %35 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 118)  ; CBufferLoadLegacy(handle,regIndex)
  %36 = extractvalue %dx.types.CBufRet.f32 %35, 0
  %37 = extractvalue %dx.types.CBufRet.f32 %35, 1
  %38 = extractvalue %dx.types.CBufRet.f32 %35, 2
  %39 = extractvalue %dx.types.CBufRet.f32 %35, 3
  %40 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 119)  ; CBufferLoadLegacy(handle,regIndex)
  %41 = extractvalue %dx.types.CBufRet.f32 %40, 0
  %42 = extractvalue %dx.types.CBufRet.f32 %40, 1
  %43 = extractvalue %dx.types.CBufRet.f32 %40, 2
  %44 = extractvalue %dx.types.CBufRet.f32 %40, 3
  %45 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 120)  ; CBufferLoadLegacy(handle,regIndex)
  %46 = extractvalue %dx.types.CBufRet.f32 %45, 0
  %47 = extractvalue %dx.types.CBufRet.f32 %45, 1
  %48 = extractvalue %dx.types.CBufRet.f32 %45, 2
  %49 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 121)  ; CBufferLoadLegacy(handle,regIndex)
  %50 = extractvalue %dx.types.CBufRet.f32 %49, 3
  %51 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 122)  ; CBufferLoadLegacy(handle,regIndex)
  %52 = extractvalue %dx.types.CBufRet.f32 %51, 0
  %53 = extractvalue %dx.types.CBufRet.f32 %51, 1
  %54 = extractvalue %dx.types.CBufRet.f32 %51, 2
  %55 = extractvalue %dx.types.CBufRet.f32 %51, 3
  %56 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 123)  ; CBufferLoadLegacy(handle,regIndex)
  %57 = extractvalue %dx.types.CBufRet.f32 %56, 0
  %58 = extractvalue %dx.types.CBufRet.f32 %56, 1
  %59 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %20, i32 124)  ; CBufferLoadLegacy(handle,regIndex)
  %60 = extractvalue %dx.types.CBufRet.f32 %59, 0
  %61 = extractvalue %dx.types.CBufRet.f32 %59, 1
  %62 = extractvalue %dx.types.CBufRet.f32 %59, 2
  %63 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %64 = extractvalue %dx.types.CBufRet.f32 %63, 0
  %65 = extractvalue %dx.types.CBufRet.f32 %63, 1
  %66 = extractvalue %dx.types.CBufRet.f32 %63, 2
  %67 = extractvalue %dx.types.CBufRet.f32 %63, 3
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 0
  %70 = extractvalue %dx.types.CBufRet.f32 %68, 1
  %71 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %72 = extractvalue %dx.types.CBufRet.f32 %68, 3
  %73 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %74 = extractvalue %dx.types.CBufRet.f32 %73, 0
  %75 = extractvalue %dx.types.CBufRet.f32 %73, 1
  %76 = extractvalue %dx.types.CBufRet.f32 %73, 2
  %77 = extractvalue %dx.types.CBufRet.f32 %73, 3
  %78 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %79 = extractvalue %dx.types.CBufRet.f32 %78, 0
  %80 = extractvalue %dx.types.CBufRet.f32 %78, 1
  %81 = extractvalue %dx.types.CBufRet.f32 %78, 2
  %82 = extractvalue %dx.types.CBufRet.f32 %78, 3
  %83 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %84 = extractvalue %dx.types.CBufRet.f32 %83, 0
  %85 = extractvalue %dx.types.CBufRet.f32 %83, 1
  %86 = extractvalue %dx.types.CBufRet.f32 %83, 2
  %87 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 66)  ; CBufferLoadLegacy(handle,regIndex)
  %88 = extractvalue %dx.types.CBufRet.f32 %87, 0
  %89 = extractvalue %dx.types.CBufRet.f32 %87, 1
  %90 = extractvalue %dx.types.CBufRet.f32 %87, 2
  %91 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 67)  ; CBufferLoadLegacy(handle,regIndex)
  %92 = extractvalue %dx.types.CBufRet.f32 %91, 0
  %93 = extractvalue %dx.types.CBufRet.f32 %91, 1
  %94 = extractvalue %dx.types.CBufRet.f32 %91, 2
  %95 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 68)  ; CBufferLoadLegacy(handle,regIndex)
  %96 = extractvalue %dx.types.CBufRet.f32 %95, 0
  %97 = extractvalue %dx.types.CBufRet.f32 %95, 1
  %98 = extractvalue %dx.types.CBufRet.f32 %95, 2
  %99 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 69)  ; CBufferLoadLegacy(handle,regIndex)
  %100 = extractvalue %dx.types.CBufRet.f32 %99, 0
  %101 = extractvalue %dx.types.CBufRet.f32 %99, 1
  %102 = extractvalue %dx.types.CBufRet.f32 %99, 2
  %103 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 70)  ; CBufferLoadLegacy(handle,regIndex)
  %104 = extractvalue %dx.types.CBufRet.f32 %103, 0
  %105 = extractvalue %dx.types.CBufRet.f32 %103, 1
  %106 = extractvalue %dx.types.CBufRet.f32 %103, 2
  %107 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 73)  ; CBufferLoadLegacy(handle,regIndex)
  %108 = extractvalue %dx.types.CBufRet.f32 %107, 0
  %109 = extractvalue %dx.types.CBufRet.f32 %107, 1
  %110 = extractvalue %dx.types.CBufRet.f32 %107, 2
  %111 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 74)  ; CBufferLoadLegacy(handle,regIndex)
  %112 = extractvalue %dx.types.CBufRet.f32 %111, 0
  %113 = extractvalue %dx.types.CBufRet.f32 %111, 1
  %114 = extractvalue %dx.types.CBufRet.f32 %111, 2
  %115 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %116 = extractvalue %dx.types.CBufRet.f32 %115, 0
  %117 = extractvalue %dx.types.CBufRet.f32 %115, 1
  %118 = extractvalue %dx.types.CBufRet.f32 %115, 2
  %119 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 136)  ; CBufferLoadLegacy(handle,regIndex)
  %120 = extractvalue %dx.types.CBufRet.f32 %119, 2
  %121 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 180)  ; CBufferLoadLegacy(handle,regIndex)
  %122 = extractvalue %dx.types.CBufRet.f32 %121, 0
  %123 = extractvalue %dx.types.CBufRet.f32 %121, 1
  %124 = extractvalue %dx.types.CBufRet.f32 %121, 2
  %125 = extractvalue %dx.types.CBufRet.f32 %121, 3
  %126 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 181)  ; CBufferLoadLegacy(handle,regIndex)
  %127 = extractvalue %dx.types.CBufRet.f32 %126, 0
  %128 = extractvalue %dx.types.CBufRet.f32 %126, 1
  %129 = extractvalue %dx.types.CBufRet.f32 %126, 2
  %130 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 182)  ; CBufferLoadLegacy(handle,regIndex)
  %131 = extractvalue %dx.types.CBufRet.f32 %130, 0
  %132 = extractvalue %dx.types.CBufRet.f32 %130, 1
  %133 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 184)  ; CBufferLoadLegacy(handle,regIndex)
  %134 = extractvalue %dx.types.CBufRet.f32 %133, 0
  %135 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %136 = extractvalue %dx.types.CBufRet.i32 %135, 0
  %137 = icmp eq i32 %136, -1
  br i1 %137, label %145, label %138

; <label>:138                                     ; preds = %0
  %139 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %140 = extractvalue %dx.types.CBufRet.i32 %139, 0
  %141 = add i32 %140, %21
  %142 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %143 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %142, i32 %141, i32 undef)  ; BufferLoad(srv,index,wot)
  %144 = extractvalue %dx.types.ResRet.i32 %143, 0
  br label %145

; <label>:145                                     ; preds = %138, %0
  %146 = phi i32 [ %144, %138 ], [ %21, %0 ]
  %147 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 16)  ; CBufferLoadLegacy(handle,regIndex)
  %148 = extractvalue %dx.types.CBufRet.f32 %147, 0
  %149 = extractvalue %dx.types.CBufRet.f32 %147, 1
  %150 = extractvalue %dx.types.CBufRet.f32 %147, 2
  %151 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %152 = extractvalue %dx.types.CBufRet.i32 %151, 0
  %153 = icmp eq i32 %152, -1
  br i1 %153, label %183, label %154, !dx.controlflow.hints !51

; <label>:154                                     ; preds = %145
  %155 = icmp slt i32 %152, 0
  %156 = and i32 %152, 2147483647
  %157 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %158 = extractvalue %dx.types.CBufRet.i32 %157, 1
  %159 = mul i32 %158, %156
  %160 = add i32 %159, %146
  %161 = add nuw nsw i32 %156, 1
  %162 = mul i32 %158, %161
  %163 = add i32 %162, %146
  %164 = add nuw nsw i32 %156, 2
  %165 = mul i32 %158, %164
  %166 = add i32 %165, %146
  br i1 %155, label %167, label %175, !dx.controlflow.hints !52

; <label>:167                                     ; preds = %154
  %168 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %169 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %168, i32 %160, i32 undef)  ; BufferLoad(srv,index,wot)
  %170 = extractvalue %dx.types.ResRet.f32 %169, 0
  %171 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %168, i32 %163, i32 undef)  ; BufferLoad(srv,index,wot)
  %172 = extractvalue %dx.types.ResRet.f32 %171, 0
  %173 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %168, i32 %166, i32 undef)  ; BufferLoad(srv,index,wot)
  %174 = extractvalue %dx.types.ResRet.f32 %173, 0
  br label %183

; <label>:175                                     ; preds = %154
  %176 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %177 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %176, i32 %160, i32 undef)  ; BufferLoad(srv,index,wot)
  %178 = extractvalue %dx.types.ResRet.f32 %177, 0
  %179 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %176, i32 %163, i32 undef)  ; BufferLoad(srv,index,wot)
  %180 = extractvalue %dx.types.ResRet.f32 %179, 0
  %181 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %176, i32 %166, i32 undef)  ; BufferLoad(srv,index,wot)
  %182 = extractvalue %dx.types.ResRet.f32 %181, 0
  br label %183

; <label>:183                                     ; preds = %175, %167, %145
  %184 = phi float [ %148, %145 ], [ %170, %167 ], [ %178, %175 ]
  %185 = phi float [ %149, %145 ], [ %172, %167 ], [ %180, %175 ]
  %186 = phi float [ %150, %145 ], [ %174, %167 ], [ %182, %175 ]
  %187 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %188 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %189 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %190 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %191 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %192 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %193 = extractvalue %dx.types.CBufRet.i32 %192, 0
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %229, label %195

; <label>:195                                     ; preds = %183
  %196 = extractvalue %dx.types.CBufRet.f32 %191, 2
  %197 = extractvalue %dx.types.CBufRet.f32 %191, 1
  %198 = extractvalue %dx.types.CBufRet.f32 %191, 0
  %199 = extractvalue %dx.types.CBufRet.f32 %190, 2
  %200 = extractvalue %dx.types.CBufRet.f32 %190, 1
  %201 = extractvalue %dx.types.CBufRet.f32 %190, 0
  %202 = extractvalue %dx.types.CBufRet.f32 %189, 2
  %203 = extractvalue %dx.types.CBufRet.f32 %189, 1
  %204 = extractvalue %dx.types.CBufRet.f32 %189, 0
  %205 = extractvalue %dx.types.CBufRet.f32 %188, 2
  %206 = extractvalue %dx.types.CBufRet.f32 %188, 1
  %207 = extractvalue %dx.types.CBufRet.f32 %188, 0
  %208 = extractvalue %dx.types.CBufRet.f32 %187, 2
  %209 = extractvalue %dx.types.CBufRet.f32 %187, 1
  %210 = extractvalue %dx.types.CBufRet.f32 %187, 0
  %211 = fmul float %184, %210
  %212 = fmul float %184, %209
  %213 = fmul float %184, %208
  %214 = fmul float %185, %207
  %215 = fmul float %185, %206
  %216 = fmul float %185, %205
  %217 = fadd float %211, %214
  %218 = fadd float %212, %215
  %219 = fadd float %213, %216
  %220 = fmul float %186, %204
  %221 = fmul float %186, %203
  %222 = fmul float %186, %202
  %223 = fadd float %217, %220
  %224 = fadd float %218, %221
  %225 = fadd float %219, %222
  %226 = fadd float %201, %223
  %227 = fadd float %200, %224
  %228 = fadd float %199, %225
  br label %234

; <label>:229                                     ; preds = %183
  %230 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %231 = extractvalue %dx.types.CBufRet.f32 %230, 0
  %232 = extractvalue %dx.types.CBufRet.f32 %230, 1
  %233 = extractvalue %dx.types.CBufRet.f32 %230, 2
  br label %234

; <label>:234                                     ; preds = %229, %195
  %235 = phi float [ %226, %195 ], [ %184, %229 ]
  %236 = phi float [ %227, %195 ], [ %185, %229 ]
  %237 = phi float [ %228, %195 ], [ %186, %229 ]
  %238 = phi float [ %198, %195 ], [ %231, %229 ]
  %239 = phi float [ %197, %195 ], [ %232, %229 ]
  %240 = phi float [ %196, %195 ], [ %233, %229 ]
  %241 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %242 = extractvalue %dx.types.CBufRet.f32 %241, 3
  %243 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %244 = extractvalue %dx.types.CBufRet.i32 %243, 0
  %245 = icmp eq i32 %244, -1
  br i1 %245, label %261, label %246, !dx.controlflow.hints !53

; <label>:246                                     ; preds = %234
  %247 = icmp slt i32 %244, 0
  %248 = and i32 %244, 2147483647
  %249 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %250 = extractvalue %dx.types.CBufRet.i32 %249, 1
  %251 = mul i32 %250, %248
  %252 = add i32 %251, %146
  br i1 %247, label %253, label %257, !dx.controlflow.hints !54

; <label>:253                                     ; preds = %246
  %254 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %255 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %254, i32 %252, i32 undef)  ; BufferLoad(srv,index,wot)
  %256 = extractvalue %dx.types.ResRet.f32 %255, 0
  br label %261

; <label>:257                                     ; preds = %246
  %258 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %259 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %258, i32 %252, i32 undef)  ; BufferLoad(srv,index,wot)
  %260 = extractvalue %dx.types.ResRet.f32 %259, 0
  br label %261

; <label>:261                                     ; preds = %257, %253, %234
  %262 = phi float [ %242, %234 ], [ %256, %253 ], [ %260, %257 ]
  %263 = fdiv float %262, 1.800000e+02
  %264 = fmul float %263, 0x400921FB60000000
  %265 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 18)  ; CBufferLoadLegacy(handle,regIndex)
  %266 = extractvalue %dx.types.CBufRet.f32 %265, 0
  %267 = extractvalue %dx.types.CBufRet.f32 %265, 1
  %268 = extractvalue %dx.types.CBufRet.i32 %243, 2
  %269 = icmp eq i32 %268, -1
  br i1 %269, label %292, label %270, !dx.controlflow.hints !55

; <label>:270                                     ; preds = %261
  %271 = icmp slt i32 %268, 0
  %272 = and i32 %268, 2147483647
  %273 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %274 = extractvalue %dx.types.CBufRet.i32 %273, 1
  %275 = mul i32 %274, %272
  %276 = add i32 %275, %146
  %277 = add nuw nsw i32 %272, 1
  %278 = mul i32 %274, %277
  %279 = add i32 %278, %146
  br i1 %271, label %280, label %286, !dx.controlflow.hints !56

; <label>:280                                     ; preds = %270
  %281 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %282 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %281, i32 %276, i32 undef)  ; BufferLoad(srv,index,wot)
  %283 = extractvalue %dx.types.ResRet.f32 %282, 0
  %284 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %281, i32 %279, i32 undef)  ; BufferLoad(srv,index,wot)
  %285 = extractvalue %dx.types.ResRet.f32 %284, 0
  br label %292

; <label>:286                                     ; preds = %270
  %287 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %288 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %287, i32 %276, i32 undef)  ; BufferLoad(srv,index,wot)
  %289 = extractvalue %dx.types.ResRet.f32 %288, 0
  %290 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %287, i32 %279, i32 undef)  ; BufferLoad(srv,index,wot)
  %291 = extractvalue %dx.types.ResRet.f32 %290, 0
  br label %292

; <label>:292                                     ; preds = %286, %280, %261
  %293 = phi float [ %266, %261 ], [ %283, %280 ], [ %289, %286 ]
  %294 = phi float [ %267, %261 ], [ %285, %280 ], [ %291, %286 ]
  %295 = extractvalue %dx.types.CBufRet.f32 %187, 0
  %296 = extractvalue %dx.types.CBufRet.f32 %187, 1
  %297 = extractvalue %dx.types.CBufRet.f32 %187, 2
  %298 = extractvalue %dx.types.CBufRet.f32 %188, 0
  %299 = extractvalue %dx.types.CBufRet.f32 %188, 1
  %300 = extractvalue %dx.types.CBufRet.f32 %188, 2
  %301 = extractvalue %dx.types.CBufRet.f32 %189, 0
  %302 = extractvalue %dx.types.CBufRet.f32 %189, 1
  %303 = extractvalue %dx.types.CBufRet.f32 %189, 2
  %304 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %305 = extractvalue %dx.types.CBufRet.f32 %304, 0
  %306 = extractvalue %dx.types.CBufRet.f32 %304, 1
  %307 = extractvalue %dx.types.CBufRet.f32 %304, 2
  %308 = extractvalue %dx.types.CBufRet.i32 %151, 2
  %309 = icmp eq i32 %308, -1
  br i1 %309, label %339, label %310, !dx.controlflow.hints !51

; <label>:310                                     ; preds = %292
  %311 = icmp slt i32 %308, 0
  %312 = and i32 %308, 2147483647
  %313 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %314 = extractvalue %dx.types.CBufRet.i32 %313, 1
  %315 = mul i32 %314, %312
  %316 = add i32 %315, %146
  %317 = add nuw nsw i32 %312, 1
  %318 = mul i32 %314, %317
  %319 = add i32 %318, %146
  %320 = add nuw nsw i32 %312, 2
  %321 = mul i32 %314, %320
  %322 = add i32 %321, %146
  br i1 %311, label %323, label %331, !dx.controlflow.hints !52

; <label>:323                                     ; preds = %310
  %324 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %325 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %324, i32 %316, i32 undef)  ; BufferLoad(srv,index,wot)
  %326 = extractvalue %dx.types.ResRet.f32 %325, 0
  %327 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %324, i32 %319, i32 undef)  ; BufferLoad(srv,index,wot)
  %328 = extractvalue %dx.types.ResRet.f32 %327, 0
  %329 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %324, i32 %322, i32 undef)  ; BufferLoad(srv,index,wot)
  %330 = extractvalue %dx.types.ResRet.f32 %329, 0
  br label %339

; <label>:331                                     ; preds = %310
  %332 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %333 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %332, i32 %316, i32 undef)  ; BufferLoad(srv,index,wot)
  %334 = extractvalue %dx.types.ResRet.f32 %333, 0
  %335 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %332, i32 %319, i32 undef)  ; BufferLoad(srv,index,wot)
  %336 = extractvalue %dx.types.ResRet.f32 %335, 0
  %337 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %332, i32 %322, i32 undef)  ; BufferLoad(srv,index,wot)
  %338 = extractvalue %dx.types.ResRet.f32 %337, 0
  br label %339

; <label>:339                                     ; preds = %331, %323, %292
  %340 = phi float [ %305, %292 ], [ %326, %323 ], [ %334, %331 ]
  %341 = phi float [ %306, %292 ], [ %328, %323 ], [ %336, %331 ]
  %342 = phi float [ %307, %292 ], [ %330, %323 ], [ %338, %331 ]
  br i1 %194, label %372, label %343

; <label>:343                                     ; preds = %339
  %344 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %345 = extractvalue %dx.types.CBufRet.f32 %344, 0
  %346 = extractvalue %dx.types.CBufRet.f32 %344, 1
  %347 = extractvalue %dx.types.CBufRet.f32 %344, 2
  %348 = fmul float %295, %345
  %349 = fmul float %296, %345
  %350 = fmul float %297, %345
  %351 = fmul float %340, %348
  %352 = fmul float %340, %349
  %353 = fmul float %340, %350
  %354 = fmul float %298, %346
  %355 = fmul float %299, %346
  %356 = fmul float %300, %346
  %357 = fmul float %341, %354
  %358 = fmul float %341, %355
  %359 = fmul float %341, %356
  %360 = fadd float %351, %357
  %361 = fadd float %352, %358
  %362 = fadd float %353, %359
  %363 = fmul float %301, %347
  %364 = fmul float %302, %347
  %365 = fmul float %303, %347
  %366 = fmul float %342, %363
  %367 = fmul float %342, %364
  %368 = fmul float %342, %365
  %369 = fadd float %366, %360
  %370 = fadd float %367, %361
  %371 = fadd float %368, %362
  br label %372

; <label>:372                                     ; preds = %343, %339
  %373 = phi float [ %369, %343 ], [ %340, %339 ]
  %374 = phi float [ %370, %343 ], [ %341, %339 ]
  %375 = phi float [ %371, %343 ], [ %342, %339 ]
  %376 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 26)  ; CBufferLoadLegacy(handle,regIndex)
  %377 = extractvalue %dx.types.CBufRet.f32 %376, 0
  %378 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %379 = extractvalue %dx.types.CBufRet.i32 %378, 0
  %380 = icmp eq i32 %379, -1
  br i1 %380, label %396, label %381, !dx.controlflow.hints !53

; <label>:381                                     ; preds = %372
  %382 = icmp slt i32 %379, 0
  %383 = and i32 %379, 2147483647
  %384 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %385 = extractvalue %dx.types.CBufRet.i32 %384, 1
  %386 = mul i32 %385, %383
  %387 = add i32 %386, %146
  br i1 %382, label %388, label %392, !dx.controlflow.hints !54

; <label>:388                                     ; preds = %381
  %389 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %390 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %389, i32 %387, i32 undef)  ; BufferLoad(srv,index,wot)
  %391 = extractvalue %dx.types.ResRet.f32 %390, 0
  br label %396

; <label>:392                                     ; preds = %381
  %393 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %394 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %393, i32 %387, i32 undef)  ; BufferLoad(srv,index,wot)
  %395 = extractvalue %dx.types.ResRet.f32 %394, 0
  br label %396

; <label>:396                                     ; preds = %392, %388, %372
  %397 = phi float [ %377, %372 ], [ %391, %388 ], [ %395, %392 ]
  %398 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 27)  ; CBufferLoadLegacy(handle,regIndex)
  %399 = extractvalue %dx.types.CBufRet.f32 %398, 0
  %400 = extractvalue %dx.types.CBufRet.f32 %398, 1
  %401 = extractvalue %dx.types.CBufRet.f32 %398, 2
  %402 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %403 = extractvalue %dx.types.CBufRet.i32 %402, 3
  %404 = icmp eq i32 %403, -1
  br i1 %404, label %434, label %405, !dx.controlflow.hints !51

; <label>:405                                     ; preds = %396
  %406 = icmp slt i32 %403, 0
  %407 = and i32 %403, 2147483647
  %408 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %409 = extractvalue %dx.types.CBufRet.i32 %408, 1
  %410 = mul i32 %409, %407
  %411 = add i32 %410, %146
  %412 = add nuw nsw i32 %407, 1
  %413 = mul i32 %409, %412
  %414 = add i32 %413, %146
  %415 = add nuw nsw i32 %407, 2
  %416 = mul i32 %409, %415
  %417 = add i32 %416, %146
  br i1 %406, label %418, label %426, !dx.controlflow.hints !52

; <label>:418                                     ; preds = %405
  %419 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %420 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %419, i32 %411, i32 undef)  ; BufferLoad(srv,index,wot)
  %421 = extractvalue %dx.types.ResRet.f32 %420, 0
  %422 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %419, i32 %414, i32 undef)  ; BufferLoad(srv,index,wot)
  %423 = extractvalue %dx.types.ResRet.f32 %422, 0
  %424 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %419, i32 %417, i32 undef)  ; BufferLoad(srv,index,wot)
  %425 = extractvalue %dx.types.ResRet.f32 %424, 0
  br label %434

; <label>:426                                     ; preds = %405
  %427 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %428 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %427, i32 %411, i32 undef)  ; BufferLoad(srv,index,wot)
  %429 = extractvalue %dx.types.ResRet.f32 %428, 0
  %430 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %427, i32 %414, i32 undef)  ; BufferLoad(srv,index,wot)
  %431 = extractvalue %dx.types.ResRet.f32 %430, 0
  %432 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %427, i32 %417, i32 undef)  ; BufferLoad(srv,index,wot)
  %433 = extractvalue %dx.types.ResRet.f32 %432, 0
  br label %434

; <label>:434                                     ; preds = %426, %418, %396
  %435 = phi float [ %399, %396 ], [ %421, %418 ], [ %429, %426 ]
  %436 = phi float [ %400, %396 ], [ %423, %418 ], [ %431, %426 ]
  %437 = phi float [ %401, %396 ], [ %425, %418 ], [ %433, %426 ]
  br i1 %194, label %467, label %438

; <label>:438                                     ; preds = %434
  %439 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %440 = extractvalue %dx.types.CBufRet.f32 %439, 0
  %441 = extractvalue %dx.types.CBufRet.f32 %439, 1
  %442 = extractvalue %dx.types.CBufRet.f32 %439, 2
  %443 = fmul float %295, %440
  %444 = fmul float %296, %440
  %445 = fmul float %297, %440
  %446 = fmul float %435, %443
  %447 = fmul float %435, %444
  %448 = fmul float %435, %445
  %449 = fmul float %298, %441
  %450 = fmul float %299, %441
  %451 = fmul float %300, %441
  %452 = fmul float %436, %449
  %453 = fmul float %436, %450
  %454 = fmul float %436, %451
  %455 = fadd float %446, %452
  %456 = fadd float %447, %453
  %457 = fadd float %448, %454
  %458 = fmul float %301, %442
  %459 = fmul float %302, %442
  %460 = fmul float %303, %442
  %461 = fmul float %437, %458
  %462 = fmul float %437, %459
  %463 = fmul float %437, %460
  %464 = fadd float %461, %455
  %465 = fadd float %462, %456
  %466 = fadd float %463, %457
  br label %467

; <label>:467                                     ; preds = %438, %434
  %468 = phi float [ %464, %438 ], [ %435, %434 ]
  %469 = phi float [ %465, %438 ], [ %436, %434 ]
  %470 = phi float [ %466, %438 ], [ %437, %434 ]
  %471 = fmul float %468, %468
  %472 = fmul float %469, %469
  %473 = fadd float %471, %472
  %474 = fmul float %470, %470
  %475 = fadd float %473, %474
  %476 = call float @dx.op.unary.f32(i32 24, float %475), !dx.precise !43  ; Sqrt(value)
  %477 = call float @dx.op.binary.f32(i32 35, float %476, float 0x3EB0C6F7A0000000), !dx.precise !43  ; FMax(a,b)
  %478 = fdiv float %468, %477
  %479 = fdiv float %469, %477
  %480 = fdiv float %470, %477
  %481 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 29)  ; CBufferLoadLegacy(handle,regIndex)
  %482 = extractvalue %dx.types.CBufRet.f32 %481, 0
  %483 = extractvalue %dx.types.CBufRet.f32 %481, 1
  %484 = extractvalue %dx.types.CBufRet.f32 %481, 2
  %485 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %486 = extractvalue %dx.types.CBufRet.i32 %485, 1
  %487 = icmp eq i32 %486, -1
  br i1 %487, label %517, label %488, !dx.controlflow.hints !51

; <label>:488                                     ; preds = %467
  %489 = icmp slt i32 %486, 0
  %490 = and i32 %486, 2147483647
  %491 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %492 = extractvalue %dx.types.CBufRet.i32 %491, 1
  %493 = mul i32 %492, %490
  %494 = add i32 %493, %146
  %495 = add nuw nsw i32 %490, 1
  %496 = mul i32 %492, %495
  %497 = add i32 %496, %146
  %498 = add nuw nsw i32 %490, 2
  %499 = mul i32 %492, %498
  %500 = add i32 %499, %146
  br i1 %489, label %501, label %509, !dx.controlflow.hints !52

; <label>:501                                     ; preds = %488
  %502 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %503 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %502, i32 %494, i32 undef)  ; BufferLoad(srv,index,wot)
  %504 = extractvalue %dx.types.ResRet.f32 %503, 0
  %505 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %502, i32 %497, i32 undef)  ; BufferLoad(srv,index,wot)
  %506 = extractvalue %dx.types.ResRet.f32 %505, 0
  %507 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %502, i32 %500, i32 undef)  ; BufferLoad(srv,index,wot)
  %508 = extractvalue %dx.types.ResRet.f32 %507, 0
  br label %517

; <label>:509                                     ; preds = %488
  %510 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %511 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %510, i32 %494, i32 undef)  ; BufferLoad(srv,index,wot)
  %512 = extractvalue %dx.types.ResRet.f32 %511, 0
  %513 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %510, i32 %497, i32 undef)  ; BufferLoad(srv,index,wot)
  %514 = extractvalue %dx.types.ResRet.f32 %513, 0
  %515 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %510, i32 %500, i32 undef)  ; BufferLoad(srv,index,wot)
  %516 = extractvalue %dx.types.ResRet.f32 %515, 0
  br label %517

; <label>:517                                     ; preds = %509, %501, %467
  %518 = phi float [ %482, %467 ], [ %504, %501 ], [ %512, %509 ]
  %519 = phi float [ %483, %467 ], [ %506, %501 ], [ %514, %509 ]
  %520 = phi float [ %484, %467 ], [ %508, %501 ], [ %516, %509 ]
  br i1 %194, label %550, label %521

; <label>:521                                     ; preds = %517
  %522 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %523 = extractvalue %dx.types.CBufRet.f32 %522, 0
  %524 = extractvalue %dx.types.CBufRet.f32 %522, 1
  %525 = extractvalue %dx.types.CBufRet.f32 %522, 2
  %526 = fmul float %295, %523
  %527 = fmul float %296, %523
  %528 = fmul float %297, %523
  %529 = fmul float %518, %526
  %530 = fmul float %518, %527
  %531 = fmul float %518, %528
  %532 = fmul float %298, %524
  %533 = fmul float %299, %524
  %534 = fmul float %300, %524
  %535 = fmul float %519, %532
  %536 = fmul float %519, %533
  %537 = fmul float %519, %534
  %538 = fadd float %529, %535
  %539 = fadd float %530, %536
  %540 = fadd float %531, %537
  %541 = fmul float %301, %525
  %542 = fmul float %302, %525
  %543 = fmul float %303, %525
  %544 = fmul float %520, %541
  %545 = fmul float %520, %542
  %546 = fmul float %520, %543
  %547 = fadd float %544, %538
  %548 = fadd float %545, %539
  %549 = fadd float %546, %540
  br label %550

; <label>:550                                     ; preds = %521, %517
  %551 = phi float [ %547, %521 ], [ %518, %517 ]
  %552 = phi float [ %548, %521 ], [ %519, %517 ]
  %553 = phi float [ %549, %521 ], [ %520, %517 ]
  %554 = fmul float %551, %551
  %555 = fmul float %552, %552
  %556 = fadd float %554, %555
  %557 = fmul float %553, %553
  %558 = fadd float %556, %557
  %559 = call float @dx.op.unary.f32(i32 24, float %558), !dx.precise !43  ; Sqrt(value)
  %560 = call float @dx.op.binary.f32(i32 35, float %559, float 0x3EB0C6F7A0000000), !dx.precise !43  ; FMax(a,b)
  %561 = fdiv float %551, %560
  %562 = fdiv float %552, %560
  %563 = fdiv float %553, %560
  %564 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %565 = extractvalue %dx.types.CBufRet.f32 %564, 0
  %566 = extractvalue %dx.types.CBufRet.f32 %564, 1
  %567 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %568 = extractvalue %dx.types.CBufRet.i32 %567, 3
  %569 = icmp eq i32 %568, -1
  br i1 %569, label %592, label %570, !dx.controlflow.hints !55

; <label>:570                                     ; preds = %550
  %571 = icmp slt i32 %568, 0
  %572 = and i32 %568, 2147483647
  %573 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %574 = extractvalue %dx.types.CBufRet.i32 %573, 1
  %575 = mul i32 %574, %572
  %576 = add i32 %575, %146
  %577 = add nuw nsw i32 %572, 1
  %578 = mul i32 %574, %577
  %579 = add i32 %578, %146
  br i1 %571, label %580, label %586, !dx.controlflow.hints !56

; <label>:580                                     ; preds = %570
  %581 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %582 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %581, i32 %576, i32 undef)  ; BufferLoad(srv,index,wot)
  %583 = extractvalue %dx.types.ResRet.f32 %582, 0
  %584 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %581, i32 %579, i32 undef)  ; BufferLoad(srv,index,wot)
  %585 = extractvalue %dx.types.ResRet.f32 %584, 0
  br label %592

; <label>:586                                     ; preds = %570
  %587 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %588 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %587, i32 %576, i32 undef)  ; BufferLoad(srv,index,wot)
  %589 = extractvalue %dx.types.ResRet.f32 %588, 0
  %590 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %587, i32 %579, i32 undef)  ; BufferLoad(srv,index,wot)
  %591 = extractvalue %dx.types.ResRet.f32 %590, 0
  br label %592

; <label>:592                                     ; preds = %586, %580, %550
  %593 = phi float [ %565, %550 ], [ %583, %580 ], [ %589, %586 ]
  %594 = phi float [ %566, %550 ], [ %585, %580 ], [ %591, %586 ]
  %595 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 19)  ; CBufferLoadLegacy(handle,regIndex)
  %596 = extractvalue %dx.types.CBufRet.f32 %595, 0
  %597 = extractvalue %dx.types.CBufRet.f32 %595, 1
  %598 = extractvalue %dx.types.CBufRet.i32 %567, 2
  %599 = icmp eq i32 %598, -1
  br i1 %599, label %622, label %600, !dx.controlflow.hints !55

; <label>:600                                     ; preds = %592
  %601 = icmp slt i32 %598, 0
  %602 = and i32 %598, 2147483647
  %603 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %604 = extractvalue %dx.types.CBufRet.i32 %603, 1
  %605 = mul i32 %604, %602
  %606 = add i32 %605, %146
  %607 = add nuw nsw i32 %602, 1
  %608 = mul i32 %604, %607
  %609 = add i32 %608, %146
  br i1 %601, label %610, label %616, !dx.controlflow.hints !56

; <label>:610                                     ; preds = %600
  %611 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %612 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %611, i32 %606, i32 undef)  ; BufferLoad(srv,index,wot)
  %613 = extractvalue %dx.types.ResRet.f32 %612, 0
  %614 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %611, i32 %609, i32 undef)  ; BufferLoad(srv,index,wot)
  %615 = extractvalue %dx.types.ResRet.f32 %614, 0
  br label %622

; <label>:616                                     ; preds = %600
  %617 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %618 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %617, i32 %606, i32 undef)  ; BufferLoad(srv,index,wot)
  %619 = extractvalue %dx.types.ResRet.f32 %618, 0
  %620 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %617, i32 %609, i32 undef)  ; BufferLoad(srv,index,wot)
  %621 = extractvalue %dx.types.ResRet.f32 %620, 0
  br label %622

; <label>:622                                     ; preds = %616, %610, %592
  %623 = phi float [ %596, %592 ], [ %613, %610 ], [ %619, %616 ]
  %624 = phi float [ %597, %592 ], [ %615, %610 ], [ %621, %616 ]
  %625 = fsub float %108, %235
  %626 = fsub float %109, %236
  %627 = fsub float %110, %237
  %628 = fsub float %84, %238
  %629 = fsub float %85, %239
  %630 = fsub float %86, %240
  %631 = fmul float %628, 2.097152e+06
  %632 = fmul float %629, 2.097152e+06
  %633 = fmul float %630, 2.097152e+06
  %634 = fadd float %625, %631
  %635 = fadd float %626, %632
  %636 = fadd float %627, %633
  %637 = fmul float %634, %634
  %638 = fmul float %635, %635
  %639 = fadd float %637, %638
  %640 = fmul float %636, %636
  %641 = fadd float %639, %640
  %642 = call float @dx.op.unary.f32(i32 24, float %641), !dx.precise !43  ; Sqrt(value)
  %643 = call float @dx.op.binary.f32(i32 35, float %642, float 0x3EB0C6F7A0000000), !dx.precise !43  ; FMax(a,b)
  %644 = fdiv float %634, %643
  %645 = fdiv float %635, %643
  %646 = fdiv float %636, %643
  %647 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 25)  ; CBufferLoadLegacy(handle,regIndex)
  %648 = extractvalue %dx.types.CBufRet.f32 %647, 1
  %649 = extractvalue %dx.types.CBufRet.i32 %567, 0
  %650 = icmp eq i32 %649, -1
  br i1 %650, label %666, label %651, !dx.controlflow.hints !53

; <label>:651                                     ; preds = %622
  %652 = icmp slt i32 %649, 0
  %653 = and i32 %649, 2147483647
  %654 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %655 = extractvalue %dx.types.CBufRet.i32 %654, 1
  %656 = mul i32 %655, %653
  %657 = add i32 %656, %146
  br i1 %652, label %658, label %662, !dx.controlflow.hints !54

; <label>:658                                     ; preds = %651
  %659 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %660 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %659, i32 %657, i32 undef)  ; BufferLoad(srv,index,wot)
  %661 = extractvalue %dx.types.ResRet.f32 %660, 0
  br label %666

; <label>:662                                     ; preds = %651
  %663 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %664 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %663, i32 %657, i32 undef)  ; BufferLoad(srv,index,wot)
  %665 = extractvalue %dx.types.ResRet.f32 %664, 0
  br label %666

; <label>:666                                     ; preds = %662, %658, %622
  %667 = phi float [ %648, %622 ], [ %661, %658 ], [ %665, %662 ]
  %668 = fmul float %644, %667
  %669 = fmul float %645, %667
  %670 = fmul float %646, %667
  %671 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %672 = extractvalue %dx.types.CBufRet.f32 %671, 0
  %673 = extractvalue %dx.types.CBufRet.f32 %671, 1
  %674 = extractvalue %dx.types.CBufRet.f32 %671, 2
  %675 = extractvalue %dx.types.CBufRet.f32 %671, 3
  %676 = extractvalue %dx.types.CBufRet.i32 %378, 1
  %677 = icmp eq i32 %676, -1
  br i1 %677, label %714, label %678, !dx.controlflow.hints !57

; <label>:678                                     ; preds = %666
  %679 = icmp slt i32 %676, 0
  %680 = and i32 %676, 2147483647
  %681 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %682 = extractvalue %dx.types.CBufRet.i32 %681, 1
  %683 = mul i32 %682, %680
  %684 = add i32 %683, %146
  %685 = add nuw nsw i32 %680, 1
  %686 = mul i32 %682, %685
  %687 = add i32 %686, %146
  %688 = add nuw nsw i32 %680, 2
  %689 = mul i32 %682, %688
  %690 = add i32 %689, %146
  %691 = add nuw nsw i32 %680, 3
  %692 = mul i32 %682, %691
  %693 = add i32 %692, %146
  br i1 %679, label %694, label %704, !dx.controlflow.hints !58

; <label>:694                                     ; preds = %678
  %695 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %696 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %695, i32 %684, i32 undef)  ; BufferLoad(srv,index,wot)
  %697 = extractvalue %dx.types.ResRet.f32 %696, 0
  %698 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %695, i32 %687, i32 undef)  ; BufferLoad(srv,index,wot)
  %699 = extractvalue %dx.types.ResRet.f32 %698, 0
  %700 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %695, i32 %690, i32 undef)  ; BufferLoad(srv,index,wot)
  %701 = extractvalue %dx.types.ResRet.f32 %700, 0
  %702 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %695, i32 %693, i32 undef)  ; BufferLoad(srv,index,wot)
  %703 = extractvalue %dx.types.ResRet.f32 %702, 0
  br label %714

; <label>:704                                     ; preds = %678
  %705 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %706 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %705, i32 %684, i32 undef)  ; BufferLoad(srv,index,wot)
  %707 = extractvalue %dx.types.ResRet.f32 %706, 0
  %708 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %705, i32 %687, i32 undef)  ; BufferLoad(srv,index,wot)
  %709 = extractvalue %dx.types.ResRet.f32 %708, 0
  %710 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %705, i32 %690, i32 undef)  ; BufferLoad(srv,index,wot)
  %711 = extractvalue %dx.types.ResRet.f32 %710, 0
  %712 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %705, i32 %693, i32 undef)  ; BufferLoad(srv,index,wot)
  %713 = extractvalue %dx.types.ResRet.f32 %712, 0
  br label %714

; <label>:714                                     ; preds = %704, %694, %666
  %715 = phi float [ %672, %666 ], [ %697, %694 ], [ %707, %704 ]
  %716 = phi float [ %673, %666 ], [ %699, %694 ], [ %709, %704 ]
  %717 = phi float [ %674, %666 ], [ %701, %694 ], [ %711, %704 ]
  %718 = phi float [ %675, %666 ], [ %703, %694 ], [ %713, %704 ]
  %719 = fmul float %373, %373
  %720 = fmul float %374, %374
  %721 = fadd float %719, %720
  %722 = fmul float %375, %375
  %723 = fadd float %721, %722
  %724 = call float @dx.op.unary.f32(i32 24, float %723), !dx.precise !43  ; Sqrt(value)
  %725 = fcmp ogt float %724, 0x3EB0C6F7A0000000
  %726 = fdiv float %373, %724
  %727 = fdiv float %374, %724
  %728 = fdiv float %375, %724
  %729 = select i1 %725, float %726, float 0.000000e+00
  %730 = select i1 %725, float %727, float 0.000000e+00
  %731 = select i1 %725, float %728, float 1.000000e+00
  %732 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %733 = extractvalue %dx.types.CBufRet.f32 %732, 3
  %734 = fsub float %104, %96
  %735 = fsub float %105, %97
  %736 = fsub float %106, %98
  %737 = fmul float %734, %733
  %738 = fmul float %735, %733
  %739 = fmul float %736, %733
  %740 = fadd float %96, %737
  %741 = fadd float %97, %738
  %742 = fadd float %98, %739
  %743 = fsub float %100, %92
  %744 = fsub float %101, %93
  %745 = fsub float %102, %94
  %746 = fmul float %743, %733
  %747 = fmul float %744, %733
  %748 = fmul float %745, %733
  %749 = fadd float %92, %746
  %750 = fadd float %93, %747
  %751 = fadd float %94, %748
  %752 = fsub float -0.000000e+00, %749
  %753 = fsub float -0.000000e+00, %750
  %754 = fsub float -0.000000e+00, %751
  %755 = fsub float -0.000000e+00, %88
  %756 = fsub float -0.000000e+00, %89
  %757 = fsub float -0.000000e+00, %90
  %758 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %759 = extractvalue %dx.types.CBufRet.i32 %758, 3
  %760 = icmp eq i32 %759, 2
  %761 = select i1 %760, float %478, float %644
  %762 = select i1 %760, float %479, float %645
  %763 = select i1 %760, float %480, float %646
  %764 = extractvalue %dx.types.CBufRet.i32 %758, 2
  %765 = icmp eq i32 %764, 2
  %766 = uitofp i1 %765 to float
  %767 = fsub float %561, %729
  %768 = fsub float %562, %730
  %769 = fsub float %563, %731
  %770 = fmul float %767, %766
  %771 = fmul float %768, %766
  %772 = fmul float %769, %766
  %773 = fadd float %729, %770
  %774 = fadd float %730, %771
  %775 = fadd float %731, %772
  %776 = fmul float %762, %775
  %777 = fmul float %763, %774
  %778 = fsub float %776, %777
  %779 = fmul float %763, %773
  %780 = fmul float %761, %775
  %781 = fsub float %779, %780
  %782 = fmul float %761, %774
  %783 = fmul float %762, %773
  %784 = fsub float %782, %783
  %785 = fmul float %778, %778
  %786 = fmul float %781, %781
  %787 = fadd float %785, %786
  %788 = fmul float %784, %784
  %789 = fadd float %788, %787
  %790 = call float @dx.op.unary.f32(i32 24, float %789), !dx.precise !43  ; Sqrt(value)
  %791 = call float @dx.op.binary.f32(i32 35, float %790, float 0x3EB0C6F7A0000000), !dx.precise !43  ; FMax(a,b)
  %792 = fdiv float %778, %791
  %793 = fdiv float %781, %791
  %794 = fdiv float %784, %791
  %795 = uitofp i1 %760 to float
  %796 = fmul float %762, %794
  %797 = fmul float %763, %793
  %798 = fsub float %796, %797
  %799 = fmul float %763, %792
  %800 = fmul float %761, %794
  %801 = fsub float %799, %800
  %802 = fmul float %761, %793
  %803 = fmul float %762, %792
  %804 = fsub float %802, %803
  %805 = fadd float %773, %798
  %806 = fadd float %774, %801
  %807 = fadd float %775, %804
  %808 = fmul float %805, %795
  %809 = fmul float %806, %795
  %810 = fmul float %807, %795
  %811 = fsub float %808, %773
  %812 = fsub float %809, %774
  %813 = fsub float %810, %775
  %814 = fmul float %751, %756
  %815 = fmul float %750, %757
  %816 = fsub float %814, %815
  %817 = fmul float %749, %757
  %818 = fmul float %751, %755
  %819 = fsub float %817, %818
  %820 = fmul float %750, %755
  %821 = fmul float %749, %756
  %822 = fsub float %820, %821
  %823 = fmul float %816, %816
  %824 = fmul float %819, %819
  %825 = fadd float %823, %824
  %826 = fmul float %822, %822
  %827 = fadd float %826, %825
  %828 = call float @dx.op.unary.f32(i32 24, float %827), !dx.precise !43  ; Sqrt(value)
  %829 = call float @dx.op.binary.f32(i32 35, float %828, float 0x3EB0C6F7A0000000), !dx.precise !43  ; FMax(a,b)
  %830 = fdiv float %816, %829
  %831 = fdiv float %819, %829
  %832 = fdiv float %822, %829
  %833 = fmul float %832, %756
  %834 = fmul float %831, %757
  %835 = fsub float %833, %834
  %836 = fmul float %830, %757
  %837 = fmul float %832, %755
  %838 = fsub float %836, %837
  %839 = fmul float %831, %755
  %840 = fmul float %830, %756
  %841 = fsub float %839, %840
  %842 = fmul float %751, %762
  %843 = fmul float %750, %763
  %844 = fsub float %842, %843
  %845 = fmul float %749, %763
  %846 = fmul float %751, %761
  %847 = fsub float %845, %846
  %848 = fmul float %750, %761
  %849 = fmul float %749, %762
  %850 = fsub float %848, %849
  %851 = fmul float %844, %844
  %852 = fmul float %847, %847
  %853 = fadd float %851, %852
  %854 = fmul float %850, %850
  %855 = fadd float %854, %853
  %856 = call float @dx.op.unary.f32(i32 24, float %855), !dx.precise !43  ; Sqrt(value)
  %857 = call float @dx.op.binary.f32(i32 35, float %856, float 0x3EB0C6F7A0000000), !dx.precise !43  ; FMax(a,b)
  %858 = fdiv float %844, %857
  %859 = fdiv float %847, %857
  %860 = fdiv float %850, %857
  %861 = fmul float %762, %860
  %862 = fmul float %763, %859
  %863 = fsub float %861, %862
  %864 = fmul float %763, %858
  %865 = fmul float %761, %860
  %866 = fsub float %864, %865
  %867 = fmul float %761, %859
  %868 = fmul float %762, %858
  %869 = fsub float %867, %868
  %870 = fmul float %646, 0.000000e+00
  %871 = fsub float %645, %870
  %872 = fsub float %870, %644
  %873 = fmul float %644, 0.000000e+00
  %874 = fmul float %645, 0.000000e+00
  %875 = fsub float %873, %874
  %876 = fmul float %871, %871
  %877 = fmul float %872, %872
  %878 = fadd float %876, %877
  %879 = fmul float %875, %875
  %880 = fadd float %879, %878
  %881 = call float @dx.op.unary.f32(i32 24, float %880), !dx.precise !43  ; Sqrt(value)
  %882 = call float @dx.op.binary.f32(i32 35, float %881, float 0x3EB0C6F7A0000000), !dx.precise !43  ; FMax(a,b)
  %883 = fdiv float %871, %882
  %884 = fdiv float %872, %882
  %885 = fdiv float %875, %882
  %886 = fmul float %645, %885
  %887 = fmul float %646, %884
  %888 = fsub float %886, %887
  %889 = fmul float %646, %883
  %890 = fmul float %644, %885
  %891 = fsub float %889, %890
  %892 = fmul float %644, %884
  %893 = fmul float %645, %883
  %894 = fsub float %892, %893
  %895 = icmp eq i32 %764, 0
  br i1 %895, label %896, label %943, !dx.controlflow.hints !59

; <label>:896                                     ; preds = %714
  %897 = icmp eq i32 %759, 4
  br i1 %897, label %898, label %932, !dx.controlflow.hints !60

; <label>:898                                     ; preds = %896
  %899 = call float @dx.op.dot3.f32(i32 55, float %634, float %635, float %636, float %634, float %635, float %636), !dx.precise !43  ; Dot3(ax,ay,az,bx,by,bz)
  %900 = extractvalue %dx.types.CBufRet.f32 %732, 1
  %901 = fmul float %899, %900
  %902 = extractvalue %dx.types.CBufRet.f32 %732, 2
  %903 = fsub float %901, %902
  %904 = call float @dx.op.unary.f32(i32 7, float %903), !dx.precise !43  ; Saturate(value)
  %905 = fmul float %645, %875
  %906 = fmul float %646, %872
  %907 = fsub float %905, %906
  %908 = fmul float %646, %871
  %909 = fmul float %644, %875
  %910 = fsub float %908, %909
  %911 = fmul float %644, %872
  %912 = fmul float %645, %871
  %913 = fsub float %911, %912
  %914 = fsub float %740, %871
  %915 = fsub float %741, %872
  %916 = fsub float %742, %875
  %917 = fmul float %914, %904
  %918 = fmul float %915, %904
  %919 = fmul float %916, %904
  %920 = fadd float %871, %917
  %921 = fadd float %872, %918
  %922 = fadd float %875, %919
  %923 = fsub float %752, %907
  %924 = fsub float %753, %910
  %925 = fsub float %754, %913
  %926 = fmul float %923, %904
  %927 = fmul float %924, %904
  %928 = fmul float %925, %904
  %929 = fadd float %907, %926
  %930 = fadd float %910, %927
  %931 = fadd float %913, %928
  br label %943

; <label>:932                                     ; preds = %896
  %933 = icmp eq i32 %759, 0
  br i1 %933, label %943, label %934

; <label>:934                                     ; preds = %932
  %935 = icmp eq i32 %759, 1
  br i1 %935, label %943, label %936

; <label>:936                                     ; preds = %934
  %937 = select i1 %760, float %858, float %883
  %938 = select i1 %760, float %859, float %884
  %939 = select i1 %760, float %860, float %885
  %940 = select i1 %760, float %863, float %888
  %941 = select i1 %760, float %866, float %891
  %942 = select i1 %760, float %869, float %894
  br label %943

; <label>:943                                     ; preds = %936, %934, %932, %898, %714
  %944 = phi float [ %920, %898 ], [ %830, %934 ], [ %792, %714 ], [ %937, %936 ], [ %740, %932 ]
  %945 = phi float [ %921, %898 ], [ %831, %934 ], [ %793, %714 ], [ %938, %936 ], [ %741, %932 ]
  %946 = phi float [ %922, %898 ], [ %832, %934 ], [ %794, %714 ], [ %939, %936 ], [ %742, %932 ]
  %947 = phi float [ %929, %898 ], [ %835, %934 ], [ %811, %714 ], [ %940, %936 ], [ %752, %932 ]
  %948 = phi float [ %930, %898 ], [ %838, %934 ], [ %812, %714 ], [ %941, %936 ], [ %753, %932 ]
  %949 = phi float [ %931, %898 ], [ %841, %934 ], [ %813, %714 ], [ %942, %936 ], [ %754, %932 ]
  %950 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %951 = extractvalue %dx.types.CBufRet.f32 %950, 0
  %952 = fmul float %264, %951
  %953 = extractvalue %dx.types.CBufRet.f32 %950, 1
  %954 = fadd float %952, %953
  %955 = call float @dx.op.unary.f32(i32 13, float %954), !dx.precise !43  ; Sin(value)
  %956 = call float @dx.op.unary.f32(i32 12, float %954), !dx.precise !43  ; Cos(value)
  %957 = fmul float %944, %955
  %958 = fmul float %945, %955
  %959 = fmul float %946, %955
  %960 = fmul float %947, %955
  %961 = fmul float %948, %955
  %962 = fmul float %949, %955
  %963 = fmul float %944, %956
  %964 = fmul float %945, %956
  %965 = fmul float %946, %956
  %966 = fmul float %947, %956
  %967 = fmul float %948, %956
  %968 = fmul float %949, %956
  %969 = fadd float %960, %963
  %970 = fadd float %961, %964
  %971 = fadd float %962, %965
  %972 = fsub float %966, %957
  %973 = fsub float %967, %958
  %974 = fsub float %968, %959
  %975 = fcmp ogt float %293, 0.000000e+00
  %976 = fcmp ogt float %294, 0.000000e+00
  %977 = fcmp olt float %293, 0.000000e+00
  %978 = fcmp olt float %294, 0.000000e+00
  %979 = zext i1 %975 to i32
  %980 = zext i1 %976 to i32
  %981 = zext i1 %977 to i32
  %982 = zext i1 %978 to i32
  %983 = sub nsw i32 %979, %981
  %984 = sub nsw i32 %980, %982
  %985 = extractvalue %dx.types.CBufRet.i32 %758, 0
  %986 = icmp eq i32 %985, 0
  br i1 %986, label %1023, label %987, !dx.controlflow.hints !61

; <label>:987                                     ; preds = %943
  %988 = sitofp i32 %984 to float
  %989 = sitofp i32 %983 to float
  %990 = icmp eq i32 %985, 8
  %991 = select i1 %990, i32 7, i32 3
  %992 = and i32 %991, %22
  %993 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %994 = extractvalue %dx.types.CBufRet.f32 %993, 0
  %995 = extractvalue %dx.types.CBufRet.f32 %993, 1
  %996 = fmul float %994, %995
  %997 = fdiv float %397, %996
  %998 = fsub float -0.000000e+00, %997
  %999 = fcmp oge float %997, %998
  %1000 = call float @dx.op.unary.f32(i32 6, float %997), !dx.precise !43  ; FAbs(value)
  %1001 = call float @dx.op.unary.f32(i32 22, float %1000), !dx.precise !43  ; Frc(value)
  %1002 = fsub float -0.000000e+00, %1001
  %1003 = select i1 %999, float %1001, float %1002
  %1004 = fmul float %996, %1003
  %1005 = fptoui float %1004 to i32
  %1006 = fmul float %989, %988
  %1007 = fcmp olt float %1006, 0.000000e+00
  %1008 = xor i32 %992, -1
  %1009 = add i32 %985, %1008
  %1010 = select i1 %1007, i32 %1009, i32 %992
  %1011 = mul i32 %985, %1005
  %1012 = add i32 %1011, %1010
  %1013 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 10, i32 521 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<2xF32>
  %1014 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %1013, i32 %1012, i32 undef)  ; BufferLoad(srv,index,wot)
  %1015 = extractvalue %dx.types.ResRet.f32 %1014, 0
  %1016 = extractvalue %dx.types.ResRet.f32 %1014, 1
  %1017 = icmp slt i32 %983, 0
  %1018 = fsub float 1.000000e+00, %1015
  %1019 = select i1 %1017, float %1018, float %1015
  %1020 = icmp slt i32 %984, 0
  %1021 = fsub float 1.000000e+00, %1016
  %1022 = select i1 %1020, float %1021, float %1016
  br label %1030

; <label>:1023                                    ; preds = %943
  %1024 = icmp slt i32 %983, 0
  %1025 = fsub fast float 1.000000e+00, %23
  %1026 = select i1 %1024, float %1025, float %23
  %1027 = icmp slt i32 %984, 0
  %1028 = fsub fast float 1.000000e+00, %24
  %1029 = select i1 %1027, float %1028, float %24
  br label %1030

; <label>:1030                                    ; preds = %1023, %987
  %1031 = phi float [ %1015, %987 ], [ %1026, %1023 ]
  %1032 = phi float [ %1016, %987 ], [ %1029, %1023 ]
  %1033 = phi float [ %1019, %987 ], [ %23, %1023 ]
  %1034 = phi float [ %1022, %987 ], [ %24, %1023 ]
  %1035 = fadd fast float %1031, -5.000000e-01
  %1036 = fadd fast float %1032, -5.000000e-01
  %1037 = fmul fast float %1035, %623
  %1038 = fmul fast float %1036, %624
  %1039 = fadd fast float %1037, 5.000000e-01
  %1040 = fadd fast float %1038, 5.000000e-01
  %1041 = call float @dx.op.unary.f32(i32 6, float %293), !dx.precise !43  ; FAbs(value)
  %1042 = call float @dx.op.unary.f32(i32 6, float %294), !dx.precise !43  ; FAbs(value)
  %1043 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 35)  ; CBufferLoadLegacy(handle,regIndex)
  %1044 = extractvalue %dx.types.CBufRet.i32 %1043, 0
  %1045 = icmp eq i32 %1044, 0
  br i1 %1045, label %1095, label %1046

; <label>:1046                                    ; preds = %1030
  %1047 = fsub float %235, %108
  %1048 = fsub float %236, %109
  %1049 = fsub float %237, %110
  %1050 = fsub float %238, %84
  %1051 = fsub float %239, %85
  %1052 = fsub float %240, %86
  %1053 = fmul float %1050, 2.097152e+06
  %1054 = fmul float %1051, 2.097152e+06
  %1055 = fmul float %1052, 2.097152e+06
  %1056 = fadd float %1047, %1053
  %1057 = fadd float %1048, %1054
  %1058 = fadd float %1049, %1055
  %1059 = call float @dx.op.dot3.f32(i32 55, float %1056, float %1057, float %1058, float %88, float %89, float %90), !dx.precise !43  ; Dot3(ax,ay,az,bx,by,bz)
  %1060 = call float @dx.op.binary.f32(i32 35, float %1041, float %1042), !dx.precise !43  ; FMax(a,b)
  %1061 = fmul float %1060, 5.000000e-01
  %1062 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 129)  ; CBufferLoadLegacy(handle,regIndex)
  %1063 = extractvalue %dx.types.CBufRet.f32 %1062, 2
  %1064 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 40)  ; CBufferLoadLegacy(handle,regIndex)
  %1065 = extractvalue %dx.types.CBufRet.f32 %1064, 0
  %1066 = fmul float %1063, %1065
  %1067 = fmul float %1059, %1066
  %1068 = fmul float %1067, 2.000000e+00
  %1069 = call float @dx.op.binary.f32(i32 35, float %1068, float %1061), !dx.precise !43  ; FMax(a,b)
  %1070 = fdiv float %1069, %1061
  %1071 = fdiv fast float %1060, %1069
  %1072 = call float @dx.op.unary.f32(i32 7, float %1071)  ; Saturate(value)
  %1073 = fmul fast float %1072, %1072
  %1074 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 36)  ; CBufferLoadLegacy(handle,regIndex)
  %1075 = extractvalue %dx.types.CBufRet.f32 %1074, 0
  %1076 = extractvalue %dx.types.CBufRet.f32 %1074, 1
  %1077 = extractvalue %dx.types.CBufRet.f32 %1074, 2
  %1078 = extractvalue %dx.types.CBufRet.f32 %1074, 3
  %1079 = fmul fast float %1075, %1073
  %1080 = fmul fast float %1076, %1073
  %1081 = fmul fast float %1077, %1073
  %1082 = fmul fast float %1078, %1073
  %1083 = fsub fast float 1.000000e+00, %1075
  %1084 = fsub fast float 1.000000e+00, %1076
  %1085 = fsub fast float 1.000000e+00, %1077
  %1086 = fsub fast float 1.000000e+00, %1078
  %1087 = fadd fast float %1083, %1079
  %1088 = fmul fast float %1087, %715
  %1089 = fadd fast float %1084, %1080
  %1090 = fmul fast float %1089, %716
  %1091 = fadd fast float %1085, %1081
  %1092 = fmul fast float %1091, %717
  %1093 = fadd fast float %1086, %1082
  %1094 = fmul fast float %1093, %718
  br label %1095

; <label>:1095                                    ; preds = %1046, %1030
  %1096 = phi float [ %1088, %1046 ], [ %715, %1030 ]
  %1097 = phi float [ %1090, %1046 ], [ %716, %1030 ]
  %1098 = phi float [ %1092, %1046 ], [ %717, %1030 ]
  %1099 = phi float [ %1094, %1046 ], [ %718, %1030 ]
  %1100 = phi float [ %1070, %1046 ], [ 1.000000e+00, %1030 ]
  %1101 = fmul float %1041, %1100
  %1102 = fmul float %1042, %1100
  %1103 = fsub float %1033, %593
  %1104 = fsub float %1034, %594
  %1105 = fmul float %1103, %1101
  %1106 = fmul float %1104, %1102
  %1107 = fmul float %969, %1105
  %1108 = call float @dx.op.tertiary.f32(i32 46, float %1106, float %972, float %1107), !dx.precise !43  ; FMad(a,b,c)
  %1109 = fmul float %970, %1105
  %1110 = call float @dx.op.tertiary.f32(i32 46, float %1106, float %973, float %1109), !dx.precise !43  ; FMad(a,b,c)
  %1111 = fmul float %971, %1105
  %1112 = call float @dx.op.tertiary.f32(i32 46, float %1106, float %974, float %1111), !dx.precise !43  ; FMad(a,b,c)
  %1113 = fadd float %668, %1108
  %1114 = fadd float %669, %1110
  %1115 = fadd float %670, %1112
  %1116 = fadd float %235, %1113
  %1117 = fadd float %236, %1114
  %1118 = fadd float %237, %1115
  %1119 = call float @dx.op.unary.f32(i32 22, float %397)  ; Frc(value)
  %1120 = fsub fast float %397, %1119
  %1121 = fadd fast float %1120, 5.000000e-01
  %1122 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %1123 = extractvalue %dx.types.CBufRet.f32 %1122, 0
  %1124 = fdiv fast float %1121, %1123
  %1125 = fsub fast float -0.000000e+00, %1124
  %1126 = fcmp fast oge float %1124, %1125
  %1127 = call float @dx.op.unary.f32(i32 6, float %1124)  ; FAbs(value)
  %1128 = call float @dx.op.unary.f32(i32 22, float %1127)  ; Frc(value)
  %1129 = fsub fast float -0.000000e+00, %1128
  %1130 = select i1 %1126, float %1128, float %1129
  %1131 = fmul fast float %1130, %1123
  %1132 = call float @dx.op.unary.f32(i32 27, float %1131)  ; Round_ni(value)
  %1133 = extractvalue %dx.types.CBufRet.f32 %1122, 2
  %1134 = fmul fast float %1133, %1121
  %1135 = call float @dx.op.unary.f32(i32 27, float %1134)  ; Round_ni(value)
  %1136 = fadd fast float %1039, %1132
  %1137 = fadd fast float %1040, %1135
  %1138 = extractvalue %dx.types.CBufRet.f32 %1122, 3
  %1139 = fmul fast float %1133, %1136
  %1140 = fmul fast float %1138, %1137
  %1141 = extractvalue %dx.types.CBufRet.i32 %485, 3
  %1142 = icmp eq i32 %1141, 1
  %1143 = select i1 %1142, float %1119, float 0.000000e+00
  %1144 = fcmp fast ogt float %623, 0.000000e+00
  %1145 = fcmp fast ogt float %624, 0.000000e+00
  %1146 = fcmp fast olt float %623, 0.000000e+00
  %1147 = fcmp fast olt float %624, 0.000000e+00
  %1148 = zext i1 %1144 to i32
  %1149 = zext i1 %1145 to i32
  %1150 = zext i1 %1146 to i32
  %1151 = zext i1 %1147 to i32
  %1152 = sub nsw i32 %1148, %1150
  %1153 = sub nsw i32 %1149, %1151
  %1154 = sitofp i32 %1152 to float
  %1155 = sitofp i32 %1153 to float
  %1156 = fmul fast float %969, %1154
  %1157 = fmul fast float %970, %1154
  %1158 = fmul fast float %971, %1154
  %1159 = fmul fast float %972, %1155
  %1160 = fmul fast float %973, %1155
  %1161 = fmul fast float %974, %1155
  %1162 = extractvalue %dx.types.CBufRet.f32 %950, 2
  %1163 = fcmp fast olt float %1162, 5.000000e-01
  br i1 %1163, label %1164, label %1184

; <label>:1164                                    ; preds = %1095
  %1165 = fmul fast float %1157, %1161
  %1166 = fmul fast float %1158, %1160
  %1167 = fsub fast float %1165, %1166
  %1168 = fmul fast float %1158, %1159
  %1169 = fmul fast float %1156, %1161
  %1170 = fsub fast float %1168, %1169
  %1171 = fmul fast float %1156, %1160
  %1172 = fmul fast float %1157, %1159
  %1173 = fsub fast float %1171, %1172
  %1174 = call float @dx.op.dot3.f32(i32 55, float %1167, float %1170, float %1173, float %1167, float %1170, float %1173)  ; Dot3(ax,ay,az,bx,by,bz)
  %1175 = call float @dx.op.unary.f32(i32 25, float %1174)  ; Rsqrt(value)
  %1176 = fmul fast float %1175, %1167
  %1177 = fmul fast float %1175, %1170
  %1178 = fmul fast float %1175, %1173
  %1179 = fcmp fast une float %1154, %1155
  br i1 %1179, label %1180, label %1228

; <label>:1180                                    ; preds = %1164
  %1181 = fsub fast float -0.000000e+00, %1176
  %1182 = fsub fast float -0.000000e+00, %1177
  %1183 = fsub fast float -0.000000e+00, %1178
  br label %1228

; <label>:1184                                    ; preds = %1095
  %1185 = fcmp fast olt float %1162, 1.500000e+00
  %1186 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %1187 = extractvalue %dx.types.CBufRet.f32 %1186, 0
  %1188 = extractvalue %dx.types.CBufRet.f32 %1186, 1
  %1189 = extractvalue %dx.types.CBufRet.f32 %1186, 2
  %1190 = fmul fast float %238, 2.097152e+06
  %1191 = fmul fast float %239, 2.097152e+06
  %1192 = fmul fast float %240, 2.097152e+06
  br i1 %1185, label %1193, label %1205

; <label>:1193                                    ; preds = %1184
  %1194 = fsub fast float %235, %1187
  %1195 = fsub fast float %236, %1188
  %1196 = fsub fast float %237, %1189
  %1197 = fadd fast float %1194, %1190
  %1198 = fadd fast float %1195, %1191
  %1199 = fadd fast float %1196, %1192
  %1200 = call float @dx.op.dot3.f32(i32 55, float %1197, float %1198, float %1199, float %1197, float %1198, float %1199)  ; Dot3(ax,ay,az,bx,by,bz)
  %1201 = call float @dx.op.unary.f32(i32 25, float %1200)  ; Rsqrt(value)
  %1202 = fmul fast float %1197, %1201
  %1203 = fmul fast float %1198, %1201
  %1204 = fmul fast float %1199, %1201
  br label %1228

; <label>:1205                                    ; preds = %1184
  %1206 = fadd fast float %1190, %235
  %1207 = fsub fast float %1206, %1187
  %1208 = fadd fast float %1191, %236
  %1209 = fsub fast float %1208, %1188
  %1210 = fadd fast float %1192, %237
  %1211 = fsub fast float %1210, %1189
  %1212 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %16, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %1213 = extractvalue %dx.types.CBufRet.f32 %1212, 0
  %1214 = extractvalue %dx.types.CBufRet.f32 %1212, 1
  %1215 = extractvalue %dx.types.CBufRet.f32 %1212, 2
  %1216 = call float @dx.op.dot3.f32(i32 55, float %1213, float %1214, float %1215, float %1207, float %1209, float %1211)  ; Dot3(ax,ay,az,bx,by,bz)
  %1217 = fmul fast float %1213, %1216
  %1218 = fmul fast float %1214, %1216
  %1219 = fmul fast float %1215, %1216
  %1220 = fsub fast float %1207, %1217
  %1221 = fsub fast float %1209, %1218
  %1222 = fsub fast float %1211, %1219
  %1223 = call float @dx.op.dot3.f32(i32 55, float %1220, float %1221, float %1222, float %1220, float %1221, float %1222)  ; Dot3(ax,ay,az,bx,by,bz)
  %1224 = call float @dx.op.unary.f32(i32 25, float %1223)  ; Rsqrt(value)
  %1225 = fmul fast float %1220, %1224
  %1226 = fmul fast float %1221, %1224
  %1227 = fmul fast float %1222, %1224
  br label %1228

; <label>:1228                                    ; preds = %1205, %1193, %1180, %1164
  %1229 = phi float [ %1181, %1180 ], [ %1176, %1164 ], [ %1202, %1193 ], [ %1225, %1205 ]
  %1230 = phi float [ %1182, %1180 ], [ %1177, %1164 ], [ %1203, %1193 ], [ %1226, %1205 ]
  %1231 = phi float [ %1183, %1180 ], [ %1178, %1164 ], [ %1204, %1193 ], [ %1227, %1205 ]
  %1232 = fadd float %116, %1116
  %1233 = fadd float %117, %1117
  %1234 = fadd float %118, %1118
  %1235 = fsub float %238, %84
  %1236 = fsub float %239, %85
  %1237 = fsub float %240, %86
  %1238 = fmul float %1235, 2.097152e+06
  %1239 = fmul float %1236, 2.097152e+06
  %1240 = fmul float %1237, 2.097152e+06
  %1241 = fadd float %1238, %1232
  %1242 = fadd float %1239, %1233
  %1243 = fadd float %1240, %1234
  %1244 = fadd float %1241, 0.000000e+00
  %1245 = fadd float %1242, 0.000000e+00
  %1246 = fadd float %1243, 0.000000e+00
  %1247 = fmul float %64, %1244
  %1248 = call float @dx.op.tertiary.f32(i32 46, float %1245, float %69, float %1247), !dx.precise !43  ; FMad(a,b,c)
  %1249 = call float @dx.op.tertiary.f32(i32 46, float %1246, float %74, float %1248), !dx.precise !43  ; FMad(a,b,c)
  %1250 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %79, float %1249), !dx.precise !43  ; FMad(a,b,c)
  %1251 = fmul float %65, %1244
  %1252 = call float @dx.op.tertiary.f32(i32 46, float %1245, float %70, float %1251), !dx.precise !43  ; FMad(a,b,c)
  %1253 = call float @dx.op.tertiary.f32(i32 46, float %1246, float %75, float %1252), !dx.precise !43  ; FMad(a,b,c)
  %1254 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %80, float %1253), !dx.precise !43  ; FMad(a,b,c)
  %1255 = fmul float %66, %1244
  %1256 = call float @dx.op.tertiary.f32(i32 46, float %1245, float %71, float %1255), !dx.precise !43  ; FMad(a,b,c)
  %1257 = call float @dx.op.tertiary.f32(i32 46, float %1246, float %76, float %1256), !dx.precise !43  ; FMad(a,b,c)
  %1258 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %81, float %1257), !dx.precise !43  ; FMad(a,b,c)
  %1259 = fmul float %67, %1244
  %1260 = call float @dx.op.tertiary.f32(i32 46, float %1245, float %72, float %1259), !dx.precise !43  ; FMad(a,b,c)
  %1261 = call float @dx.op.tertiary.f32(i32 46, float %1246, float %77, float %1260), !dx.precise !43  ; FMad(a,b,c)
  %1262 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %82, float %1261), !dx.precise !43  ; FMad(a,b,c)
  %1263 = fmul fast float %1231, %1160
  %1264 = fmul fast float %1230, %1161
  %1265 = fsub fast float %1263, %1264
  %1266 = fmul fast float %1231, %1159
  %1267 = fmul fast float %1229, %1161
  %1268 = fsub fast float %1266, %1267
  %1269 = fmul fast float %1230, %1159
  %1270 = fmul fast float %1229, %1160
  %1271 = fsub fast float %1269, %1270
  %1272 = fmul fast float %1265, %1156
  %1273 = fmul fast float %1268, %1157
  %1274 = fmul fast float %1271, %1158
  %1275 = fsub fast float %1272, %1273
  %1276 = fadd fast float %1275, %1274
  %1277 = fcmp fast ogt float %1276, 0.000000e+00
  %1278 = fcmp fast olt float %1276, 0.000000e+00
  %1279 = zext i1 %1277 to i32
  %1280 = zext i1 %1278 to i32
  %1281 = sub nsw i32 %1279, %1280
  %1282 = sitofp i32 %1281 to float
  %1283 = fsub fast float %1241, %112
  %1284 = fsub fast float %1242, %113
  %1285 = fsub fast float %1243, %114
  %1286 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 66)  ; CBufferLoadLegacy(handle,regIndex)
  %1287 = extractvalue %dx.types.CBufRet.f32 %1286, 0
  %1288 = extractvalue %dx.types.CBufRet.f32 %1286, 1
  %1289 = extractvalue %dx.types.CBufRet.f32 %1286, 2
  %1290 = call float @dx.op.dot3.f32(i32 55, float %1283, float %1284, float %1285, float %1283, float %1284, float %1285)  ; Dot3(ax,ay,az,bx,by,bz)
  %1291 = call float @dx.op.unary.f32(i32 25, float %1290)  ; Rsqrt(value)
  %1292 = fmul fast float %1291, %1283
  %1293 = fmul fast float %1291, %1284
  %1294 = fmul fast float %1291, %1285
  %1295 = call float @dx.op.dot3.f32(i32 55, float %1292, float %1293, float %1294, float %1287, float %1288, float %1289)  ; Dot3(ax,ay,az,bx,by,bz)
  %1296 = fcmp fast ogt float %1295, 0x3F50624DE0000000
  %1297 = fdiv fast float 1.000000e+00, %1295
  %1298 = select i1 %1296, float %1297, float 0.000000e+00
  %1299 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 232)  ; CBufferLoadLegacy(handle,regIndex)
  %1300 = extractvalue %dx.types.CBufRet.f32 %1299, 0
  %1301 = fmul fast float %1300, %1298
  %1302 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %1303 = extractvalue %dx.types.CBufRet.f32 %1302, 2
  %1304 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 73)  ; CBufferLoadLegacy(handle,regIndex)
  %1305 = extractvalue %dx.types.CBufRet.f32 %1304, 2
  %1306 = fmul fast float %1303, 2.097152e+06
  %1307 = fadd fast float %1306, %1305
  %1308 = call float @dx.op.binary.f32(i32 36, float %1307, float %28)  ; FMin(a,b)
  %1309 = fsub fast float %1285, %1308
  %1310 = fadd fast float %1309, %1305
  %1311 = fadd fast float %1310, %1306
  %1312 = call float @dx.op.dot3.f32(i32 55, float %1283, float %1284, float %1311, float %1283, float %1284, float %1311)  ; Dot3(ax,ay,az,bx,by,bz)
  %1313 = call float @dx.op.binary.f32(i32 35, float %1312, float 0x3E45798EE0000000)  ; FMax(a,b)
  %1314 = call float @dx.op.unary.f32(i32 25, float %1313)  ; Rsqrt(value)
  %1315 = fmul fast float %1314, %1312
  %1316 = fmul fast float %1314, %1283
  %1317 = fmul fast float %1314, %1284
  %1318 = fmul fast float %1311, %1314
  %1319 = call float @dx.op.binary.f32(i32 35, float %1301, float %29)  ; FMax(a,b)
  %1320 = fcmp fast ogt float %1319, 0.000000e+00
  br i1 %1320, label %1321, label %1340

; <label>:1321                                    ; preds = %1228
  %1322 = fmul fast float %1319, %1314
  %1323 = fmul fast float %1322, %1311
  %1324 = fadd fast float %1323, %1308
  %1325 = fsub fast float %1311, %1323
  %1326 = fsub fast float 1.000000e+00, %1322
  %1327 = fmul fast float %1326, %1315
  %1328 = fsub fast float %1324, %42
  %1329 = fmul fast float %1328, %27
  %1330 = call float @dx.op.binary.f32(i32 35, float -1.270000e+02, float %1329)  ; FMax(a,b)
  %1331 = fsub fast float -0.000000e+00, %1330
  %1332 = call float @dx.op.unary.f32(i32 21, float %1331)  ; Exp(value)
  %1333 = fmul fast float %1332, %41
  %1334 = fsub fast float %1324, %34
  %1335 = fmul fast float %1334, %32
  %1336 = call float @dx.op.binary.f32(i32 35, float -1.270000e+02, float %1335)  ; FMax(a,b)
  %1337 = fsub fast float -0.000000e+00, %1336
  %1338 = call float @dx.op.unary.f32(i32 21, float %1337)  ; Exp(value)
  %1339 = fmul fast float %1338, %33
  br label %1340

; <label>:1340                                    ; preds = %1321, %1228
  %1341 = phi float [ %1333, %1321 ], [ %26, %1228 ]
  %1342 = phi float [ %1339, %1321 ], [ %31, %1228 ]
  %1343 = phi float [ %1327, %1321 ], [ %1315, %1228 ]
  %1344 = phi float [ %1325, %1321 ], [ %1311, %1228 ]
  %1345 = fmul fast float %1344, %27
  %1346 = call float @dx.op.binary.f32(i32 35, float -1.270000e+02, float %1345)  ; FMax(a,b)
  %1347 = fsub fast float -0.000000e+00, %1346
  %1348 = call float @dx.op.unary.f32(i32 21, float %1347)  ; Exp(value)
  %1349 = fsub fast float 1.000000e+00, %1348
  %1350 = fdiv fast float %1349, %1346
  %1351 = fmul fast float %1346, 0x3FCEBFBE00000000
  %1352 = fsub fast float 0x3FE62E4300000000, %1351
  %1353 = call float @dx.op.unary.f32(i32 6, float %1346)  ; FAbs(value)
  %1354 = fcmp fast ogt float %1353, 0x3F847AE140000000
  %1355 = select i1 %1354, float %1350, float %1352
  %1356 = fmul fast float %1355, %1341
  %1357 = fmul fast float %1344, %32
  %1358 = call float @dx.op.binary.f32(i32 35, float -1.270000e+02, float %1357)  ; FMax(a,b)
  %1359 = fsub fast float -0.000000e+00, %1358
  %1360 = call float @dx.op.unary.f32(i32 21, float %1359)  ; Exp(value)
  %1361 = fsub fast float 1.000000e+00, %1360
  %1362 = fdiv fast float %1361, %1358
  %1363 = fmul fast float %1358, 0x3FCEBFBE00000000
  %1364 = fsub fast float 0x3FE62E4300000000, %1363
  %1365 = call float @dx.op.unary.f32(i32 6, float %1358)  ; FAbs(value)
  %1366 = fcmp fast ogt float %1365, 0x3F847AE140000000
  %1367 = select i1 %1366, float %1362, float %1364
  %1368 = fmul fast float %1367, %1342
  %1369 = fadd fast float %1368, %1356
  %1370 = fcmp fast ogt float %43, 0.000000e+00
  br i1 %1370, label %1371, label %1400, !dx.controlflow.hints !62

; <label>:1371                                    ; preds = %1340
  %1372 = fmul fast float %1315, %60
  %1373 = fadd fast float %1372, %61
  %1374 = call float @dx.op.unary.f32(i32 7, float %1373)  ; Saturate(value)
  %1375 = fsub fast float -0.000000e+00, %57
  %1376 = call float @dx.op.dot2.f32(i32 54, float %1283, float %1284, float %58, float %1375)  ; Dot2(ax,ay,bx,by)
  %1377 = call float @dx.op.dot2.f32(i32 54, float %1283, float %1284, float %57, float %58)  ; Dot2(ax,ay,bx,by)
  %1378 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 5, i32 1033 })  ; AnnotateHandle(res,props)  resource: TextureCube<4xF32>
  %1379 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1380 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1378, %dx.types.Handle %1379, float %1376, float %1377, float %1311, float undef, i32 undef, i32 undef, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1381 = extractvalue %dx.types.ResRet.f32 %1380, 0
  %1382 = extractvalue %dx.types.ResRet.f32 %1380, 1
  %1383 = extractvalue %dx.types.ResRet.f32 %1380, 2
  %1384 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1378, %dx.types.Handle %1379, float %1376, float %1377, float %1311, float undef, i32 undef, i32 undef, i32 undef, float %62)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1385 = extractvalue %dx.types.ResRet.f32 %1384, 0
  %1386 = extractvalue %dx.types.ResRet.f32 %1384, 1
  %1387 = extractvalue %dx.types.ResRet.f32 %1384, 2
  %1388 = fsub fast float %1381, %1385
  %1389 = fsub fast float %1382, %1386
  %1390 = fsub fast float %1383, %1387
  %1391 = fmul fast float %1388, %1374
  %1392 = fmul fast float %1389, %1374
  %1393 = fmul fast float %1390, %1374
  %1394 = fadd fast float %1391, %1385
  %1395 = fadd fast float %1392, %1386
  %1396 = fadd fast float %1393, %1387
  %1397 = fmul fast float %1394, %36
  %1398 = fmul fast float %1395, %37
  %1399 = fmul fast float %1396, %38
  br label %1400

; <label>:1400                                    ; preds = %1371, %1340
  %1401 = phi float [ %1397, %1371 ], [ %36, %1340 ]
  %1402 = phi float [ %1398, %1371 ], [ %37, %1340 ]
  %1403 = phi float [ %1399, %1371 ], [ %38, %1340 ]
  %1404 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 179)  ; CBufferLoadLegacy(handle,regIndex)
  %1405 = extractvalue %dx.types.CBufRet.f32 %1404, 1
  %1406 = fmul fast float %1405, %46
  %1407 = fmul fast float %1405, %47
  %1408 = fmul fast float %1405, %48
  %1409 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1410 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1411 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1409, %dx.types.Handle %1410, float 5.000000e-01, float 5.000000e-01, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1412 = extractvalue %dx.types.ResRet.f32 %1411, 0
  %1413 = extractvalue %dx.types.ResRet.f32 %1411, 1
  %1414 = extractvalue %dx.types.ResRet.f32 %1411, 2
  %1415 = fmul fast float %1406, %1412
  %1416 = fmul fast float %1407, %1413
  %1417 = fmul fast float %1408, %1414
  %1418 = fadd fast float %1415, %1401
  %1419 = fadd fast float %1416, %1402
  %1420 = fadd fast float %1417, %1403
  %1421 = fcmp fast oge float %50, 0.000000e+00
  %1422 = fcmp fast oeq float %43, 0.000000e+00
  %1423 = and i1 %1422, %1421
  br i1 %1423, label %1424, label %1490, !dx.controlflow.hints !63

; <label>:1424                                    ; preds = %1400
  %1425 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 163)  ; CBufferLoadLegacy(handle,regIndex)
  %1426 = extractvalue %dx.types.CBufRet.f32 %1425, 0
  %1427 = extractvalue %dx.types.CBufRet.f32 %1425, 1
  %1428 = extractvalue %dx.types.CBufRet.f32 %1425, 2
  %1429 = fmul fast float %1405, 0x3FB45F3060000000
  %1430 = fmul fast float %1429, %1426
  %1431 = fmul fast float %1429, %1427
  %1432 = fmul fast float %1429, %1428
  %1433 = fadd fast float %1430, %52
  %1434 = fadd fast float %1431, %53
  %1435 = fadd fast float %1432, %54
  %1436 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 161)  ; CBufferLoadLegacy(handle,regIndex)
  %1437 = extractvalue %dx.types.CBufRet.f32 %1436, 0
  %1438 = extractvalue %dx.types.CBufRet.f32 %1436, 1
  %1439 = extractvalue %dx.types.CBufRet.f32 %1436, 2
  %1440 = call float @dx.op.dot3.f32(i32 55, float %1316, float %1317, float %1318, float %1437, float %1438, float %1439)  ; Dot3(ax,ay,az,bx,by,bz)
  %1441 = call float @dx.op.unary.f32(i32 7, float %1440)  ; Saturate(value)
  %1442 = call float @dx.op.unary.f32(i32 23, float %1441)  ; Log(value)
  %1443 = fmul fast float %1442, %55
  %1444 = call float @dx.op.unary.f32(i32 21, float %1443)  ; Exp(value)
  %1445 = fmul fast float %1444, %1433
  %1446 = fmul fast float %1444, %1434
  %1447 = fmul fast float %1444, %1435
  %1448 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 164)  ; CBufferLoadLegacy(handle,regIndex)
  %1449 = extractvalue %dx.types.CBufRet.f32 %1448, 3
  %1450 = fcmp fast ogt float %1449, 0.000000e+00
  br i1 %1450, label %1451, label %1476

; <label>:1451                                    ; preds = %1424
  %1452 = extractvalue %dx.types.CBufRet.f32 %1448, 0
  %1453 = extractvalue %dx.types.CBufRet.f32 %1448, 1
  %1454 = extractvalue %dx.types.CBufRet.f32 %1448, 2
  %1455 = fmul fast float %1429, %1452
  %1456 = fmul fast float %1429, %1453
  %1457 = fmul fast float %1429, %1454
  %1458 = fadd fast float %1455, %52
  %1459 = fadd fast float %1456, %53
  %1460 = fadd fast float %1457, %54
  %1461 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %19, i32 162)  ; CBufferLoadLegacy(handle,regIndex)
  %1462 = extractvalue %dx.types.CBufRet.f32 %1461, 0
  %1463 = extractvalue %dx.types.CBufRet.f32 %1461, 1
  %1464 = extractvalue %dx.types.CBufRet.f32 %1461, 2
  %1465 = call float @dx.op.dot3.f32(i32 55, float %1316, float %1317, float %1318, float %1462, float %1463, float %1464)  ; Dot3(ax,ay,az,bx,by,bz)
  %1466 = call float @dx.op.unary.f32(i32 7, float %1465)  ; Saturate(value)
  %1467 = call float @dx.op.unary.f32(i32 23, float %1466)  ; Log(value)
  %1468 = fmul fast float %1467, %55
  %1469 = call float @dx.op.unary.f32(i32 21, float %1468)  ; Exp(value)
  %1470 = fmul fast float %1469, %1458
  %1471 = fmul fast float %1469, %1459
  %1472 = fmul fast float %1469, %1460
  %1473 = fadd fast float %1470, %1445
  %1474 = fadd fast float %1471, %1446
  %1475 = fadd fast float %1472, %1447
  br label %1476

; <label>:1476                                    ; preds = %1451, %1424
  %1477 = phi float [ %1473, %1451 ], [ %1445, %1424 ]
  %1478 = phi float [ %1474, %1451 ], [ %1446, %1424 ]
  %1479 = phi float [ %1475, %1451 ], [ %1447, %1424 ]
  %1480 = fsub fast float %1343, %50
  %1481 = call float @dx.op.binary.f32(i32 35, float %1480, float 0.000000e+00)  ; FMax(a,b)
  %1482 = fmul fast float %1369, %1481
  %1483 = fsub fast float -0.000000e+00, %1482
  %1484 = call float @dx.op.unary.f32(i32 21, float %1483)  ; Exp(value)
  %1485 = call float @dx.op.unary.f32(i32 7, float %1484)  ; Saturate(value)
  %1486 = fsub fast float 1.000000e+00, %1485
  %1487 = fmul fast float %1486, %1477
  %1488 = fmul fast float %1486, %1478
  %1489 = fmul fast float %1486, %1479
  br label %1490

; <label>:1490                                    ; preds = %1476, %1400
  %1491 = phi float [ %1487, %1476 ], [ 0.000000e+00, %1400 ]
  %1492 = phi float [ %1488, %1476 ], [ 0.000000e+00, %1400 ]
  %1493 = phi float [ %1489, %1476 ], [ 0.000000e+00, %1400 ]
  %1494 = fmul fast float %1343, %1369
  %1495 = fsub fast float -0.000000e+00, %1494
  %1496 = call float @dx.op.unary.f32(i32 21, float %1495)  ; Exp(value)
  %1497 = call float @dx.op.unary.f32(i32 7, float %1496)  ; Saturate(value)
  %1498 = call float @dx.op.binary.f32(i32 35, float %1497, float %39)  ; FMax(a,b)
  %1499 = fcmp fast ogt float %44, 0.000000e+00
  %1500 = fcmp fast ogt float %1315, %44
  %1501 = and i1 %1499, %1500
  %1502 = select i1 %1501, float 0.000000e+00, float %1491
  %1503 = select i1 %1501, float 0.000000e+00, float %1492
  %1504 = select i1 %1501, float 0.000000e+00, float %1493
  %1505 = select i1 %1501, float 1.000000e+00, float %1498
  %1506 = fsub fast float 1.000000e+00, %1505
  %1507 = fmul fast float %1506, %1418
  %1508 = fmul fast float %1506, %1419
  %1509 = fmul fast float %1506, %1420
  %1510 = fadd fast float %1507, %1502
  %1511 = fadd fast float %1508, %1503
  %1512 = fadd fast float %1509, %1504
  %1513 = fcmp fast ogt float %132, 0.000000e+00
  br i1 %1513, label %1514, label %1596

; <label>:1514                                    ; preds = %1490
  %1515 = fmul fast float %1283, 0x3EE4F8B580000000
  %1516 = fmul fast float %1284, 0x3EE4F8B580000000
  %1517 = fmul fast float %1285, 0x3EE4F8B580000000
  %1518 = fcmp fast une float %134, 0.000000e+00
  %1519 = fdiv fast float %1250, %1262
  %1520 = fdiv fast float %1254, %1262
  %1521 = fmul fast float %1519, 5.000000e-01
  %1522 = fmul fast float %1520, 5.000000e-01
  %1523 = fadd fast float %1521, 5.000000e-01
  %1524 = fsub fast float 5.000000e-01, %1522
  %1525 = fmul fast float %1515, %1515
  %1526 = fmul fast float %1516, %1516
  %1527 = fadd fast float %1526, %1525
  %1528 = fmul fast float %1517, %1517
  %1529 = fadd fast float %1527, %1528
  %1530 = call float @dx.op.unary.f32(i32 24, float %1529)  ; Sqrt(value)
  %1531 = fsub fast float %1530, %127
  %1532 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1531)  ; FMax(a,b)
  %1533 = fmul fast float %131, %129
  %1534 = fmul fast float %1533, %1532
  %1535 = call float @dx.op.unary.f32(i32 24, float %1534)  ; Sqrt(value)
  %1536 = fmul fast float %1535, %128
  %1537 = fcmp fast olt float %1536, 0x3FE6A09E60000000
  br i1 %1537, label %1538, label %1542

; <label>:1538                                    ; preds = %1514
  %1539 = fmul fast float %1536, %1536
  %1540 = fmul fast float %1539, 2.000000e+00
  %1541 = call float @dx.op.unary.f32(i32 7, float %1540)  ; Saturate(value)
  br label %1542

; <label>:1542                                    ; preds = %1538, %1514
  %1543 = phi float [ %1541, %1538 ], [ 1.000000e+00, %1514 ]
  %1544 = fmul fast float %1532, 1.000000e+05
  %1545 = call float @dx.op.unary.f32(i32 7, float %1544)  ; Saturate(value)
  %1546 = fmul fast float %1545, %1543
  br i1 %1518, label %1547, label %1574

; <label>:1547                                    ; preds = %1542
  %1548 = call float @dx.op.dot3.f32(i32 55, float %1515, float %1516, float %1517, float %1515, float %1516, float %1517)  ; Dot3(ax,ay,az,bx,by,bz)
  %1549 = call float @dx.op.unary.f32(i32 25, float %1548)  ; Rsqrt(value)
  %1550 = fmul fast float %1549, %1515
  %1551 = fmul fast float %1549, %1516
  %1552 = fmul fast float %1549, %1517
  %1553 = fmul fast float %1552, %1552
  %1554 = fsub fast float 1.000000e+00, %1553
  %1555 = call float @dx.op.unary.f32(i32 24, float %1554)  ; Sqrt(value)
  %1556 = fdiv fast float %1550, %1555
  %1557 = fdiv fast float %1551, %1555
  %1558 = call float @dx.op.unary.f32(i32 15, float %1556)  ; Acos(value)
  %1559 = fcmp fast olt float %1557, 0.000000e+00
  %1560 = fsub fast float 0x401921FB60000000, %1558
  %1561 = select i1 %1559, float %1560, float %1558
  %1562 = fmul fast float %1561, 0x3FC45F3060000000
  %1563 = fmul fast float %124, 5.000000e-01
  %1564 = fadd fast float %1562, %1563
  %1565 = fadd fast float %1552, %125
  %1566 = fmul fast float %1565, 5.000000e-01
  %1567 = fadd fast float %1566, 5.000000e-01
  %1568 = fadd fast float %122, 1.000000e+00
  %1569 = fadd fast float %123, 1.000000e+00
  %1570 = fdiv fast float %122, %1568
  %1571 = fdiv fast float %123, %1569
  %1572 = fmul fast float %1564, %1570
  %1573 = fmul fast float %1571, %1567
  br label %1574

; <label>:1574                                    ; preds = %1547, %1542
  %1575 = phi float [ %1572, %1547 ], [ %1523, %1542 ]
  %1576 = phi float [ %1573, %1547 ], [ %1524, %1542 ]
  %1577 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1578 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1579 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1577, %dx.types.Handle %1578, float %1575, float %1576, float %1535, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1580 = extractvalue %dx.types.ResRet.f32 %1579, 0
  %1581 = extractvalue %dx.types.ResRet.f32 %1579, 1
  %1582 = extractvalue %dx.types.ResRet.f32 %1579, 2
  %1583 = extractvalue %dx.types.ResRet.f32 %1579, 3
  %1584 = fsub fast float 1.000000e+00, %1583
  %1585 = fmul fast float %1584, %1546
  %1586 = fsub fast float 1.000000e+00, %1585
  %1587 = fmul fast float %1505, %120
  %1588 = fmul fast float %1587, %1546
  %1589 = fmul fast float %1588, %1580
  %1590 = fmul fast float %1588, %1581
  %1591 = fmul fast float %1588, %1582
  %1592 = fadd fast float %1589, %1510
  %1593 = fadd fast float %1590, %1511
  %1594 = fadd fast float %1591, %1512
  %1595 = fmul fast float %1586, %1505
  br label %1596

; <label>:1596                                    ; preds = %1574, %1490
  %1597 = phi float [ %1592, %1574 ], [ %1510, %1490 ]
  %1598 = phi float [ %1593, %1574 ], [ %1511, %1490 ]
  %1599 = phi float [ %1594, %1574 ], [ %1512, %1490 ]
  %1600 = phi float [ %1595, %1574 ], [ %1505, %1490 ]
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %1156)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %1157)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %1158)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %1143)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %1229)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %1230)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %1231)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %1282)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %1096)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %1097)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float %1098)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 3, float %1099)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %1139)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %1140)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %1597)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %1598)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %1599)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %1600)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 0, float %1241)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 1, float %1242)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 2, float %1243)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 0, float %1250)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 1, float %1254)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 2, float %1258)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 3, float %1262)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!25}
!dx.entryPoints = !{!26}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{!5, null, !15, !21}
!5 = !{!6, !8, !9, !10, !11, !12, !13}
!6 = !{i32 0, %"class.TextureCube<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 5, i32 0, !7}
!7 = !{i32 0, i32 9}
!8 = !{i32 1, %"class.Texture2D<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 2, i32 0, !7}
!9 = !{i32 2, %"class.Texture3D<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 4, i32 0, !7}
!10 = !{i32 3, %"class.Buffer<vector<float, 2> >"* undef, !"", i32 0, i32 3, i32 1, i32 10, i32 0, !7}
!11 = !{i32 4, %"class.Buffer<float>"* undef, !"", i32 0, i32 4, i32 1, i32 10, i32 0, !7}
!12 = !{i32 5, %"class.Buffer<float>"* undef, !"", i32 0, i32 5, i32 1, i32 10, i32 0, !7}
!13 = !{i32 6, %"class.Buffer<unsigned int>"* undef, !"", i32 0, i32 6, i32 1, i32 10, i32 0, !14}
!14 = !{i32 0, i32 5}
!15 = !{!16, !17, !18, !19, !20}
!16 = !{i32 0, %hostlayout.UniformBufferConstants_TranslucentBasePass* undef, !"", i32 0, i32 0, i32 1, i32 3404, null}
!17 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5420, null}
!18 = !{i32 2, %hostlayout.UniformBufferConstants_Primitive* undef, !"", i32 0, i32 2, i32 1, i32 736, null}
!19 = !{i32 3, %UniformBufferConstants_NiagaraSpriteVFLooseParameters* undef, !"", i32 0, i32 3, i32 1, i32 60, null}
!20 = !{i32 4, %UniformBufferConstants_NiagaraSpriteVF* undef, !"", i32 0, i32 4, i32 1, i32 596, null}
!21 = !{!22, !23, !24}
!22 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!23 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!24 = !{i32 2, %struct.SamplerState* undef, !"", i32 0, i32 2, i32 1, i32 0, null}
!25 = !{[11 x i32] [i32 9, i32 28, i32 259985408, i32 259989504, i32 0, i32 0, i32 259993600, i32 0, i32 0, i32 0, i32 259997695]}
!26 = !{void ()* @Main, !"Main", !27, !4, !50}
!27 = !{!28, !35, null}
!28 = !{!29, !32, !34}
!29 = !{i32 0, !"ATTRIBUTE", i8 9, i8 0, !30, i8 0, i32 1, i8 2, i32 0, i8 0, !31}
!30 = !{i32 0}
!31 = !{i32 3, i32 3}
!32 = !{i32 1, !"SV_VertexID", i8 5, i8 1, !30, i8 0, i32 1, i8 1, i32 1, i8 0, !33}
!33 = !{i32 3, i32 1}
!34 = !{i32 2, !"SV_InstanceID", i8 5, i8 2, !30, i8 0, i32 1, i8 1, i32 2, i8 0, !33}
!35 = !{!36, !39, !41, !42, !44, !46, !49}
!36 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !37, i8 2, i32 1, i8 4, i32 0, i8 0, !38}
!37 = !{i32 10}
!38 = !{i32 3, i32 15}
!39 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !40, i8 2, i32 1, i8 4, i32 1, i8 0, !38}
!40 = !{i32 11}
!41 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !30, i8 2, i32 1, i8 4, i32 2, i8 0, !38}
!42 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !43, i8 2, i32 1, i8 4, i32 3, i8 0, !38}
!43 = !{i32 1}
!44 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !45, i8 2, i32 1, i8 4, i32 4, i8 0, !38}
!45 = !{i32 7}
!46 = !{i32 5, !"TEXCOORD", i8 9, i8 0, !47, i8 2, i32 1, i8 3, i32 5, i8 0, !48}
!47 = !{i32 9}
!48 = !{i32 3, i32 7}
!49 = !{i32 6, !"SV_Position", i8 9, i8 3, !30, i8 4, i32 1, i8 4, i32 6, i8 0, !38}
!50 = !{i32 5, !30}
!51 = distinct !{!51, !"dx.controlflow.hints", i32 1}
!52 = distinct !{!52, !"dx.controlflow.hints", i32 1}
!53 = distinct !{!53, !"dx.controlflow.hints", i32 1}
!54 = distinct !{!54, !"dx.controlflow.hints", i32 1}
!55 = distinct !{!55, !"dx.controlflow.hints", i32 1}
!56 = distinct !{!56, !"dx.controlflow.hints", i32 1}
!57 = distinct !{!57, !"dx.controlflow.hints", i32 1}
!58 = distinct !{!58, !"dx.controlflow.hints", i32 1}
!59 = distinct !{!59, !"dx.controlflow.hints", i32 1}
!60 = distinct !{!60, !"dx.controlflow.hints", i32 2}
!61 = distinct !{!61, !"dx.controlflow.hints", i32 1}
!62 = distinct !{!62, !"dx.controlflow.hints", i32 1}
!63 = distinct !{!63, !"dx.controlflow.hints", i32 1}
 