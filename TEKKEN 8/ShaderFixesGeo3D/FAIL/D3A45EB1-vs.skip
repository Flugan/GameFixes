;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
; ATTRIBUTE               13   x           1     NONE    uint   x   
; SV_InstanceID            0   x           2   INSTID    uint   x   
; SV_VertexID              0   x           3   VERTID    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD10_centroid      0   xyzw        0     NONE   float   xyzw
; TEXCOORD11_centroid      0   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xyzw        2     NONE   float   xyzw
; PRIMITIVE_ID             0   x           3     NONE    uint   x   
; TEXCOORD                 9   xyz         4     NONE   float   xyz 
; VELOCITY_PREV_POS        0   xyzw        5     NONE   float   xyzw
; SV_Position              0   xyzw        6      POS   float   xyzw
;
; shader hash: a9edb267c5694d00f796913bc065a17d
;
; Pipeline Runtime Information: 
;
; Vertex Shader
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; ATTRIBUTE                0                              
; ATTRIBUTE               13                              
; SV_InstanceID            0                              
; SV_VertexID              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD10_centroid      0                 linear       
; TEXCOORD11_centroid      0                 linear       
; TEXCOORD                 0                 linear       
; PRIMITIVE_ID             0        nointerpolation       
; TEXCOORD                 9                 linear       
; VELOCITY_PREV_POS        0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer $Globals
; {
;
;   struct $Globals
;   {
;
;       float4 DepthOfFieldParams;                    ; Offset:    0
;       uint bSceneLightingChannelsValid;             ; Offset:   16
;       uint bIsGPUSkinPassThrough;                   ; Offset:   20
;   
;   } $Globals;                                       ; Offset:    0 Size:    24
;
; }
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct hostlayout.UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_PreExposure;                       ; Offset: 2180
;       float View_OneOverPreExposure;                ; Offset: 2184
;       float PrePadding_View_2188;                   ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       uint View_WorldIsPaused;                      ; Offset: 2332
;       float View_CameraCut;                         ; Offset: 2336
;       float View_UnlitViewmodeMask;                 ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeTranslatedCenterAndExtent[6];; Offset: 3184
;       float4 View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float2 View_VolumetricFogScreenUVToHistoryVolumeUV;; Offset: 3704
;       float View_VolumetricFogMaxDistance;          ; Offset: 3712
;       float PrePadding_View_3716;                   ; Offset: 3716
;       float PrePadding_View_3720;                   ; Offset: 3720
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3744
;       float PrePadding_View_3756;                   ; Offset: 3756
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3760
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3772
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3776
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3788
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3792
;       float PrePadding_View_3796;                   ; Offset: 3796
;       float PrePadding_View_3800;                   ; Offset: 3800
;       float PrePadding_View_3804;                   ; Offset: 3804
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3808
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3840
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3844
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3848
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3852
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3856
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3860
;       uint PrePadding_View_3864;                    ; Offset: 3864
;       uint PrePadding_View_3868;                    ; Offset: 3868
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3872
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3888
;       float PrePadding_View_3896;                   ; Offset: 3896
;       float PrePadding_View_3900;                   ; Offset: 3900
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3904
;       float View_OverrideLandscapeLOD;              ; Offset: 3920
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3924
;       float View_MinRoughness;                      ; Offset: 3928
;       float PrePadding_View_3932;                   ; Offset: 3932
;       float4 View_HairRenderInfo;                   ; Offset: 3936
;       uint View_EnableSkyLight;                     ; Offset: 3952
;       uint View_HairRenderInfoBits;                 ; Offset: 3956
;       uint View_HairComponents;                     ; Offset: 3960
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3964
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3968
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3984
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 4000
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 4012
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4016
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4020
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4024
;       int View_PhysicsFieldTargetCount;             ; Offset: 4028
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4032
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4544
;       uint View_GPUSceneViewId;                     ; Offset: 4548
;       float View_ViewResolutionFraction;            ; Offset: 4552
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4556
;       float4 View_PolarisCharacterLightMainColorScale;; Offset: 4560
;       float4 View_PolarisCharacterLightEnvColorScale;; Offset: 4576
;       uint View_PolarisContactShadowMask;           ; Offset: 4592
;       float View_PolarisTAAVelocityWeight;          ; Offset: 4596
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5056
;       uint PrePadding_View_5060;                    ; Offset: 5060
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint View_bShadingEnergyConservation;         ; Offset: 5144
;       uint View_bShadingEnergyPreservation;         ; Offset: 5148
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5168
;       uint PrePadding_View_5172;                    ; Offset: 5172
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5176
;       uint PrePadding_View_5180;                    ; Offset: 5180
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5184
;       uint PrePadding_View_5188;                    ; Offset: 5188
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_WaterData;         ; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5248
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5264
;       float PrePadding_View_5268;                   ; Offset: 5268
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5272
;       uint PrePadding_View_5276;                    ; Offset: 5276
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5280
;       uint PrePadding_View_5284;                    ; Offset: 5284
;       uint PrePadding_View_5288;                    ; Offset: 5288
;       uint PrePadding_View_5292;                    ; Offset: 5292
;       float4 View_IESAtlasSizeAndInvSize;           ; Offset: 5296
;       uint BindlessResource_View_IESAtlasTexture;   ; Offset: 5312
;       uint PrePadding_View_5316;                    ; Offset: 5316
;       uint BindlessSampler_View_IESAtlasSampler;    ; Offset: 5320
;       uint PrePadding_View_5324;                    ; Offset: 5324
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5328
;       uint PrePadding_View_5332;                    ; Offset: 5332
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5336
;       uint PrePadding_View_5340;                    ; Offset: 5340
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5344
;       uint PrePadding_View_5348;                    ; Offset: 5348
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5352
;       uint PrePadding_View_5356;                    ; Offset: 5356
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5360
;       uint PrePadding_View_5364;                    ; Offset: 5364
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5368
;       uint PrePadding_View_5372;                    ; Offset: 5372
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5376
;       uint PrePadding_View_5380;                    ; Offset: 5380
;       uint PrePadding_View_5384;                    ; Offset: 5384
;       uint PrePadding_View_5388;                    ; Offset: 5388
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5392
;       float PrePadding_View_5404;                   ; Offset: 5404
;       float3 View_TLASViewTilePosition;             ; Offset: 5408
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5420
;
; }
;
; cbuffer UniformBufferConstants_LocalVFLooseParameters
; {
;
;   struct UniformBufferConstants_LocalVFLooseParameters
;   {
;
;       uint LocalVFLooseParameters_FrameNumber;      ; Offset:    0
;       uint PrePadding_LocalVFLooseParameters_4;     ; Offset:    4
;       uint BindlessResource_LocalVFLooseParameters_GPUSkinPassThroughPositionBuffer;; Offset:    8
;       uint PrePadding_LocalVFLooseParameters_12;    ; Offset:   12
;       uint BindlessResource_LocalVFLooseParameters_GPUSkinPassThroughPreviousPositionBuffer;; Offset:   16
;   
;   } UniformBufferConstants_LocalVFLooseParameters;  ; Offset:    0 Size:    20
;
; }
;
; cbuffer UniformBufferConstants_LocalVF
; {
;
;   struct UniformBufferConstants_LocalVF
;   {
;
;       int4 LocalVF_VertexFetch_Parameters;          ; Offset:    0
;       int LocalVF_PreSkinBaseVertexIndex;           ; Offset:   16
;       uint LocalVF_LODLightmapDataIndex;            ; Offset:   20
;       uint BindlessResource_LocalVF_VertexFetch_TexCoordBuffer;; Offset:   24
;       uint PrePadding_LocalVF_28;                   ; Offset:   28
;       uint BindlessResource_LocalVF_VertexFetch_PositionBuffer;; Offset:   32
;       uint PrePadding_LocalVF_36;                   ; Offset:   36
;       uint BindlessResource_LocalVF_VertexFetch_PreSkinPositionBuffer;; Offset:   40
;       uint PrePadding_LocalVF_44;                   ; Offset:   44
;       uint BindlessResource_LocalVF_VertexFetch_PackedTangentsBuffer;; Offset:   48
;       uint PrePadding_LocalVF_52;                   ; Offset:   52
;       uint BindlessResource_LocalVF_VertexFetch_ColorComponentsBuffer;; Offset:   56
;   
;   } UniformBufferConstants_LocalVF;                 ; Offset:    0 Size:    60
;
; }
;
; cbuffer UniformBufferConstants_MaterialCollection0
; {
;
;   struct UniformBufferConstants_MaterialCollection0
;   {
;
;       float4 MaterialCollection0_Vectors[18];       ; Offset:    0
;   
;   } UniformBufferConstants_MaterialCollection0;     ; Offset:    0 Size:   288
;
; }
;
; cbuffer UniformBufferConstants_Material
; {
;
;   struct UniformBufferConstants_Material
;   {
;
;       float4 Material_PreshaderBuffer[149];         ; Offset:    0
;       uint BindlessResource_Material_Texture2D_0;   ; Offset: 2384
;       uint PrePadding_Material_2388;                ; Offset: 2388
;       uint BindlessSampler_Material_Texture2D_0Sampler;; Offset: 2392
;       uint PrePadding_Material_2396;                ; Offset: 2396
;       uint BindlessResource_Material_Texture2D_1;   ; Offset: 2400
;       uint PrePadding_Material_2404;                ; Offset: 2404
;       uint BindlessSampler_Material_Texture2D_1Sampler;; Offset: 2408
;       uint PrePadding_Material_2412;                ; Offset: 2412
;       uint BindlessResource_Material_Texture2D_2;   ; Offset: 2416
;       uint PrePadding_Material_2420;                ; Offset: 2420
;       uint BindlessSampler_Material_Texture2D_2Sampler;; Offset: 2424
;       uint PrePadding_Material_2428;                ; Offset: 2428
;       uint BindlessResource_Material_Texture2D_3;   ; Offset: 2432
;       uint PrePadding_Material_2436;                ; Offset: 2436
;       uint BindlessSampler_Material_Texture2D_3Sampler;; Offset: 2440
;       uint PrePadding_Material_2444;                ; Offset: 2444
;       uint BindlessResource_Material_Texture2D_4;   ; Offset: 2448
;       uint PrePadding_Material_2452;                ; Offset: 2452
;       uint BindlessSampler_Material_Texture2D_4Sampler;; Offset: 2456
;       uint PrePadding_Material_2460;                ; Offset: 2460
;       uint BindlessResource_Material_Texture2D_5;   ; Offset: 2464
;       uint PrePadding_Material_2468;                ; Offset: 2468
;       uint BindlessSampler_Material_Texture2D_5Sampler;; Offset: 2472
;       uint PrePadding_Material_2476;                ; Offset: 2476
;       uint BindlessResource_Material_Texture2D_6;   ; Offset: 2480
;       uint PrePadding_Material_2484;                ; Offset: 2484
;       uint BindlessSampler_Material_Texture2D_6Sampler;; Offset: 2488
;       uint PrePadding_Material_2492;                ; Offset: 2492
;       uint BindlessResource_Material_Texture2D_7;   ; Offset: 2496
;       uint PrePadding_Material_2500;                ; Offset: 2500
;       uint BindlessSampler_Material_Texture2D_7Sampler;; Offset: 2504
;       uint PrePadding_Material_2508;                ; Offset: 2508
;       uint BindlessResource_Material_Texture2D_8;   ; Offset: 2512
;       uint PrePadding_Material_2516;                ; Offset: 2516
;       uint BindlessSampler_Material_Texture2D_8Sampler;; Offset: 2520
;       uint PrePadding_Material_2524;                ; Offset: 2524
;       uint BindlessResource_Material_Texture2D_9;   ; Offset: 2528
;       uint PrePadding_Material_2532;                ; Offset: 2532
;       uint BindlessSampler_Material_Texture2D_9Sampler;; Offset: 2536
;       uint PrePadding_Material_2540;                ; Offset: 2540
;       uint BindlessResource_Material_Texture2D_10;  ; Offset: 2544
;       uint PrePadding_Material_2548;                ; Offset: 2548
;       uint BindlessSampler_Material_Texture2D_10Sampler;; Offset: 2552
;       uint PrePadding_Material_2556;                ; Offset: 2556
;       uint BindlessResource_Material_Texture2D_11;  ; Offset: 2560
;       uint PrePadding_Material_2564;                ; Offset: 2564
;       uint BindlessSampler_Material_Texture2D_11Sampler;; Offset: 2568
;       uint PrePadding_Material_2572;                ; Offset: 2572
;       uint BindlessResource_Material_Texture2D_12;  ; Offset: 2576
;       uint PrePadding_Material_2580;                ; Offset: 2580
;       uint BindlessSampler_Material_Texture2D_12Sampler;; Offset: 2584
;       uint PrePadding_Material_2588;                ; Offset: 2588
;       uint BindlessResource_Material_Texture2D_13;  ; Offset: 2592
;       uint PrePadding_Material_2596;                ; Offset: 2596
;       uint BindlessSampler_Material_Texture2D_13Sampler;; Offset: 2600
;       uint PrePadding_Material_2604;                ; Offset: 2604
;       uint BindlessResource_Material_Texture2D_14;  ; Offset: 2608
;       uint PrePadding_Material_2612;                ; Offset: 2612
;       uint BindlessSampler_Material_Texture2D_14Sampler;; Offset: 2616
;       uint PrePadding_Material_2620;                ; Offset: 2620
;       uint BindlessResource_Material_Texture2D_15;  ; Offset: 2624
;       uint PrePadding_Material_2628;                ; Offset: 2628
;       uint BindlessSampler_Material_Texture2D_15Sampler;; Offset: 2632
;       uint PrePadding_Material_2636;                ; Offset: 2636
;       uint BindlessResource_Material_Texture2D_16;  ; Offset: 2640
;       uint PrePadding_Material_2644;                ; Offset: 2644
;       uint BindlessSampler_Material_Texture2D_16Sampler;; Offset: 2648
;       uint PrePadding_Material_2652;                ; Offset: 2652
;       uint BindlessResource_Material_Texture2D_17;  ; Offset: 2656
;       uint PrePadding_Material_2660;                ; Offset: 2660
;       uint BindlessSampler_Material_Texture2D_17Sampler;; Offset: 2664
;       uint PrePadding_Material_2668;                ; Offset: 2668
;       uint BindlessResource_Material_Texture2D_18;  ; Offset: 2672
;       uint PrePadding_Material_2676;                ; Offset: 2676
;       uint BindlessSampler_Material_Texture2D_18Sampler;; Offset: 2680
;       uint PrePadding_Material_2684;                ; Offset: 2684
;       uint BindlessResource_Material_Texture2D_19;  ; Offset: 2688
;       uint PrePadding_Material_2692;                ; Offset: 2692
;       uint BindlessSampler_Material_Texture2D_19Sampler;; Offset: 2696
;       uint PrePadding_Material_2700;                ; Offset: 2700
;       uint BindlessResource_Material_Texture2D_20;  ; Offset: 2704
;       uint PrePadding_Material_2708;                ; Offset: 2708
;       uint BindlessSampler_Material_Texture2D_20Sampler;; Offset: 2712
;       uint PrePadding_Material_2716;                ; Offset: 2716
;       uint BindlessResource_Material_Texture2D_21;  ; Offset: 2720
;       uint PrePadding_Material_2724;                ; Offset: 2724
;       uint BindlessSampler_Material_Texture2D_21Sampler;; Offset: 2728
;       uint PrePadding_Material_2732;                ; Offset: 2732
;       uint BindlessResource_Material_Texture2D_22;  ; Offset: 2736
;       uint PrePadding_Material_2740;                ; Offset: 2740
;       uint BindlessSampler_Material_Texture2D_22Sampler;; Offset: 2744
;       uint PrePadding_Material_2748;                ; Offset: 2748
;       uint BindlessResource_Material_Texture2D_23;  ; Offset: 2752
;       uint PrePadding_Material_2756;                ; Offset: 2756
;       uint BindlessSampler_Material_Texture2D_23Sampler;; Offset: 2760
;       uint PrePadding_Material_2764;                ; Offset: 2764
;       uint BindlessResource_Material_Texture2D_24;  ; Offset: 2768
;       uint PrePadding_Material_2772;                ; Offset: 2772
;       uint BindlessSampler_Material_Texture2D_24Sampler;; Offset: 2776
;       uint PrePadding_Material_2780;                ; Offset: 2780
;       uint BindlessResource_Material_Texture2D_25;  ; Offset: 2784
;       uint PrePadding_Material_2788;                ; Offset: 2788
;       uint BindlessSampler_Material_Texture2D_25Sampler;; Offset: 2792
;       uint PrePadding_Material_2796;                ; Offset: 2796
;       uint BindlessSampler_Material_Wrap_WorldGroupSettings;; Offset: 2800
;       uint PrePadding_Material_2804;                ; Offset: 2804
;       uint BindlessSampler_Material_Clamp_WorldGroupSettings;; Offset: 2808
;   
;   } UniformBufferConstants_Material;                ; Offset:    0 Size:  2812
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstancePayloadData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for InstanceCulling_InstanceIdsBuffer
; {
;
;   uint $Element;                                    ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; $Globals                          cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_View       cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LocalVFLooseParameters   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_LocalVF    cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_MaterialCollection0   cbuffer      NA          NA     CB4            cb4     1
; UniformBufferConstants_Material   cbuffer      NA          NA     CB5            cb5     1
; View_PrimitiveSceneData           texture  struct         r/o      T0             t0     1
; View_InstanceSceneData            texture  struct         r/o      T1             t1     1
; View_InstancePayloadData          texture  struct         r/o      T2             t2     1
; InstanceCulling_InstanceIdsBuffer   texture  struct         r/o      T3             t3     1
; LocalVFLooseParameters_GPUSkinPassThroughPreviousPositionBuffer   texture     f32         buf      T4             t4     1
; LocalVF_VertexFetch_TexCoordBuffer   texture     f32         buf      T5             t5     1
; LocalVF_VertexFetch_PackedTangentsBuffer   texture     f32         buf      T6             t6     1
;
;
; ViewId state:
;
; Number of inputs: 13, outputs: 28
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 8, 12 }
;   output 1 depends on inputs: { 4, 8, 12 }
;   output 2 depends on inputs: { 4, 8, 12 }
;   output 4 depends on inputs: { 4, 8, 12 }
;   output 5 depends on inputs: { 4, 8, 12 }
;   output 6 depends on inputs: { 4, 8, 12 }
;   output 7 depends on inputs: { 4, 8, 12 }
;   output 8 depends on inputs: { 12 }
;   output 9 depends on inputs: { 12 }
;   output 12 depends on inputs: { 4, 8 }
;   output 16 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 17 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 18 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 20 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 21 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 22 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 23 depends on inputs: { 0, 1, 2, 4, 8, 12 }
;   output 24 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 25 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 26 depends on inputs: { 0, 1, 2, 4, 8 }
;   output 27 depends on inputs: { 0, 1, 2, 4, 8 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.StructuredBuffer<unsigned int>" = type { i32 }
%"class.Buffer<float>" = type { float }
%"class.Buffer<vector<float, 2> >" = type { <2 x float> }
%"class.Buffer<vector<float, 4> >" = type { <4 x float> }
%"$Globals" = type { <4 x float>, i32, i32 }
%hostlayout.UniformBufferConstants_View = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i32, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, [4 x <4 x float>], <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, <2 x float>, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, <4 x float>, <4 x float>, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, <4 x float>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%UniformBufferConstants_LocalVFLooseParameters = type { i32, i32, i32, i32, i32 }
%UniformBufferConstants_LocalVF = type { <4 x i32>, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_MaterialCollection0 = type { [18 x <4 x float>] }
%UniformBufferConstants_Material = type { [149 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

define void @Main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 6, i32 6, i32 0, i8 0 }, i32 6, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 0 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 0 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 0 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 0 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %6 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 0 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %7 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 5, i32 5, i32 0, i8 2 }, i32 5, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 4, i32 4, i32 0, i8 2 }, i32 4, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %10 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 2 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %13 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 13, i32 2812 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %15 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %9, %dx.types.ResourceProperties { i32 13, i32 288 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %16 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 13, i32 60 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %17 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 13, i32 20 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %18 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %12, %dx.types.ResourceProperties { i32 13, i32 5420 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %19 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 13, i32 24 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %20 = call i32 @dx.op.loadInput.i32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %21 = call i32 @dx.op.loadInput.i32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %22 = call i32 @dx.op.loadInput.i32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %23 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef), !dx.precise !46  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %24 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef), !dx.precise !46  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %25 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef), !dx.precise !46  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %26 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.f32 %26, 0
  %28 = extractvalue %dx.types.CBufRet.f32 %26, 1
  %29 = extractvalue %dx.types.CBufRet.f32 %26, 2
  %30 = extractvalue %dx.types.CBufRet.f32 %26, 3
  %31 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %32 = extractvalue %dx.types.CBufRet.f32 %31, 0
  %33 = extractvalue %dx.types.CBufRet.f32 %31, 1
  %34 = extractvalue %dx.types.CBufRet.f32 %31, 2
  %35 = extractvalue %dx.types.CBufRet.f32 %31, 3
  %36 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %37 = extractvalue %dx.types.CBufRet.f32 %36, 0
  %38 = extractvalue %dx.types.CBufRet.f32 %36, 1
  %39 = extractvalue %dx.types.CBufRet.f32 %36, 2
  %40 = extractvalue %dx.types.CBufRet.f32 %36, 3
  %41 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %42 = extractvalue %dx.types.CBufRet.f32 %41, 0
  %43 = extractvalue %dx.types.CBufRet.f32 %41, 1
  %44 = extractvalue %dx.types.CBufRet.f32 %41, 2
  %45 = extractvalue %dx.types.CBufRet.f32 %41, 3
  %46 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %47 = extractvalue %dx.types.CBufRet.f32 %46, 0
  %48 = extractvalue %dx.types.CBufRet.f32 %46, 1
  %49 = extractvalue %dx.types.CBufRet.f32 %46, 2
  %50 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %51 = extractvalue %dx.types.CBufRet.f32 %50, 0
  %52 = extractvalue %dx.types.CBufRet.f32 %50, 1
  %53 = extractvalue %dx.types.CBufRet.f32 %50, 2
  %54 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 85)  ; CBufferLoadLegacy(handle,regIndex)
  %55 = extractvalue %dx.types.CBufRet.f32 %54, 0
  %56 = extractvalue %dx.types.CBufRet.f32 %54, 1
  %57 = extractvalue %dx.types.CBufRet.f32 %54, 2
  %58 = extractvalue %dx.types.CBufRet.f32 %54, 3
  %59 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 86)  ; CBufferLoadLegacy(handle,regIndex)
  %60 = extractvalue %dx.types.CBufRet.f32 %59, 0
  %61 = extractvalue %dx.types.CBufRet.f32 %59, 1
  %62 = extractvalue %dx.types.CBufRet.f32 %59, 2
  %63 = extractvalue %dx.types.CBufRet.f32 %59, 3
  %64 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 87)  ; CBufferLoadLegacy(handle,regIndex)
  %65 = extractvalue %dx.types.CBufRet.f32 %64, 0
  %66 = extractvalue %dx.types.CBufRet.f32 %64, 1
  %67 = extractvalue %dx.types.CBufRet.f32 %64, 2
  %68 = extractvalue %dx.types.CBufRet.f32 %64, 3
  %69 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 88)  ; CBufferLoadLegacy(handle,regIndex)
  %70 = extractvalue %dx.types.CBufRet.f32 %69, 0
  %71 = extractvalue %dx.types.CBufRet.f32 %69, 1
  %72 = extractvalue %dx.types.CBufRet.f32 %69, 2
  %73 = extractvalue %dx.types.CBufRet.f32 %69, 3
  %74 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %18, i32 108)  ; CBufferLoadLegacy(handle,regIndex)
  %75 = extractvalue %dx.types.CBufRet.f32 %74, 0
  %76 = extractvalue %dx.types.CBufRet.f32 %74, 1
  %77 = extractvalue %dx.types.CBufRet.f32 %74, 2
  %78 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %79 = extractvalue %dx.types.CBufRet.i32 %78, 3
  %80 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 145)  ; CBufferLoadLegacy(handle,regIndex)
  %81 = extractvalue %dx.types.CBufRet.i32 %80, 3
  %82 = fsub float -0.000000e+00, %47
  %83 = fsub float -0.000000e+00, %48
  %84 = fsub float -0.000000e+00, %49
  %85 = icmp slt i32 %22, 0
  br i1 %85, label %86, label %94

; <label>:86                                      ; preds = %0
  %87 = and i32 %22, 2147483647
  %88 = mul i32 %87, 41
  %89 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %90 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %89, i32 %88, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %91 = extractvalue %dx.types.ResRet.f32 %90, 1
  %92 = bitcast float %91 to i32
  %93 = add i32 %92, %21
  br label %100

; <label>:94                                      ; preds = %0
  %95 = add i32 %22, %21
  %96 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 12, i32 4 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=4>
  %97 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %96, i32 %95, i32 0, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %98 = extractvalue %dx.types.ResRet.i32 %97, 0
  %99 = and i32 %98, 268435455
  br label %100

; <label>:100                                     ; preds = %94, %86
  %101 = phi i32 [ %93, %86 ], [ %99, %94 ]
  %102 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %18, i32 284)  ; CBufferLoadLegacy(handle,regIndex)
  %103 = extractvalue %dx.types.CBufRet.i32 %102, 0
  %104 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %6, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %105 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %104, i32 %101, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %106 = extractvalue %dx.types.ResRet.f32 %105, 0
  %107 = bitcast float %106 to i32
  %108 = and i32 %107, 1048575
  %109 = lshr i32 %107, 20
  %110 = icmp eq i32 %108, 1048575
  %111 = mul nuw nsw i32 %108, 41
  br i1 %110, label %424, label %112, !dx.controlflow.hints !47

; <label>:112                                     ; preds = %100
  %113 = extractvalue %dx.types.ResRet.f32 %105, 1
  %114 = bitcast float %113 to i32
  %115 = and i32 %114, 16777215
  %116 = add nuw nsw i32 %111, 26
  %117 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %118 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %117, i32 %116, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %119 = extractvalue %dx.types.ResRet.f32 %118, 3
  %120 = bitcast float %119 to i32
  %121 = add nuw nsw i32 %111, 27
  %122 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %117, i32 %121, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %123 = extractvalue %dx.types.ResRet.f32 %122, 3
  %124 = bitcast float %123 to i32
  %125 = mul i32 %124, %115
  %126 = and i32 %109, 64
  %127 = icmp ne i32 %126, 0
  %128 = and i32 %109, 8
  %129 = and i32 %109, 160
  %130 = icmp ne i32 %129, 0
  %131 = zext i1 %130 to i32
  %132 = select i1 %127, i32 2, i32 %131
  %133 = add i32 %120, %132
  %134 = add i32 %133, %125
  %135 = add nuw nsw i32 %111, 1
  %136 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %117, i32 %135, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %137 = extractvalue %dx.types.ResRet.f32 %136, 0
  %138 = extractvalue %dx.types.ResRet.f32 %136, 1
  %139 = extractvalue %dx.types.ResRet.f32 %136, 2
  %140 = add nuw nsw i32 %111, 14
  %141 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %117, i32 %140, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %142 = extractvalue %dx.types.ResRet.f32 %141, 0
  %143 = extractvalue %dx.types.ResRet.f32 %141, 1
  %144 = extractvalue %dx.types.ResRet.f32 %141, 2
  %145 = extractvalue %dx.types.ResRet.f32 %141, 3
  %146 = add nuw nsw i32 %111, 15
  %147 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %117, i32 %146, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %148 = extractvalue %dx.types.ResRet.f32 %147, 0
  %149 = extractvalue %dx.types.ResRet.f32 %147, 1
  %150 = extractvalue %dx.types.ResRet.f32 %147, 2
  %151 = extractvalue %dx.types.ResRet.f32 %147, 3
  %152 = add nuw nsw i32 %111, 16
  %153 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %117, i32 %152, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %154 = extractvalue %dx.types.ResRet.f32 %153, 0
  %155 = extractvalue %dx.types.ResRet.f32 %153, 1
  %156 = extractvalue %dx.types.ResRet.f32 %153, 2
  %157 = extractvalue %dx.types.ResRet.f32 %153, 3
  %158 = add i32 %103, %101
  %159 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %104, i32 %158, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %160 = extractvalue %dx.types.ResRet.f32 %159, 0
  %161 = extractvalue %dx.types.ResRet.f32 %159, 1
  %162 = extractvalue %dx.types.ResRet.f32 %159, 2
  %163 = extractvalue %dx.types.ResRet.f32 %159, 3
  %164 = bitcast float %160 to i32
  %165 = bitcast float %161 to i32
  %166 = bitcast float %162 to i32
  %167 = bitcast float %163 to i32
  %168 = shl i32 %103, 1
  %169 = add i32 %168, %101
  %170 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %104, i32 %169, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %171 = extractvalue %dx.types.ResRet.f32 %170, 0
  %172 = extractvalue %dx.types.ResRet.f32 %170, 1
  %173 = extractvalue %dx.types.ResRet.f32 %170, 2
  %174 = and i32 %164, 65535
  %175 = uitofp i32 %174 to float
  %176 = lshr i32 %164, 16
  %177 = uitofp i32 %176 to float
  %178 = and i32 %165, 32767
  %179 = uitofp i32 %178 to float
  %180 = fadd float %175, -3.276800e+04
  %181 = fadd float %177, -3.276800e+04
  %182 = fmul float %180, 0x3F00002000000000
  %183 = fmul float %181, 0x3F00002000000000
  %184 = fadd float %179, -1.638400e+04
  %185 = fmul float %184, 0x3F06A0F8E0000000
  %186 = and i32 %165, 32768
  %187 = icmp ne i32 %186, 0
  %188 = fadd float %182, %183
  %189 = fsub float %182, %183
  %190 = call float @dx.op.unary.f32(i32 6, float %188), !dx.precise !46  ; FAbs(value)
  %191 = call float @dx.op.unary.f32(i32 6, float %189), !dx.precise !46  ; FAbs(value)
  %192 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %190, float %191), !dx.precise !46  ; Dot2(ax,ay,bx,by)
  %193 = fsub float 2.000000e+00, %192
  %194 = call float @dx.op.dot3.f32(i32 55, float %188, float %189, float %193, float %188, float %189, float %193), !dx.precise !46  ; Dot3(ax,ay,az,bx,by,bz)
  %195 = call float @dx.op.unary.f32(i32 25, float %194), !dx.precise !46  ; Rsqrt(value)
  %196 = fmul float %188, %195
  %197 = fmul float %189, %195
  %198 = fmul float %193, %195
  %199 = fadd float %198, 1.000000e+00
  %200 = fdiv float 1.000000e+00, %199
  %201 = fmul float %196, %197
  %202 = fmul float %200, %201
  %203 = fsub float -0.000000e+00, %202
  %204 = fmul float %196, %196
  %205 = fmul float %200, %204
  %206 = fsub float 1.000000e+00, %205
  %207 = fmul float %197, %197
  %208 = fmul float %200, %207
  %209 = fsub float 1.000000e+00, %208
  %210 = fmul float %185, %185
  %211 = fsub float 1.000000e+00, %210
  %212 = call float @dx.op.unary.f32(i32 24, float %211), !dx.precise !46  ; Sqrt(value)
  %213 = select i1 %187, float %185, float %212
  %214 = select i1 %187, float %212, float %185
  %215 = fmul float %213, %206
  %216 = fmul float %213, %203
  %217 = fmul float %196, %213
  %218 = fmul float %214, %203
  %219 = fmul float %214, %209
  %220 = fmul float %197, %214
  %221 = fsub float -0.000000e+00, %220
  %222 = fadd float %218, %215
  %223 = fadd float %216, %219
  %224 = fsub float %221, %217
  %225 = fmul float %197, %224
  %226 = fmul float %198, %223
  %227 = fsub float %225, %226
  %228 = fmul float %198, %222
  %229 = fmul float %196, %224
  %230 = fsub float %228, %229
  %231 = fmul float %196, %223
  %232 = fmul float %197, %222
  %233 = fsub float %231, %232
  %234 = lshr i32 %167, 16
  %235 = shl i32 %234, 23
  %236 = add i32 %235, -125829120
  %237 = bitcast i32 %236 to float
  %238 = lshr i32 %166, 16
  %239 = and i32 %166, 65535
  %240 = and i32 %167, 65535
  %241 = uitofp i32 %239 to float
  %242 = uitofp i32 %238 to float
  %243 = uitofp i32 %240 to float
  %244 = fadd float %241, -3.276800e+04
  %245 = fadd float %242, -3.276800e+04
  %246 = fadd float %243, -3.276800e+04
  %247 = fmul float %244, %237
  %248 = fmul float %245, %237
  %249 = fmul float %246, %237
  %250 = fmul float %247, %222
  %251 = fmul float %247, %223
  %252 = fmul float %247, %224
  %253 = fmul float %247, 0.000000e+00
  %254 = fmul float %248, %227
  %255 = fmul float %248, %230
  %256 = fmul float %248, %233
  %257 = fmul float %248, 0.000000e+00
  %258 = fmul float %249, %196
  %259 = fmul float %249, %197
  %260 = fmul float %249, %198
  %261 = fmul float %249, 0.000000e+00
  %262 = call float @dx.op.unary.f32(i32 6, float %247)  ; FAbs(value)
  %263 = call float @dx.op.unary.f32(i32 6, float %248)  ; FAbs(value)
  %264 = call float @dx.op.unary.f32(i32 6, float %249)  ; FAbs(value)
  %265 = fdiv fast float 1.000000e+00, %262
  %266 = fdiv fast float 1.000000e+00, %263
  %267 = fdiv fast float 1.000000e+00, %264
  %268 = and i32 %109, 1
  %269 = icmp ne i32 %268, 0
  %270 = select i1 %269, float -1.000000e+00, float 1.000000e+00
  %271 = icmp eq i32 %134, -1
  %272 = icmp eq i32 %128, 0
  %273 = or i1 %272, %271
  br i1 %273, label %375, label %274, !dx.controlflow.hints !48

; <label>:274                                     ; preds = %112
  %275 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %5, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %276 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %275, i32 %134, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %277 = extractvalue %dx.types.ResRet.f32 %276, 0
  %278 = extractvalue %dx.types.ResRet.f32 %276, 1
  %279 = extractvalue %dx.types.ResRet.f32 %276, 2
  %280 = extractvalue %dx.types.ResRet.f32 %276, 3
  %281 = bitcast float %277 to i32
  %282 = bitcast float %278 to i32
  %283 = bitcast float %279 to i32
  %284 = bitcast float %280 to i32
  %285 = add i32 %134, 1
  %286 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %275, i32 %285, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %287 = extractvalue %dx.types.ResRet.f32 %286, 0
  %288 = extractvalue %dx.types.ResRet.f32 %286, 1
  %289 = extractvalue %dx.types.ResRet.f32 %286, 2
  %290 = and i32 %281, 65535
  %291 = uitofp i32 %290 to float
  %292 = lshr i32 %281, 16
  %293 = uitofp i32 %292 to float
  %294 = and i32 %282, 32767
  %295 = uitofp i32 %294 to float
  %296 = fadd float %291, -3.276800e+04
  %297 = fadd float %293, -3.276800e+04
  %298 = fmul float %296, 0x3F00002000000000
  %299 = fmul float %297, 0x3F00002000000000
  %300 = fadd float %295, -1.638400e+04
  %301 = fmul float %300, 0x3F06A0F8E0000000
  %302 = and i32 %282, 32768
  %303 = icmp ne i32 %302, 0
  %304 = fadd float %298, %299
  %305 = fsub float %298, %299
  %306 = call float @dx.op.unary.f32(i32 6, float %304), !dx.precise !46  ; FAbs(value)
  %307 = call float @dx.op.unary.f32(i32 6, float %305), !dx.precise !46  ; FAbs(value)
  %308 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %306, float %307), !dx.precise !46  ; Dot2(ax,ay,bx,by)
  %309 = fsub float 2.000000e+00, %308
  %310 = call float @dx.op.dot3.f32(i32 55, float %304, float %305, float %309, float %304, float %305, float %309), !dx.precise !46  ; Dot3(ax,ay,az,bx,by,bz)
  %311 = call float @dx.op.unary.f32(i32 25, float %310), !dx.precise !46  ; Rsqrt(value)
  %312 = fmul float %304, %311
  %313 = fmul float %305, %311
  %314 = fmul float %309, %311
  %315 = fadd float %314, 1.000000e+00
  %316 = fdiv float 1.000000e+00, %315
  %317 = fmul float %312, %313
  %318 = fmul float %316, %317
  %319 = fsub float -0.000000e+00, %318
  %320 = fmul float %312, %312
  %321 = fmul float %316, %320
  %322 = fsub float 1.000000e+00, %321
  %323 = fmul float %313, %313
  %324 = fmul float %316, %323
  %325 = fsub float 1.000000e+00, %324
  %326 = fmul float %301, %301
  %327 = fsub float 1.000000e+00, %326
  %328 = call float @dx.op.unary.f32(i32 24, float %327), !dx.precise !46  ; Sqrt(value)
  %329 = select i1 %303, float %301, float %328
  %330 = select i1 %303, float %328, float %301
  %331 = fmul float %329, %322
  %332 = fmul float %329, %319
  %333 = fmul float %312, %329
  %334 = fmul float %330, %319
  %335 = fmul float %330, %325
  %336 = fmul float %313, %330
  %337 = fsub float -0.000000e+00, %336
  %338 = fadd float %334, %331
  %339 = fadd float %332, %335
  %340 = fsub float %337, %333
  %341 = fmul float %313, %340
  %342 = fmul float %314, %339
  %343 = fsub float %341, %342
  %344 = fmul float %314, %338
  %345 = fmul float %312, %340
  %346 = fsub float %344, %345
  %347 = fmul float %312, %339
  %348 = fmul float %313, %338
  %349 = fsub float %347, %348
  %350 = lshr i32 %284, 16
  %351 = shl i32 %350, 23
  %352 = add i32 %351, -125829120
  %353 = bitcast i32 %352 to float
  %354 = lshr i32 %283, 16
  %355 = and i32 %283, 65535
  %356 = and i32 %284, 65535
  %357 = uitofp i32 %355 to float
  %358 = uitofp i32 %354 to float
  %359 = uitofp i32 %356 to float
  %360 = fadd float %357, -3.276800e+04
  %361 = fadd float %358, -3.276800e+04
  %362 = fadd float %359, -3.276800e+04
  %363 = fmul float %360, %353
  %364 = fmul float %361, %353
  %365 = fmul float %362, %353
  %366 = fmul float %363, %338
  %367 = fmul float %363, %339
  %368 = fmul float %363, %340
  %369 = fmul float %364, %343
  %370 = fmul float %364, %346
  %371 = fmul float %364, %349
  %372 = fmul float %365, %312
  %373 = fmul float %365, %313
  %374 = fmul float %365, %314
  br label %424

; <label>:375                                     ; preds = %112
  %376 = fmul float %142, %250
  %377 = call float @dx.op.tertiary.f32(i32 46, float %251, float %143, float %376), !dx.precise !46  ; FMad(a,b,c)
  %378 = call float @dx.op.tertiary.f32(i32 46, float %252, float %144, float %377), !dx.precise !46  ; FMad(a,b,c)
  %379 = call float @dx.op.tertiary.f32(i32 46, float %253, float %145, float %378), !dx.precise !46  ; FMad(a,b,c)
  %380 = fmul float %148, %250
  %381 = call float @dx.op.tertiary.f32(i32 46, float %251, float %149, float %380), !dx.precise !46  ; FMad(a,b,c)
  %382 = call float @dx.op.tertiary.f32(i32 46, float %252, float %150, float %381), !dx.precise !46  ; FMad(a,b,c)
  %383 = call float @dx.op.tertiary.f32(i32 46, float %253, float %151, float %382), !dx.precise !46  ; FMad(a,b,c)
  %384 = fmul float %154, %250
  %385 = call float @dx.op.tertiary.f32(i32 46, float %251, float %155, float %384), !dx.precise !46  ; FMad(a,b,c)
  %386 = call float @dx.op.tertiary.f32(i32 46, float %252, float %156, float %385), !dx.precise !46  ; FMad(a,b,c)
  %387 = call float @dx.op.tertiary.f32(i32 46, float %253, float %157, float %386), !dx.precise !46  ; FMad(a,b,c)
  %388 = fmul float %142, %254
  %389 = call float @dx.op.tertiary.f32(i32 46, float %255, float %143, float %388), !dx.precise !46  ; FMad(a,b,c)
  %390 = call float @dx.op.tertiary.f32(i32 46, float %256, float %144, float %389), !dx.precise !46  ; FMad(a,b,c)
  %391 = call float @dx.op.tertiary.f32(i32 46, float %257, float %145, float %390), !dx.precise !46  ; FMad(a,b,c)
  %392 = fmul float %148, %254
  %393 = call float @dx.op.tertiary.f32(i32 46, float %255, float %149, float %392), !dx.precise !46  ; FMad(a,b,c)
  %394 = call float @dx.op.tertiary.f32(i32 46, float %256, float %150, float %393), !dx.precise !46  ; FMad(a,b,c)
  %395 = call float @dx.op.tertiary.f32(i32 46, float %257, float %151, float %394), !dx.precise !46  ; FMad(a,b,c)
  %396 = fmul float %154, %254
  %397 = call float @dx.op.tertiary.f32(i32 46, float %255, float %155, float %396), !dx.precise !46  ; FMad(a,b,c)
  %398 = call float @dx.op.tertiary.f32(i32 46, float %256, float %156, float %397), !dx.precise !46  ; FMad(a,b,c)
  %399 = call float @dx.op.tertiary.f32(i32 46, float %257, float %157, float %398), !dx.precise !46  ; FMad(a,b,c)
  %400 = fmul float %142, %258
  %401 = call float @dx.op.tertiary.f32(i32 46, float %259, float %143, float %400), !dx.precise !46  ; FMad(a,b,c)
  %402 = call float @dx.op.tertiary.f32(i32 46, float %260, float %144, float %401), !dx.precise !46  ; FMad(a,b,c)
  %403 = call float @dx.op.tertiary.f32(i32 46, float %261, float %145, float %402), !dx.precise !46  ; FMad(a,b,c)
  %404 = fmul float %148, %258
  %405 = call float @dx.op.tertiary.f32(i32 46, float %259, float %149, float %404), !dx.precise !46  ; FMad(a,b,c)
  %406 = call float @dx.op.tertiary.f32(i32 46, float %260, float %150, float %405), !dx.precise !46  ; FMad(a,b,c)
  %407 = call float @dx.op.tertiary.f32(i32 46, float %261, float %151, float %406), !dx.precise !46  ; FMad(a,b,c)
  %408 = fmul float %154, %258
  %409 = call float @dx.op.tertiary.f32(i32 46, float %259, float %155, float %408), !dx.precise !46  ; FMad(a,b,c)
  %410 = call float @dx.op.tertiary.f32(i32 46, float %260, float %156, float %409), !dx.precise !46  ; FMad(a,b,c)
  %411 = call float @dx.op.tertiary.f32(i32 46, float %261, float %157, float %410), !dx.precise !46  ; FMad(a,b,c)
  %412 = fmul float %142, %171
  %413 = call float @dx.op.tertiary.f32(i32 46, float %172, float %143, float %412), !dx.precise !46  ; FMad(a,b,c)
  %414 = call float @dx.op.tertiary.f32(i32 46, float %173, float %144, float %413), !dx.precise !46  ; FMad(a,b,c)
  %415 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %145, float %414), !dx.precise !46  ; FMad(a,b,c)
  %416 = fmul float %148, %171
  %417 = call float @dx.op.tertiary.f32(i32 46, float %172, float %149, float %416), !dx.precise !46  ; FMad(a,b,c)
  %418 = call float @dx.op.tertiary.f32(i32 46, float %173, float %150, float %417), !dx.precise !46  ; FMad(a,b,c)
  %419 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %151, float %418), !dx.precise !46  ; FMad(a,b,c)
  %420 = fmul float %154, %171
  %421 = call float @dx.op.tertiary.f32(i32 46, float %172, float %155, float %420), !dx.precise !46  ; FMad(a,b,c)
  %422 = call float @dx.op.tertiary.f32(i32 46, float %173, float %156, float %421), !dx.precise !46  ; FMad(a,b,c)
  %423 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %157, float %422), !dx.precise !46  ; FMad(a,b,c)
  br label %424

; <label>:424                                     ; preds = %375, %274, %100
  %425 = phi float [ %250, %375 ], [ %250, %274 ], [ 0.000000e+00, %100 ]
  %426 = phi float [ %251, %375 ], [ %251, %274 ], [ 0.000000e+00, %100 ]
  %427 = phi float [ %252, %375 ], [ %252, %274 ], [ 0.000000e+00, %100 ]
  %428 = phi float [ %254, %375 ], [ %254, %274 ], [ 0.000000e+00, %100 ]
  %429 = phi float [ %255, %375 ], [ %255, %274 ], [ 0.000000e+00, %100 ]
  %430 = phi float [ %256, %375 ], [ %256, %274 ], [ 0.000000e+00, %100 ]
  %431 = phi float [ %258, %375 ], [ %258, %274 ], [ 0.000000e+00, %100 ]
  %432 = phi float [ %259, %375 ], [ %259, %274 ], [ 0.000000e+00, %100 ]
  %433 = phi float [ %260, %375 ], [ %260, %274 ], [ 0.000000e+00, %100 ]
  %434 = phi float [ %171, %375 ], [ %171, %274 ], [ 0.000000e+00, %100 ]
  %435 = phi float [ %172, %375 ], [ %172, %274 ], [ 0.000000e+00, %100 ]
  %436 = phi float [ %173, %375 ], [ %173, %274 ], [ 0.000000e+00, %100 ]
  %437 = phi float [ %137, %375 ], [ %137, %274 ], [ 0.000000e+00, %100 ]
  %438 = phi float [ %138, %375 ], [ %138, %274 ], [ 0.000000e+00, %100 ]
  %439 = phi float [ %139, %375 ], [ %139, %274 ], [ 0.000000e+00, %100 ]
  %440 = phi float [ %379, %375 ], [ %366, %274 ], [ 0.000000e+00, %100 ]
  %441 = phi float [ %383, %375 ], [ %367, %274 ], [ 0.000000e+00, %100 ]
  %442 = phi float [ %387, %375 ], [ %368, %274 ], [ 0.000000e+00, %100 ]
  %443 = phi float [ %391, %375 ], [ %369, %274 ], [ 0.000000e+00, %100 ]
  %444 = phi float [ %395, %375 ], [ %370, %274 ], [ 0.000000e+00, %100 ]
  %445 = phi float [ %399, %375 ], [ %371, %274 ], [ 0.000000e+00, %100 ]
  %446 = phi float [ %403, %375 ], [ %372, %274 ], [ 0.000000e+00, %100 ]
  %447 = phi float [ %407, %375 ], [ %373, %274 ], [ 0.000000e+00, %100 ]
  %448 = phi float [ %411, %375 ], [ %374, %274 ], [ 0.000000e+00, %100 ]
  %449 = phi float [ %415, %375 ], [ %287, %274 ], [ 0.000000e+00, %100 ]
  %450 = phi float [ %419, %375 ], [ %288, %274 ], [ 0.000000e+00, %100 ]
  %451 = phi float [ %423, %375 ], [ %289, %274 ], [ 0.000000e+00, %100 ]
  %452 = phi float [ %265, %375 ], [ %265, %274 ], [ 0.000000e+00, %100 ]
  %453 = phi float [ %266, %375 ], [ %266, %274 ], [ 0.000000e+00, %100 ]
  %454 = phi float [ %267, %375 ], [ %267, %274 ], [ 0.000000e+00, %100 ]
  %455 = phi float [ %270, %375 ], [ %270, %274 ], [ 0.000000e+00, %100 ]
  %456 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %457 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %456, i32 %111, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %458 = extractvalue %dx.types.ResRet.f32 %457, 0
  %459 = bitcast float %458 to i32
  %460 = add nuw nsw i32 %111, 31
  %461 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %456, i32 %460, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %462 = extractvalue %dx.types.ResRet.f32 %461, 0
  %463 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %16, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %464 = extractvalue %dx.types.CBufRet.i32 %463, 3
  %465 = add i32 %464, %20
  %466 = shl i32 %465, 1
  %467 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 10, i32 1033 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<4xF32>
  %468 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %467, i32 %466, i32 undef)  ; BufferLoad(srv,index,wot)
  %469 = extractvalue %dx.types.ResRet.f32 %468, 0
  %470 = extractvalue %dx.types.ResRet.f32 %468, 1
  %471 = extractvalue %dx.types.ResRet.f32 %468, 2
  %472 = or i32 %466, 1
  %473 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %467, i32 %472, i32 undef)  ; BufferLoad(srv,index,wot)
  %474 = extractvalue %dx.types.ResRet.f32 %473, 0
  %475 = extractvalue %dx.types.ResRet.f32 %473, 1
  %476 = extractvalue %dx.types.ResRet.f32 %473, 2
  %477 = extractvalue %dx.types.ResRet.f32 %473, 3
  %478 = fmul fast float %475, %471
  %479 = fmul fast float %476, %470
  %480 = fsub fast float %478, %479
  %481 = fmul fast float %476, %469
  %482 = fmul fast float %474, %471
  %483 = fsub fast float %481, %482
  %484 = fmul fast float %474, %470
  %485 = fmul fast float %475, %469
  %486 = fsub fast float %484, %485
  %487 = fmul fast float %480, %477
  %488 = fmul fast float %483, %477
  %489 = fmul fast float %486, %477
  %490 = fmul fast float %488, %476
  %491 = fmul fast float %489, %475
  %492 = fsub fast float %490, %491
  %493 = fmul fast float %489, %474
  %494 = fmul fast float %487, %476
  %495 = fsub fast float %493, %494
  %496 = fmul fast float %487, %475
  %497 = fmul fast float %488, %474
  %498 = fsub fast float %496, %497
  %499 = fmul fast float %492, %477
  %500 = fmul fast float %495, %477
  %501 = fmul fast float %498, %477
  %502 = fmul fast float %452, %425
  %503 = fmul fast float %452, %426
  %504 = fmul fast float %452, %427
  %505 = fmul fast float %453, %428
  %506 = fmul fast float %453, %429
  %507 = fmul fast float %453, %430
  %508 = fmul fast float %454, %431
  %509 = fmul fast float %454, %432
  %510 = fmul fast float %454, %433
  %511 = fmul fast float %499, %502
  %512 = call float @dx.op.tertiary.f32(i32 46, float %500, float %505, float %511)  ; FMad(a,b,c)
  %513 = call float @dx.op.tertiary.f32(i32 46, float %501, float %508, float %512)  ; FMad(a,b,c)
  %514 = fmul fast float %499, %503
  %515 = call float @dx.op.tertiary.f32(i32 46, float %500, float %506, float %514)  ; FMad(a,b,c)
  %516 = call float @dx.op.tertiary.f32(i32 46, float %501, float %509, float %515)  ; FMad(a,b,c)
  %517 = fmul fast float %499, %504
  %518 = call float @dx.op.tertiary.f32(i32 46, float %500, float %507, float %517)  ; FMad(a,b,c)
  %519 = call float @dx.op.tertiary.f32(i32 46, float %501, float %510, float %518)  ; FMad(a,b,c)
  %520 = fmul fast float %474, %502
  %521 = call float @dx.op.tertiary.f32(i32 46, float %475, float %505, float %520)  ; FMad(a,b,c)
  %522 = call float @dx.op.tertiary.f32(i32 46, float %476, float %508, float %521)  ; FMad(a,b,c)
  %523 = fmul fast float %474, %503
  %524 = call float @dx.op.tertiary.f32(i32 46, float %475, float %506, float %523)  ; FMad(a,b,c)
  %525 = call float @dx.op.tertiary.f32(i32 46, float %476, float %509, float %524)  ; FMad(a,b,c)
  %526 = fmul fast float %474, %504
  %527 = call float @dx.op.tertiary.f32(i32 46, float %475, float %507, float %526)  ; FMad(a,b,c)
  %528 = call float @dx.op.tertiary.f32(i32 46, float %476, float %510, float %527)  ; FMad(a,b,c)
  %529 = fmul fast float %477, %455
  %530 = fmul float %23, %425
  %531 = fmul float %23, %426
  %532 = fmul float %23, %427
  %533 = fmul float %24, %428
  %534 = fmul float %24, %429
  %535 = fmul float %24, %430
  %536 = fadd float %530, %533
  %537 = fadd float %531, %534
  %538 = fadd float %532, %535
  %539 = fmul float %25, %431
  %540 = fmul float %25, %432
  %541 = fmul float %25, %433
  %542 = fadd float %536, %539
  %543 = fadd float %537, %540
  %544 = fadd float %538, %541
  %545 = fadd float %51, %434
  %546 = fadd float %52, %435
  %547 = fadd float %53, %436
  %548 = fsub float %437, %47
  %549 = fsub float %438, %48
  %550 = fsub float %439, %49
  %551 = fmul float %548, 2.097152e+06
  %552 = fmul float %549, 2.097152e+06
  %553 = fmul float %550, 2.097152e+06
  %554 = fadd float %545, %551
  %555 = fadd float %546, %552
  %556 = fadd float %547, %553
  %557 = fadd float %542, %554
  %558 = fadd float %543, %555
  %559 = fadd float %544, %556
  %560 = extractvalue %dx.types.CBufRet.i32 %463, 1
  %561 = add i32 %560, -1
  %562 = call i32 @dx.op.binary.i32(i32 40, i32 0, i32 %561)  ; UMin(a,b)
  %563 = mul i32 %465, %560
  %564 = add i32 %563, %562
  %565 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 10, i32 521 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<2xF32>
  %566 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %565, i32 %564, i32 undef)  ; BufferLoad(srv,index,wot)
  %567 = extractvalue %dx.types.ResRet.f32 %566, 0
  %568 = extractvalue %dx.types.ResRet.f32 %566, 1
  %569 = and i32 %459, 32768
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %796, label %571, !dx.controlflow.hints !49

; <label>:571                                     ; preds = %424
  %572 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %573 = extractvalue %dx.types.CBufRet.f32 %572, 0
  %574 = extractvalue %dx.types.CBufRet.f32 %572, 1
  %575 = extractvalue %dx.types.CBufRet.f32 %572, 2
  %576 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %577 = extractvalue %dx.types.CBufRet.f32 %576, 0
  %578 = extractvalue %dx.types.CBufRet.f32 %576, 1
  %579 = extractvalue %dx.types.CBufRet.f32 %576, 2
  %580 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 94)  ; CBufferLoadLegacy(handle,regIndex)
  %581 = extractvalue %dx.types.CBufRet.f32 %580, 3
  %582 = fsub float %577, %573
  %583 = fsub float %578, %574
  %584 = fsub float %579, %575
  %585 = fmul float %581, %582
  %586 = fmul float %581, %583
  %587 = fmul float %581, %584
  %588 = fadd float %573, %585
  %589 = fadd float %574, %586
  %590 = fadd float %575, %587
  %591 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %592 = extractvalue %dx.types.CBufRet.f32 %591, 0
  %593 = extractvalue %dx.types.CBufRet.f32 %591, 1
  %594 = extractvalue %dx.types.CBufRet.f32 %591, 2
  %595 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 95)  ; CBufferLoadLegacy(handle,regIndex)
  %596 = extractvalue %dx.types.CBufRet.f32 %595, 0
  %597 = fsub float %592, %588
  %598 = fsub float %593, %589
  %599 = fsub float %594, %590
  %600 = fmul float %596, %597
  %601 = fmul float %596, %598
  %602 = fmul float %596, %599
  %603 = fadd float %588, %600
  %604 = fadd float %589, %601
  %605 = fadd float %590, %602
  %606 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %607 = extractvalue %dx.types.CBufRet.f32 %606, 0
  %608 = extractvalue %dx.types.CBufRet.f32 %606, 1
  %609 = extractvalue %dx.types.CBufRet.f32 %606, 2
  %610 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %611 = extractvalue %dx.types.CBufRet.f32 %610, 0
  %612 = extractvalue %dx.types.CBufRet.f32 %610, 1
  %613 = extractvalue %dx.types.CBufRet.f32 %610, 2
  %614 = fsub float %611, %607
  %615 = fsub float %612, %608
  %616 = fsub float %613, %609
  %617 = fmul float %581, %614
  %618 = fmul float %581, %615
  %619 = fmul float %581, %616
  %620 = fadd float %607, %617
  %621 = fadd float %608, %618
  %622 = fadd float %609, %619
  %623 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %624 = extractvalue %dx.types.CBufRet.f32 %623, 0
  %625 = extractvalue %dx.types.CBufRet.f32 %623, 1
  %626 = extractvalue %dx.types.CBufRet.f32 %623, 2
  %627 = fsub float %624, %620
  %628 = fsub float %625, %621
  %629 = fsub float %626, %622
  %630 = fmul float %596, %627
  %631 = fmul float %596, %628
  %632 = fmul float %596, %629
  %633 = fadd float %620, %630
  %634 = fadd float %621, %631
  %635 = fadd float %622, %632
  %636 = extractvalue %dx.types.CBufRet.f32 %595, 1
  %637 = fsub float %633, %603
  %638 = fsub float %634, %604
  %639 = fsub float %635, %605
  %640 = fmul float %636, %637
  %641 = fmul float %636, %638
  %642 = fmul float %636, %639
  %643 = fadd float %603, %640
  %644 = fadd float %604, %641
  %645 = fadd float %605, %642
  %646 = fsub float %557, %51
  %647 = fsub float %558, %52
  %648 = fsub float %559, %53
  %649 = fsub float %643, %646
  %650 = fsub float %644, %647
  %651 = fsub float %645, %648
  %652 = fmul float %649, 0x3EA0000000000000
  %653 = fmul float %649, %652
  %654 = fmul float %652, 2.000000e+00
  %655 = fsub float %654, %47
  %656 = fmul float %655, %82
  %657 = fmul float %650, 0x3EA0000000000000
  %658 = fmul float %650, %657
  %659 = fmul float %657, 2.000000e+00
  %660 = fsub float %659, %48
  %661 = fmul float %660, %83
  %662 = fmul float %651, 0x3EA0000000000000
  %663 = fmul float %651, %662
  %664 = fmul float %662, 2.000000e+00
  %665 = fsub float %664, %49
  %666 = fmul float %665, %84
  %667 = fadd float %653, %658
  %668 = fadd float %656, %661
  %669 = fadd float %663, %667
  %670 = fadd float %666, %668
  %671 = fmul float %669, 0x3EA0000000000000
  %672 = fadd float %671, %670
  %673 = call float @dx.op.unary.f32(i32 25, float %672), !dx.precise !46  ; Rsqrt(value)
  %674 = fmul float %673, 0x3EA0000000000000
  %675 = fmul float %674, %649
  %676 = fmul float %674, %650
  %677 = fmul float %674, %651
  %678 = fmul float %674, %82
  %679 = fmul float %674, %83
  %680 = fmul float %674, %84
  %681 = fmul float %678, 2.097152e+06
  %682 = fmul float %679, 2.097152e+06
  %683 = fmul float %680, 2.097152e+06
  %684 = fadd float %681, %675
  %685 = fadd float %682, %676
  %686 = fadd float %683, %677
  %687 = fsub float %646, %643
  %688 = fsub float %647, %644
  %689 = fsub float %648, %645
  %690 = fmul float %687, 0x3EA0000000000000
  %691 = fmul float %687, %690
  %692 = fmul float %690, 2.000000e+00
  %693 = fadd float %47, %692
  %694 = fmul float %47, %693
  %695 = fmul float %688, 0x3EA0000000000000
  %696 = fmul float %688, %695
  %697 = fmul float %695, 2.000000e+00
  %698 = fadd float %48, %697
  %699 = fmul float %48, %698
  %700 = fmul float %689, 0x3EA0000000000000
  %701 = fmul float %689, %700
  %702 = fmul float %700, 2.000000e+00
  %703 = fadd float %49, %702
  %704 = fmul float %49, %703
  %705 = fadd float %691, %696
  %706 = fadd float %694, %699
  %707 = fadd float %701, %705
  %708 = fadd float %704, %706
  %709 = fmul float %707, 0x3EA0000000000000
  %710 = fadd float %709, %708
  %711 = call float @dx.op.unary.f32(i32 24, float %710), !dx.precise !46  ; Sqrt(value)
  %712 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %713 = extractvalue %dx.types.CBufRet.f32 %712, 0
  %714 = extractvalue %dx.types.CBufRet.f32 %712, 1
  %715 = extractvalue %dx.types.CBufRet.f32 %712, 2
  %716 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %717 = extractvalue %dx.types.CBufRet.f32 %716, 1
  %718 = extractvalue %dx.types.CBufRet.f32 %716, 2
  %719 = extractvalue %dx.types.CBufRet.f32 %716, 3
  %720 = fsub float %719, %714
  %721 = fmul float %581, %720
  %722 = fadd float %714, %721
  %723 = fsub float %717, %722
  %724 = fmul float %596, %723
  %725 = fadd float %722, %724
  %726 = fsub float %713, %715
  %727 = fmul float %726, %581
  %728 = fadd float %715, %727
  %729 = fsub float %718, %728
  %730 = fmul float %596, %729
  %731 = fadd float %728, %730
  %732 = fsub float %731, %725
  %733 = fmul float %636, %732
  %734 = fadd float %725, %733
  %735 = fsub float 0.000000e+00, %734
  %736 = fsub float 0.000000e+00, %711
  %737 = fmul float %736, 2.097152e+06
  %738 = fcmp ogt float %737, %735
  %739 = select i1 %738, float 0.000000e+00, float %735
  %740 = select i1 %738, float 0.000000e+00, float %711
  %741 = fmul float %684, %739
  %742 = fmul float %685, %739
  %743 = fmul float %686, %739
  %744 = fmul float %740, 2.097152e+06
  %745 = fadd float %739, %744
  %746 = fmul float %745, 0.000000e+00
  %747 = fmul float %684, %740
  %748 = fmul float %685, %740
  %749 = fmul float %686, %740
  %750 = fadd float %747, %746
  %751 = fadd float %748, %746
  %752 = fadd float %749, %746
  %753 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 84)  ; CBufferLoadLegacy(handle,regIndex)
  %754 = extractvalue %dx.types.CBufRet.f32 %753, 3
  %755 = fmul float %754, %741
  %756 = fmul float %754, %742
  %757 = fmul float %754, %743
  %758 = fadd float %755, 0.000000e+00
  %759 = fadd float %756, 0.000000e+00
  %760 = fadd float %757, 0.000000e+00
  %761 = fmul float %754, %750
  %762 = fmul float %754, %751
  %763 = fmul float %754, %752
  %764 = fadd float %761, 0.000000e+00
  %765 = fadd float %762, 0.000000e+00
  %766 = fadd float %763, 0.000000e+00
  %767 = fmul float %754, %758
  %768 = fmul float %754, %759
  %769 = fmul float %754, %760
  %770 = fadd float %767, 0.000000e+00
  %771 = fadd float %768, 0.000000e+00
  %772 = fadd float %769, 0.000000e+00
  %773 = fmul float %754, %764
  %774 = fmul float %754, %765
  %775 = fmul float %754, %766
  %776 = fadd float %773, 0.000000e+00
  %777 = fadd float %774, 0.000000e+00
  %778 = fadd float %775, 0.000000e+00
  %779 = fmul float %776, 2.097152e+06
  %780 = fmul float %777, 2.097152e+06
  %781 = fmul float %778, 2.097152e+06
  %782 = fadd float %770, %779
  %783 = fadd float %771, %780
  %784 = fadd float %772, %781
  %785 = fcmp ole float %462, 0.000000e+00
  %786 = fsub float -0.000000e+00, %462
  %787 = call float @dx.op.binary.f32(i32 35, float %782, float %786), !dx.precise !46  ; FMax(a,b)
  %788 = call float @dx.op.binary.f32(i32 35, float %783, float %786), !dx.precise !46  ; FMax(a,b)
  %789 = call float @dx.op.binary.f32(i32 35, float %784, float %786), !dx.precise !46  ; FMax(a,b)
  %790 = call float @dx.op.binary.f32(i32 36, float %787, float %462), !dx.precise !46  ; FMin(a,b)
  %791 = call float @dx.op.binary.f32(i32 36, float %788, float %462), !dx.precise !46  ; FMin(a,b)
  %792 = call float @dx.op.binary.f32(i32 36, float %789, float %462), !dx.precise !46  ; FMin(a,b)
  %793 = select i1 %785, float %782, float %790
  %794 = select i1 %785, float %783, float %791
  %795 = select i1 %785, float %784, float %792
  br label %796

; <label>:796                                     ; preds = %571, %424
  %797 = phi float [ %793, %571 ], [ 0.000000e+00, %424 ]
  %798 = phi float [ %794, %571 ], [ 0.000000e+00, %424 ]
  %799 = phi float [ %795, %571 ], [ 0.000000e+00, %424 ]
  %800 = fadd float %557, %797
  %801 = fadd float %558, %798
  %802 = fadd float %559, %799
  %803 = fmul float %27, %800
  %804 = call float @dx.op.tertiary.f32(i32 46, float %801, float %32, float %803), !dx.precise !46  ; FMad(a,b,c)
  %805 = call float @dx.op.tertiary.f32(i32 46, float %802, float %37, float %804), !dx.precise !46  ; FMad(a,b,c)
  %806 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %42, float %805), !dx.precise !46  ; FMad(a,b,c)
  %807 = fmul float %28, %800
  %808 = call float @dx.op.tertiary.f32(i32 46, float %801, float %33, float %807), !dx.precise !46  ; FMad(a,b,c)
  %809 = call float @dx.op.tertiary.f32(i32 46, float %802, float %38, float %808), !dx.precise !46  ; FMad(a,b,c)
  %810 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %43, float %809), !dx.precise !46  ; FMad(a,b,c)
  %811 = fmul float %29, %800
  %812 = call float @dx.op.tertiary.f32(i32 46, float %801, float %34, float %811), !dx.precise !46  ; FMad(a,b,c)
  %813 = call float @dx.op.tertiary.f32(i32 46, float %802, float %39, float %812), !dx.precise !46  ; FMad(a,b,c)
  %814 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %44, float %813), !dx.precise !46  ; FMad(a,b,c)
  %815 = fmul float %30, %800
  %816 = call float @dx.op.tertiary.f32(i32 46, float %801, float %35, float %815), !dx.precise !46  ; FMad(a,b,c)
  %817 = call float @dx.op.tertiary.f32(i32 46, float %802, float %40, float %816), !dx.precise !46  ; FMad(a,b,c)
  %818 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %45, float %817), !dx.precise !46  ; FMad(a,b,c)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 0, float %806)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 1, float %810)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 2, float %814)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 6, i32 0, i8 3, float %818)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %557)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %558)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %559)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %513)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %516)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %519)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %522)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %525)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %528)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %529)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %567)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %568)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 3, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.i32(i32 5, i32 3, i32 0, i8 0, i32 %108)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  %819 = and i32 %459, 32
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %1118, label %821, !dx.controlflow.hints !50

; <label>:821                                     ; preds = %796
  %822 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %19, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %823 = extractvalue %dx.types.CBufRet.i32 %822, 1
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %842, label %825

; <label>:825                                     ; preds = %821
  %826 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %17, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %827 = extractvalue %dx.types.CBufRet.i32 %826, 0
  %828 = icmp eq i32 %79, %827
  %829 = icmp eq i32 %81, 0
  %830 = and i1 %829, %828
  br i1 %830, label %831, label %842

; <label>:831                                     ; preds = %825
  %832 = mul i32 %20, 3
  %833 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %834 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %833, i32 %832, i32 undef)  ; BufferLoad(srv,index,wot)
  %835 = extractvalue %dx.types.ResRet.f32 %834, 0
  %836 = add i32 %832, 1
  %837 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %833, i32 %836, i32 undef)  ; BufferLoad(srv,index,wot)
  %838 = extractvalue %dx.types.ResRet.f32 %837, 0
  %839 = add i32 %832, 2
  %840 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %833, i32 %839, i32 undef)  ; BufferLoad(srv,index,wot)
  %841 = extractvalue %dx.types.ResRet.f32 %840, 0
  br label %842

; <label>:842                                     ; preds = %831, %825, %821
  %843 = phi float [ %835, %831 ], [ %23, %825 ], [ %23, %821 ]
  %844 = phi float [ %838, %831 ], [ %24, %825 ], [ %24, %821 ]
  %845 = phi float [ %841, %831 ], [ %25, %825 ], [ %25, %821 ]
  %846 = fmul float %440, %843
  %847 = fmul float %441, %843
  %848 = fmul float %442, %843
  %849 = fmul float %443, %844
  %850 = fmul float %444, %844
  %851 = fmul float %445, %844
  %852 = fadd float %846, %849
  %853 = fadd float %847, %850
  %854 = fadd float %848, %851
  %855 = fmul float %446, %845
  %856 = fmul float %447, %845
  %857 = fmul float %448, %845
  %858 = fadd float %852, %855
  %859 = fadd float %853, %856
  %860 = fadd float %854, %857
  %861 = fadd float %75, %449
  %862 = fadd float %76, %450
  %863 = fadd float %77, %451
  %864 = fadd float %551, %861
  %865 = fadd float %552, %862
  %866 = fadd float %553, %863
  %867 = fadd float %864, %858
  %868 = fadd float %865, %859
  %869 = fadd float %866, %860
  br i1 %570, label %1095, label %870, !dx.controlflow.hints !51

; <label>:870                                     ; preds = %842
  %871 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 14)  ; CBufferLoadLegacy(handle,regIndex)
  %872 = extractvalue %dx.types.CBufRet.f32 %871, 0
  %873 = extractvalue %dx.types.CBufRet.f32 %871, 1
  %874 = extractvalue %dx.types.CBufRet.f32 %871, 2
  %875 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %876 = extractvalue %dx.types.CBufRet.f32 %875, 0
  %877 = extractvalue %dx.types.CBufRet.f32 %875, 1
  %878 = extractvalue %dx.types.CBufRet.f32 %875, 2
  %879 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 94)  ; CBufferLoadLegacy(handle,regIndex)
  %880 = extractvalue %dx.types.CBufRet.f32 %879, 3
  %881 = fsub float %876, %872
  %882 = fsub float %877, %873
  %883 = fsub float %878, %874
  %884 = fmul float %880, %881
  %885 = fmul float %880, %882
  %886 = fmul float %880, %883
  %887 = fadd float %872, %884
  %888 = fadd float %873, %885
  %889 = fadd float %874, %886
  %890 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %891 = extractvalue %dx.types.CBufRet.f32 %890, 0
  %892 = extractvalue %dx.types.CBufRet.f32 %890, 1
  %893 = extractvalue %dx.types.CBufRet.f32 %890, 2
  %894 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 95)  ; CBufferLoadLegacy(handle,regIndex)
  %895 = extractvalue %dx.types.CBufRet.f32 %894, 0
  %896 = fsub float %891, %887
  %897 = fsub float %892, %888
  %898 = fsub float %893, %889
  %899 = fmul float %895, %896
  %900 = fmul float %895, %897
  %901 = fmul float %895, %898
  %902 = fadd float %887, %899
  %903 = fadd float %888, %900
  %904 = fadd float %889, %901
  %905 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 15)  ; CBufferLoadLegacy(handle,regIndex)
  %906 = extractvalue %dx.types.CBufRet.f32 %905, 0
  %907 = extractvalue %dx.types.CBufRet.f32 %905, 1
  %908 = extractvalue %dx.types.CBufRet.f32 %905, 2
  %909 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %910 = extractvalue %dx.types.CBufRet.f32 %909, 0
  %911 = extractvalue %dx.types.CBufRet.f32 %909, 1
  %912 = extractvalue %dx.types.CBufRet.f32 %909, 2
  %913 = fsub float %910, %906
  %914 = fsub float %911, %907
  %915 = fsub float %912, %908
  %916 = fmul float %880, %913
  %917 = fmul float %880, %914
  %918 = fmul float %880, %915
  %919 = fadd float %906, %916
  %920 = fadd float %907, %917
  %921 = fadd float %908, %918
  %922 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %923 = extractvalue %dx.types.CBufRet.f32 %922, 0
  %924 = extractvalue %dx.types.CBufRet.f32 %922, 1
  %925 = extractvalue %dx.types.CBufRet.f32 %922, 2
  %926 = fsub float %923, %919
  %927 = fsub float %924, %920
  %928 = fsub float %925, %921
  %929 = fmul float %895, %926
  %930 = fmul float %895, %927
  %931 = fmul float %895, %928
  %932 = fadd float %919, %929
  %933 = fadd float %920, %930
  %934 = fadd float %921, %931
  %935 = extractvalue %dx.types.CBufRet.f32 %894, 1
  %936 = fsub float %932, %902
  %937 = fsub float %933, %903
  %938 = fsub float %934, %904
  %939 = fmul float %935, %936
  %940 = fmul float %935, %937
  %941 = fmul float %935, %938
  %942 = fadd float %902, %939
  %943 = fadd float %903, %940
  %944 = fadd float %904, %941
  %945 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %946 = extractvalue %dx.types.CBufRet.f32 %945, 0
  %947 = extractvalue %dx.types.CBufRet.f32 %945, 1
  %948 = extractvalue %dx.types.CBufRet.f32 %945, 2
  %949 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %950 = extractvalue %dx.types.CBufRet.f32 %949, 1
  %951 = extractvalue %dx.types.CBufRet.f32 %949, 2
  %952 = extractvalue %dx.types.CBufRet.f32 %949, 3
  %953 = fsub float %952, %947
  %954 = fmul float %880, %953
  %955 = fadd float %947, %954
  %956 = fsub float %950, %955
  %957 = fmul float %895, %956
  %958 = fadd float %955, %957
  %959 = fsub float %946, %948
  %960 = fmul float %959, %880
  %961 = fadd float %948, %960
  %962 = fsub float %951, %961
  %963 = fmul float %895, %962
  %964 = fadd float %961, %963
  %965 = fsub float %964, %958
  %966 = fmul float %935, %965
  %967 = fadd float %958, %966
  %968 = fsub float %867, %75
  %969 = fsub float %868, %76
  %970 = fsub float %869, %77
  %971 = fsub float %942, %968
  %972 = fsub float %943, %969
  %973 = fsub float %944, %970
  %974 = fmul float %971, 0x3EA0000000000000
  %975 = fmul float %971, %974
  %976 = fmul float %974, 2.000000e+00
  %977 = fsub float %976, %47
  %978 = fmul float %977, %82
  %979 = fmul float %972, 0x3EA0000000000000
  %980 = fmul float %972, %979
  %981 = fmul float %979, 2.000000e+00
  %982 = fsub float %981, %48
  %983 = fmul float %982, %83
  %984 = fmul float %973, 0x3EA0000000000000
  %985 = fmul float %973, %984
  %986 = fmul float %984, 2.000000e+00
  %987 = fsub float %986, %49
  %988 = fmul float %987, %84
  %989 = fadd float %975, %980
  %990 = fadd float %978, %983
  %991 = fadd float %985, %989
  %992 = fadd float %988, %990
  %993 = fmul float %991, 0x3EA0000000000000
  %994 = fadd float %993, %992
  %995 = call float @dx.op.unary.f32(i32 25, float %994), !dx.precise !46  ; Rsqrt(value)
  %996 = fmul float %995, 0x3EA0000000000000
  %997 = fmul float %971, %996
  %998 = fmul float %972, %996
  %999 = fmul float %973, %996
  %1000 = fmul float %996, %82
  %1001 = fmul float %996, %83
  %1002 = fmul float %996, %84
  %1003 = fmul float %1000, 2.097152e+06
  %1004 = fmul float %1001, 2.097152e+06
  %1005 = fmul float %1002, 2.097152e+06
  %1006 = fadd float %997, %1003
  %1007 = fadd float %998, %1004
  %1008 = fadd float %999, %1005
  %1009 = fsub float %968, %942
  %1010 = fsub float %969, %943
  %1011 = fsub float %970, %944
  %1012 = fmul float %1009, 0x3EA0000000000000
  %1013 = fmul float %1009, %1012
  %1014 = fmul float %1012, 2.000000e+00
  %1015 = fadd float %47, %1014
  %1016 = fmul float %47, %1015
  %1017 = fmul float %1010, 0x3EA0000000000000
  %1018 = fmul float %1010, %1017
  %1019 = fmul float %1017, 2.000000e+00
  %1020 = fadd float %48, %1019
  %1021 = fmul float %48, %1020
  %1022 = fmul float %1011, 0x3EA0000000000000
  %1023 = fmul float %1011, %1022
  %1024 = fmul float %1022, 2.000000e+00
  %1025 = fadd float %49, %1024
  %1026 = fmul float %49, %1025
  %1027 = fadd float %1013, %1018
  %1028 = fadd float %1016, %1021
  %1029 = fadd float %1023, %1027
  %1030 = fadd float %1026, %1028
  %1031 = fmul float %1029, 0x3EA0000000000000
  %1032 = fadd float %1031, %1030
  %1033 = call float @dx.op.unary.f32(i32 24, float %1032), !dx.precise !46  ; Sqrt(value)
  %1034 = fsub float 0.000000e+00, %967
  %1035 = fsub float 0.000000e+00, %1033
  %1036 = fmul float %1035, 2.097152e+06
  %1037 = fcmp ogt float %1036, %1034
  %1038 = select i1 %1037, float 0.000000e+00, float %1034
  %1039 = select i1 %1037, float 0.000000e+00, float %1033
  %1040 = fmul float %1006, %1038
  %1041 = fmul float %1007, %1038
  %1042 = fmul float %1008, %1038
  %1043 = fmul float %1039, 2.097152e+06
  %1044 = fadd float %1038, %1043
  %1045 = fmul float %1044, 0.000000e+00
  %1046 = fmul float %1006, %1039
  %1047 = fmul float %1007, %1039
  %1048 = fmul float %1008, %1039
  %1049 = fadd float %1046, %1045
  %1050 = fadd float %1047, %1045
  %1051 = fadd float %1048, %1045
  %1052 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %14, i32 84)  ; CBufferLoadLegacy(handle,regIndex)
  %1053 = extractvalue %dx.types.CBufRet.f32 %1052, 3
  %1054 = fmul float %1053, %1040
  %1055 = fmul float %1053, %1041
  %1056 = fmul float %1053, %1042
  %1057 = fadd float %1054, 0.000000e+00
  %1058 = fadd float %1055, 0.000000e+00
  %1059 = fadd float %1056, 0.000000e+00
  %1060 = fmul float %1053, %1049
  %1061 = fmul float %1053, %1050
  %1062 = fmul float %1053, %1051
  %1063 = fadd float %1060, 0.000000e+00
  %1064 = fadd float %1061, 0.000000e+00
  %1065 = fadd float %1062, 0.000000e+00
  %1066 = fmul float %1053, %1057
  %1067 = fmul float %1053, %1058
  %1068 = fmul float %1053, %1059
  %1069 = fadd float %1066, 0.000000e+00
  %1070 = fadd float %1067, 0.000000e+00
  %1071 = fadd float %1068, 0.000000e+00
  %1072 = fmul float %1053, %1063
  %1073 = fmul float %1053, %1064
  %1074 = fmul float %1053, %1065
  %1075 = fadd float %1072, 0.000000e+00
  %1076 = fadd float %1073, 0.000000e+00
  %1077 = fadd float %1074, 0.000000e+00
  %1078 = fmul float %1075, 2.097152e+06
  %1079 = fmul float %1076, 2.097152e+06
  %1080 = fmul float %1077, 2.097152e+06
  %1081 = fadd float %1069, %1078
  %1082 = fadd float %1070, %1079
  %1083 = fadd float %1071, %1080
  %1084 = fcmp ole float %462, 0.000000e+00
  %1085 = fsub float -0.000000e+00, %462
  %1086 = call float @dx.op.binary.f32(i32 35, float %1081, float %1085), !dx.precise !46  ; FMax(a,b)
  %1087 = call float @dx.op.binary.f32(i32 35, float %1082, float %1085), !dx.precise !46  ; FMax(a,b)
  %1088 = call float @dx.op.binary.f32(i32 35, float %1083, float %1085), !dx.precise !46  ; FMax(a,b)
  %1089 = call float @dx.op.binary.f32(i32 36, float %1086, float %462), !dx.precise !46  ; FMin(a,b)
  %1090 = call float @dx.op.binary.f32(i32 36, float %1087, float %462), !dx.precise !46  ; FMin(a,b)
  %1091 = call float @dx.op.binary.f32(i32 36, float %1088, float %462), !dx.precise !46  ; FMin(a,b)
  %1092 = select i1 %1084, float %1081, float %1089
  %1093 = select i1 %1084, float %1082, float %1090
  %1094 = select i1 %1084, float %1083, float %1091
  br label %1095

; <label>:1095                                    ; preds = %870, %842
  %1096 = phi float [ %1092, %870 ], [ 0.000000e+00, %842 ]
  %1097 = phi float [ %1093, %870 ], [ 0.000000e+00, %842 ]
  %1098 = phi float [ %1094, %870 ], [ 0.000000e+00, %842 ]
  %1099 = fadd float %867, %1096
  %1100 = fadd float %868, %1097
  %1101 = fadd float %869, %1098
  %1102 = fmul float %55, %1099
  %1103 = call float @dx.op.tertiary.f32(i32 46, float %1100, float %60, float %1102), !dx.precise !46  ; FMad(a,b,c)
  %1104 = call float @dx.op.tertiary.f32(i32 46, float %1101, float %65, float %1103), !dx.precise !46  ; FMad(a,b,c)
  %1105 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %70, float %1104), !dx.precise !46  ; FMad(a,b,c)
  %1106 = fmul float %56, %1099
  %1107 = call float @dx.op.tertiary.f32(i32 46, float %1100, float %61, float %1106), !dx.precise !46  ; FMad(a,b,c)
  %1108 = call float @dx.op.tertiary.f32(i32 46, float %1101, float %66, float %1107), !dx.precise !46  ; FMad(a,b,c)
  %1109 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %71, float %1108), !dx.precise !46  ; FMad(a,b,c)
  %1110 = fmul float %57, %1099
  %1111 = call float @dx.op.tertiary.f32(i32 46, float %1100, float %62, float %1110), !dx.precise !46  ; FMad(a,b,c)
  %1112 = call float @dx.op.tertiary.f32(i32 46, float %1101, float %67, float %1111), !dx.precise !46  ; FMad(a,b,c)
  %1113 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %72, float %1112), !dx.precise !46  ; FMad(a,b,c)
  %1114 = fmul float %58, %1099
  %1115 = call float @dx.op.tertiary.f32(i32 46, float %1100, float %63, float %1114), !dx.precise !46  ; FMad(a,b,c)
  %1116 = call float @dx.op.tertiary.f32(i32 46, float %1101, float %68, float %1115), !dx.precise !46  ; FMad(a,b,c)
  %1117 = call float @dx.op.tertiary.f32(i32 46, float 1.000000e+00, float %73, float %1116), !dx.precise !46  ; FMad(a,b,c)
  br label %1118

; <label>:1118                                    ; preds = %1095, %796
  %1119 = phi float [ %1105, %1095 ], [ 0.000000e+00, %796 ]
  %1120 = phi float [ %1109, %1095 ], [ 0.000000e+00, %796 ]
  %1121 = phi float [ %1113, %1095 ], [ 0.000000e+00, %796 ]
  %1122 = phi float [ %1117, %1095 ], [ 1.000000e+00, %796 ]
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 0, float %1119)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 1, float %1120)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 2, float %1121)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 5, i32 0, i8 3, float %1122)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!23}
!dx.entryPoints = !{!24}

!0 = !{!"dxc(private) 1.7.0.0 (private, 00000000)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{!5, null, !16, null}
!5 = !{!6, !8, !9, !10, !12, !14, !15}
!6 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 0, i32 1, i32 12, i32 0, !7}
!7 = !{i32 1, i32 16}
!8 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 1, i32 1, i32 12, i32 0, !7}
!9 = !{i32 2, %"class.StructuredBuffer<vector<float, 4> >"* undef, !"", i32 0, i32 2, i32 1, i32 12, i32 0, !7}
!10 = !{i32 3, %"class.StructuredBuffer<unsigned int>"* undef, !"", i32 0, i32 3, i32 1, i32 12, i32 0, !11}
!11 = !{i32 1, i32 4}
!12 = !{i32 4, %"class.Buffer<float>"* undef, !"", i32 0, i32 4, i32 1, i32 10, i32 0, !13}
!13 = !{i32 0, i32 9}
!14 = !{i32 5, %"class.Buffer<vector<float, 2> >"* undef, !"", i32 0, i32 5, i32 1, i32 10, i32 0, !13}
!15 = !{i32 6, %"class.Buffer<vector<float, 4> >"* undef, !"", i32 0, i32 6, i32 1, i32 10, i32 0, !13}
!16 = !{!17, !18, !19, !20, !21, !22}
!17 = !{i32 0, %"$Globals"* undef, !"", i32 0, i32 0, i32 1, i32 24, null}
!18 = !{i32 1, %hostlayout.UniformBufferConstants_View* undef, !"", i32 0, i32 1, i32 1, i32 5420, null}
!19 = !{i32 2, %UniformBufferConstants_LocalVFLooseParameters* undef, !"", i32 0, i32 2, i32 1, i32 20, null}
!20 = !{i32 3, %UniformBufferConstants_LocalVF* undef, !"", i32 0, i32 3, i32 1, i32 60, null}
!21 = !{i32 4, %UniformBufferConstants_MaterialCollection0* undef, !"", i32 0, i32 4, i32 1, i32 288, null}
!22 = !{i32 5, %UniformBufferConstants_Material* undef, !"", i32 0, i32 5, i32 1, i32 2812, null}
!23 = !{[15 x i32] [i32 13, i32 28, i32 267845632, i32 267845632, i32 267845632, i32 0, i32 267849975, i32 0, i32 0, i32 0, i32 267849975, i32 0, i32 0, i32 0, i32 15729655]}
!24 = !{void ()* @Main, !"Main", !25, !4, !45}
!25 = !{!26, !35, null}
!26 = !{!27, !30, !33, !34}
!27 = !{i32 0, !"ATTRIBUTE", i8 9, i8 0, !28, i8 0, i32 1, i8 4, i32 0, i8 0, !29}
!28 = !{i32 0}
!29 = !{i32 3, i32 7}
!30 = !{i32 1, !"ATTRIBUTE", i8 5, i8 0, !31, i8 0, i32 1, i8 1, i32 1, i8 0, !32}
!31 = !{i32 13}
!32 = !{i32 3, i32 1}
!33 = !{i32 2, !"SV_InstanceID", i8 5, i8 2, !28, i8 0, i32 1, i8 1, i32 2, i8 0, !32}
!34 = !{i32 3, !"SV_VertexID", i8 5, i8 1, !28, i8 0, i32 1, i8 1, i32 3, i8 0, !32}
!35 = !{!36, !38, !39, !40, !41, !43, !44}
!36 = !{i32 0, !"TEXCOORD10_centroid", i8 9, i8 0, !28, i8 2, i32 1, i8 4, i32 0, i8 0, !37}
!37 = !{i32 3, i32 15}
!38 = !{i32 1, !"TEXCOORD11_centroid", i8 9, i8 0, !28, i8 2, i32 1, i8 4, i32 1, i8 0, !37}
!39 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !28, i8 2, i32 1, i8 4, i32 2, i8 0, !37}
!40 = !{i32 3, !"PRIMITIVE_ID", i8 5, i8 0, !28, i8 1, i32 1, i8 1, i32 3, i8 0, !32}
!41 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !42, i8 2, i32 1, i8 3, i32 4, i8 0, !29}
!42 = !{i32 9}
!43 = !{i32 5, !"VELOCITY_PREV_POS", i8 9, i8 0, !28, i8 2, i32 1, i8 4, i32 5, i8 0, !37}
!44 = !{i32 6, !"SV_Position", i8 9, i8 3, !28, i8 4, i32 1, i8 4, i32 6, i8 0, !37}
!45 = !{i32 0, i64 16, i32 5, !28}
!46 = !{i32 1}
!47 = distinct !{!47, !"dx.controlflow.hints", i32 1}
!48 = distinct !{!48, !"dx.controlflow.hints", i32 1}
!49 = distinct !{!49, !"dx.controlflow.hints", i32 1}
!50 = distinct !{!50, !"dx.controlflow.hints", i32 2}
!51 = distinct !{!51, !"dx.controlflow.hints", i32 1}
 